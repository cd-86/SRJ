// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_rfid.proto

package rbk.protocol;

public final class MessageRfid {
  private MessageRfid() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_RFIDNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_RFIDNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>uint32 count = 2;</code>
     * @return The count.
     */
    int getCount();

    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     * @return The header.
     */
    rbk.protocol.MessageHeader.Message_Header getHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     */
    rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>uint32 strength = 4;</code>
     * @return The strength.
     */
    int getStrength();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_RFIDNode}
   */
  public static final class Message_RFIDNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_RFIDNode)
      Message_RFIDNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_RFIDNode.newBuilder() to construct.
    private Message_RFIDNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_RFIDNode() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_RFIDNode();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFIDNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFIDNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageRfid.Message_RFIDNode.class, rbk.protocol.MessageRfid.Message_RFIDNode.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_ = 0;
    /**
     * <code>uint32 count = 2;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }

    public static final int HEADER_FIELD_NUMBER = 3;
    private rbk.protocol.MessageHeader.Message_Header header_;
    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     * @return The header.
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_Header getHeader() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 3;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }

    public static final int STRENGTH_FIELD_NUMBER = 4;
    private int strength_ = 0;
    /**
     * <code>uint32 strength = 4;</code>
     * @return The strength.
     */
    @java.lang.Override
    public int getStrength() {
      return strength_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (count_ != 0) {
        output.writeUInt32(2, count_);
      }
      if (header_ != null) {
        output.writeMessage(3, getHeader());
      }
      if (strength_ != 0) {
        output.writeUInt32(4, strength_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHeader());
      }
      if (strength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, strength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageRfid.Message_RFIDNode)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageRfid.Message_RFIDNode other = (rbk.protocol.MessageRfid.Message_RFIDNode) obj;

      if (getId()
          != other.getId()) return false;
      if (getCount()
          != other.getCount()) return false;
      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (getStrength()
          != other.getStrength()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + STRENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getStrength();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageRfid.Message_RFIDNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageRfid.Message_RFIDNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageRfid.Message_RFIDNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageRfid.Message_RFIDNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_RFIDNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_RFIDNode)
        rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFIDNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFIDNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageRfid.Message_RFIDNode.class, rbk.protocol.MessageRfid.Message_RFIDNode.Builder.class);
      }

      // Construct using rbk.protocol.MessageRfid.Message_RFIDNode.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        count_ = 0;
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        strength_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFIDNode_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFIDNode getDefaultInstanceForType() {
        return rbk.protocol.MessageRfid.Message_RFIDNode.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFIDNode build() {
        rbk.protocol.MessageRfid.Message_RFIDNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFIDNode buildPartial() {
        rbk.protocol.MessageRfid.Message_RFIDNode result = new rbk.protocol.MessageRfid.Message_RFIDNode(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageRfid.Message_RFIDNode result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.count_ = count_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.header_ = headerBuilder_ == null
              ? header_
              : headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.strength_ = strength_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageRfid.Message_RFIDNode) {
          return mergeFrom((rbk.protocol.MessageRfid.Message_RFIDNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageRfid.Message_RFIDNode other) {
        if (other == rbk.protocol.MessageRfid.Message_RFIDNode.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getStrength() != 0) {
          setStrength(other.getStrength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                count_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                strength_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>uint32 count = 2;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <code>uint32 count = 2;</code>
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(int value) {

        count_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      private rbk.protocol.MessageHeader.Message_Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       * @return The header.
       */
      public rbk.protocol.MessageHeader.Message_Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public Builder setHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public Builder setHeader(
          rbk.protocol.MessageHeader.Message_Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public Builder mergeHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            header_ != null &&
            header_ != rbk.protocol.MessageHeader.Message_Header.getDefaultInstance()) {
            getHeaderBuilder().mergeFrom(value);
          } else {
            header_ = value;
          }
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public Builder clearHeader() {
        bitField0_ = (bitField0_ & ~0x00000004);
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public rbk.protocol.MessageHeader.Message_Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private int strength_ ;
      /**
       * <code>uint32 strength = 4;</code>
       * @return The strength.
       */
      @java.lang.Override
      public int getStrength() {
        return strength_;
      }
      /**
       * <code>uint32 strength = 4;</code>
       * @param value The strength to set.
       * @return This builder for chaining.
       */
      public Builder setStrength(int value) {

        strength_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 strength = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrength() {
        bitField0_ = (bitField0_ & ~0x00000008);
        strength_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_RFIDNode)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_RFIDNode)
    private static final rbk.protocol.MessageRfid.Message_RFIDNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageRfid.Message_RFIDNode();
    }

    public static rbk.protocol.MessageRfid.Message_RFIDNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_RFIDNode>
        PARSER = new com.google.protobuf.AbstractParser<Message_RFIDNode>() {
      @java.lang.Override
      public Message_RFIDNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_RFIDNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_RFIDNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageRfid.Message_RFIDNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_RFIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_RFID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode> 
        getRfidNodesList();
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    rbk.protocol.MessageRfid.Message_RFIDNode getRfidNodes(int index);
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    int getRfidNodesCount();
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    java.util.List<? extends rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder> 
        getRfidNodesOrBuilderList();
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder getRfidNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_RFID}
   */
  public static final class Message_RFID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_RFID)
      Message_RFIDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_RFID.newBuilder() to construct.
    private Message_RFID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_RFID() {
      rfidNodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_RFID();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFID_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageRfid.Message_RFID.class, rbk.protocol.MessageRfid.Message_RFID.Builder.class);
    }

    public static final int RFID_NODES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode> rfidNodes_;
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode> getRfidNodesList() {
      return rfidNodes_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder> 
        getRfidNodesOrBuilderList() {
      return rfidNodes_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    @java.lang.Override
    public int getRfidNodesCount() {
      return rfidNodes_.size();
    }
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageRfid.Message_RFIDNode getRfidNodes(int index) {
      return rfidNodes_.get(index);
    }
    /**
     * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder getRfidNodesOrBuilder(
        int index) {
      return rfidNodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rfidNodes_.size(); i++) {
        output.writeMessage(1, rfidNodes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rfidNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rfidNodes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageRfid.Message_RFID)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageRfid.Message_RFID other = (rbk.protocol.MessageRfid.Message_RFID) obj;

      if (!getRfidNodesList()
          .equals(other.getRfidNodesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRfidNodesCount() > 0) {
        hash = (37 * hash) + RFID_NODES_FIELD_NUMBER;
        hash = (53 * hash) + getRfidNodesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageRfid.Message_RFID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageRfid.Message_RFID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageRfid.Message_RFID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageRfid.Message_RFID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_RFID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_RFID)
        rbk.protocol.MessageRfid.Message_RFIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFID_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageRfid.Message_RFID.class, rbk.protocol.MessageRfid.Message_RFID.Builder.class);
      }

      // Construct using rbk.protocol.MessageRfid.Message_RFID.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (rfidNodesBuilder_ == null) {
          rfidNodes_ = java.util.Collections.emptyList();
        } else {
          rfidNodes_ = null;
          rfidNodesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageRfid.internal_static_rbk_protocol_Message_RFID_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFID getDefaultInstanceForType() {
        return rbk.protocol.MessageRfid.Message_RFID.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFID build() {
        rbk.protocol.MessageRfid.Message_RFID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageRfid.Message_RFID buildPartial() {
        rbk.protocol.MessageRfid.Message_RFID result = new rbk.protocol.MessageRfid.Message_RFID(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(rbk.protocol.MessageRfid.Message_RFID result) {
        if (rfidNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rfidNodes_ = java.util.Collections.unmodifiableList(rfidNodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rfidNodes_ = rfidNodes_;
        } else {
          result.rfidNodes_ = rfidNodesBuilder_.build();
        }
      }

      private void buildPartial0(rbk.protocol.MessageRfid.Message_RFID result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageRfid.Message_RFID) {
          return mergeFrom((rbk.protocol.MessageRfid.Message_RFID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageRfid.Message_RFID other) {
        if (other == rbk.protocol.MessageRfid.Message_RFID.getDefaultInstance()) return this;
        if (rfidNodesBuilder_ == null) {
          if (!other.rfidNodes_.isEmpty()) {
            if (rfidNodes_.isEmpty()) {
              rfidNodes_ = other.rfidNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRfidNodesIsMutable();
              rfidNodes_.addAll(other.rfidNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.rfidNodes_.isEmpty()) {
            if (rfidNodesBuilder_.isEmpty()) {
              rfidNodesBuilder_.dispose();
              rfidNodesBuilder_ = null;
              rfidNodes_ = other.rfidNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rfidNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRfidNodesFieldBuilder() : null;
            } else {
              rfidNodesBuilder_.addAllMessages(other.rfidNodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                rbk.protocol.MessageRfid.Message_RFIDNode m =
                    input.readMessage(
                        rbk.protocol.MessageRfid.Message_RFIDNode.parser(),
                        extensionRegistry);
                if (rfidNodesBuilder_ == null) {
                  ensureRfidNodesIsMutable();
                  rfidNodes_.add(m);
                } else {
                  rfidNodesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode> rfidNodes_ =
        java.util.Collections.emptyList();
      private void ensureRfidNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rfidNodes_ = new java.util.ArrayList<rbk.protocol.MessageRfid.Message_RFIDNode>(rfidNodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageRfid.Message_RFIDNode, rbk.protocol.MessageRfid.Message_RFIDNode.Builder, rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder> rfidNodesBuilder_;

      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode> getRfidNodesList() {
        if (rfidNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rfidNodes_);
        } else {
          return rfidNodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public int getRfidNodesCount() {
        if (rfidNodesBuilder_ == null) {
          return rfidNodes_.size();
        } else {
          return rfidNodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public rbk.protocol.MessageRfid.Message_RFIDNode getRfidNodes(int index) {
        if (rfidNodesBuilder_ == null) {
          return rfidNodes_.get(index);
        } else {
          return rfidNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder setRfidNodes(
          int index, rbk.protocol.MessageRfid.Message_RFIDNode value) {
        if (rfidNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRfidNodesIsMutable();
          rfidNodes_.set(index, value);
          onChanged();
        } else {
          rfidNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder setRfidNodes(
          int index, rbk.protocol.MessageRfid.Message_RFIDNode.Builder builderForValue) {
        if (rfidNodesBuilder_ == null) {
          ensureRfidNodesIsMutable();
          rfidNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          rfidNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder addRfidNodes(rbk.protocol.MessageRfid.Message_RFIDNode value) {
        if (rfidNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRfidNodesIsMutable();
          rfidNodes_.add(value);
          onChanged();
        } else {
          rfidNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder addRfidNodes(
          int index, rbk.protocol.MessageRfid.Message_RFIDNode value) {
        if (rfidNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRfidNodesIsMutable();
          rfidNodes_.add(index, value);
          onChanged();
        } else {
          rfidNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder addRfidNodes(
          rbk.protocol.MessageRfid.Message_RFIDNode.Builder builderForValue) {
        if (rfidNodesBuilder_ == null) {
          ensureRfidNodesIsMutable();
          rfidNodes_.add(builderForValue.build());
          onChanged();
        } else {
          rfidNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder addRfidNodes(
          int index, rbk.protocol.MessageRfid.Message_RFIDNode.Builder builderForValue) {
        if (rfidNodesBuilder_ == null) {
          ensureRfidNodesIsMutable();
          rfidNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          rfidNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder addAllRfidNodes(
          java.lang.Iterable<? extends rbk.protocol.MessageRfid.Message_RFIDNode> values) {
        if (rfidNodesBuilder_ == null) {
          ensureRfidNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rfidNodes_);
          onChanged();
        } else {
          rfidNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder clearRfidNodes() {
        if (rfidNodesBuilder_ == null) {
          rfidNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rfidNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public Builder removeRfidNodes(int index) {
        if (rfidNodesBuilder_ == null) {
          ensureRfidNodesIsMutable();
          rfidNodes_.remove(index);
          onChanged();
        } else {
          rfidNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public rbk.protocol.MessageRfid.Message_RFIDNode.Builder getRfidNodesBuilder(
          int index) {
        return getRfidNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder getRfidNodesOrBuilder(
          int index) {
        if (rfidNodesBuilder_ == null) {
          return rfidNodes_.get(index);  } else {
          return rfidNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public java.util.List<? extends rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder> 
           getRfidNodesOrBuilderList() {
        if (rfidNodesBuilder_ != null) {
          return rfidNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rfidNodes_);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public rbk.protocol.MessageRfid.Message_RFIDNode.Builder addRfidNodesBuilder() {
        return getRfidNodesFieldBuilder().addBuilder(
            rbk.protocol.MessageRfid.Message_RFIDNode.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public rbk.protocol.MessageRfid.Message_RFIDNode.Builder addRfidNodesBuilder(
          int index) {
        return getRfidNodesFieldBuilder().addBuilder(
            index, rbk.protocol.MessageRfid.Message_RFIDNode.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_RFIDNode rfid_nodes = 1;</code>
       */
      public java.util.List<rbk.protocol.MessageRfid.Message_RFIDNode.Builder> 
           getRfidNodesBuilderList() {
        return getRfidNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageRfid.Message_RFIDNode, rbk.protocol.MessageRfid.Message_RFIDNode.Builder, rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder> 
          getRfidNodesFieldBuilder() {
        if (rfidNodesBuilder_ == null) {
          rfidNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rbk.protocol.MessageRfid.Message_RFIDNode, rbk.protocol.MessageRfid.Message_RFIDNode.Builder, rbk.protocol.MessageRfid.Message_RFIDNodeOrBuilder>(
                  rfidNodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rfidNodes_ = null;
        }
        return rfidNodesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_RFID)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_RFID)
    private static final rbk.protocol.MessageRfid.Message_RFID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageRfid.Message_RFID();
    }

    public static rbk.protocol.MessageRfid.Message_RFID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_RFID>
        PARSER = new com.google.protobuf.AbstractParser<Message_RFID>() {
      @java.lang.Override
      public Message_RFID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_RFID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_RFID> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageRfid.Message_RFID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_RFIDNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_RFIDNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_RFID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_RFID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022message_rfid.proto\022\014rbk.protocol\032\024mess" +
      "age_header.proto\"m\n\020Message_RFIDNode\022\n\n\002" +
      "id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022,\n\006header\030\003 \001(\0132" +
      "\034.rbk.protocol.Message_Header\022\020\n\010strengt" +
      "h\030\004 \001(\r\"B\n\014Message_RFID\0222\n\nrfid_nodes\030\001 " +
      "\003(\0132\036.rbk.protocol.Message_RFIDNodeb\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rbk.protocol.MessageHeader.getDescriptor(),
        });
    internal_static_rbk_protocol_Message_RFIDNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_RFIDNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_RFIDNode_descriptor,
        new java.lang.String[] { "Id", "Count", "Header", "Strength", });
    internal_static_rbk_protocol_Message_RFID_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rbk_protocol_Message_RFID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_RFID_descriptor,
        new java.lang.String[] { "RfidNodes", });
    rbk.protocol.MessageHeader.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
