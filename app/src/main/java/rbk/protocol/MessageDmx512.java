// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_dmx512.proto

package rbk.protocol;

public final class MessageDmx512 {
  private MessageDmx512() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_Dmx512OrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Dmx512)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     *电池电量
     * </pre>
     *
     * <code>uint32 battery = 2;</code>
     * @return The battery.
     */
    int getBattery();

    /**
     * <pre>
     *红色阈值
     * </pre>
     *
     * <code>uint32 color_r = 3;</code>
     * @return The colorR.
     */
    int getColorR();

    /**
     * <pre>
     *绿色阈值
     * </pre>
     *
     * <code>uint32 color_g = 4;</code>
     * @return The colorG.
     */
    int getColorG();

    /**
     * <pre>
     *蓝色阈值
     * </pre>
     *
     * <code>uint32 color_b = 5;</code>
     * @return The colorB.
     */
    int getColorB();

    /**
     * <pre>
     *白色阈值
     * </pre>
     *
     * <code>uint32 color_w = 6;</code>
     * @return The colorW.
     */
    int getColorW();

    /**
     * <code>uint32 turn_left_or_right = 7;</code>
     * @return The turnLeftOrRight.
     */
    int getTurnLeftOrRight();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Dmx512}
   */
  public static final class Message_Dmx512 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Dmx512)
      Message_Dmx512OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Dmx512.newBuilder() to construct.
    private Message_Dmx512(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Dmx512() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Dmx512();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageDmx512.internal_static_rbk_protocol_Message_Dmx512_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageDmx512.internal_static_rbk_protocol_Message_Dmx512_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageDmx512.Message_Dmx512.class, rbk.protocol.MessageDmx512.Message_Dmx512.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int BATTERY_FIELD_NUMBER = 2;
    private int battery_ = 0;
    /**
     * <pre>
     *电池电量
     * </pre>
     *
     * <code>uint32 battery = 2;</code>
     * @return The battery.
     */
    @java.lang.Override
    public int getBattery() {
      return battery_;
    }

    public static final int COLOR_R_FIELD_NUMBER = 3;
    private int colorR_ = 0;
    /**
     * <pre>
     *红色阈值
     * </pre>
     *
     * <code>uint32 color_r = 3;</code>
     * @return The colorR.
     */
    @java.lang.Override
    public int getColorR() {
      return colorR_;
    }

    public static final int COLOR_G_FIELD_NUMBER = 4;
    private int colorG_ = 0;
    /**
     * <pre>
     *绿色阈值
     * </pre>
     *
     * <code>uint32 color_g = 4;</code>
     * @return The colorG.
     */
    @java.lang.Override
    public int getColorG() {
      return colorG_;
    }

    public static final int COLOR_B_FIELD_NUMBER = 5;
    private int colorB_ = 0;
    /**
     * <pre>
     *蓝色阈值
     * </pre>
     *
     * <code>uint32 color_b = 5;</code>
     * @return The colorB.
     */
    @java.lang.Override
    public int getColorB() {
      return colorB_;
    }

    public static final int COLOR_W_FIELD_NUMBER = 6;
    private int colorW_ = 0;
    /**
     * <pre>
     *白色阈值
     * </pre>
     *
     * <code>uint32 color_w = 6;</code>
     * @return The colorW.
     */
    @java.lang.Override
    public int getColorW() {
      return colorW_;
    }

    public static final int TURN_LEFT_OR_RIGHT_FIELD_NUMBER = 7;
    private int turnLeftOrRight_ = 0;
    /**
     * <code>uint32 turn_left_or_right = 7;</code>
     * @return The turnLeftOrRight.
     */
    @java.lang.Override
    public int getTurnLeftOrRight() {
      return turnLeftOrRight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (battery_ != 0) {
        output.writeUInt32(2, battery_);
      }
      if (colorR_ != 0) {
        output.writeUInt32(3, colorR_);
      }
      if (colorG_ != 0) {
        output.writeUInt32(4, colorG_);
      }
      if (colorB_ != 0) {
        output.writeUInt32(5, colorB_);
      }
      if (colorW_ != 0) {
        output.writeUInt32(6, colorW_);
      }
      if (turnLeftOrRight_ != 0) {
        output.writeUInt32(7, turnLeftOrRight_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (battery_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, battery_);
      }
      if (colorR_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, colorR_);
      }
      if (colorG_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, colorG_);
      }
      if (colorB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, colorB_);
      }
      if (colorW_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, colorW_);
      }
      if (turnLeftOrRight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, turnLeftOrRight_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageDmx512.Message_Dmx512)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageDmx512.Message_Dmx512 other = (rbk.protocol.MessageDmx512.Message_Dmx512) obj;

      if (getType()
          != other.getType()) return false;
      if (getBattery()
          != other.getBattery()) return false;
      if (getColorR()
          != other.getColorR()) return false;
      if (getColorG()
          != other.getColorG()) return false;
      if (getColorB()
          != other.getColorB()) return false;
      if (getColorW()
          != other.getColorW()) return false;
      if (getTurnLeftOrRight()
          != other.getTurnLeftOrRight()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + BATTERY_FIELD_NUMBER;
      hash = (53 * hash) + getBattery();
      hash = (37 * hash) + COLOR_R_FIELD_NUMBER;
      hash = (53 * hash) + getColorR();
      hash = (37 * hash) + COLOR_G_FIELD_NUMBER;
      hash = (53 * hash) + getColorG();
      hash = (37 * hash) + COLOR_B_FIELD_NUMBER;
      hash = (53 * hash) + getColorB();
      hash = (37 * hash) + COLOR_W_FIELD_NUMBER;
      hash = (53 * hash) + getColorW();
      hash = (37 * hash) + TURN_LEFT_OR_RIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getTurnLeftOrRight();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageDmx512.Message_Dmx512 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageDmx512.Message_Dmx512 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Dmx512}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Dmx512)
        rbk.protocol.MessageDmx512.Message_Dmx512OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageDmx512.internal_static_rbk_protocol_Message_Dmx512_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageDmx512.internal_static_rbk_protocol_Message_Dmx512_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageDmx512.Message_Dmx512.class, rbk.protocol.MessageDmx512.Message_Dmx512.Builder.class);
      }

      // Construct using rbk.protocol.MessageDmx512.Message_Dmx512.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        battery_ = 0;
        colorR_ = 0;
        colorG_ = 0;
        colorB_ = 0;
        colorW_ = 0;
        turnLeftOrRight_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageDmx512.internal_static_rbk_protocol_Message_Dmx512_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageDmx512.Message_Dmx512 getDefaultInstanceForType() {
        return rbk.protocol.MessageDmx512.Message_Dmx512.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageDmx512.Message_Dmx512 build() {
        rbk.protocol.MessageDmx512.Message_Dmx512 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageDmx512.Message_Dmx512 buildPartial() {
        rbk.protocol.MessageDmx512.Message_Dmx512 result = new rbk.protocol.MessageDmx512.Message_Dmx512(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageDmx512.Message_Dmx512 result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.battery_ = battery_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.colorR_ = colorR_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.colorG_ = colorG_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.colorB_ = colorB_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.colorW_ = colorW_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.turnLeftOrRight_ = turnLeftOrRight_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageDmx512.Message_Dmx512) {
          return mergeFrom((rbk.protocol.MessageDmx512.Message_Dmx512)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageDmx512.Message_Dmx512 other) {
        if (other == rbk.protocol.MessageDmx512.Message_Dmx512.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getBattery() != 0) {
          setBattery(other.getBattery());
        }
        if (other.getColorR() != 0) {
          setColorR(other.getColorR());
        }
        if (other.getColorG() != 0) {
          setColorG(other.getColorG());
        }
        if (other.getColorB() != 0) {
          setColorB(other.getColorB());
        }
        if (other.getColorW() != 0) {
          setColorW(other.getColorW());
        }
        if (other.getTurnLeftOrRight() != 0) {
          setTurnLeftOrRight(other.getTurnLeftOrRight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                battery_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                colorR_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                colorG_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                colorB_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                colorW_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                turnLeftOrRight_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int battery_ ;
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>uint32 battery = 2;</code>
       * @return The battery.
       */
      @java.lang.Override
      public int getBattery() {
        return battery_;
      }
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>uint32 battery = 2;</code>
       * @param value The battery to set.
       * @return This builder for chaining.
       */
      public Builder setBattery(int value) {

        battery_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>uint32 battery = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBattery() {
        bitField0_ = (bitField0_ & ~0x00000002);
        battery_ = 0;
        onChanged();
        return this;
      }

      private int colorR_ ;
      /**
       * <pre>
       *红色阈值
       * </pre>
       *
       * <code>uint32 color_r = 3;</code>
       * @return The colorR.
       */
      @java.lang.Override
      public int getColorR() {
        return colorR_;
      }
      /**
       * <pre>
       *红色阈值
       * </pre>
       *
       * <code>uint32 color_r = 3;</code>
       * @param value The colorR to set.
       * @return This builder for chaining.
       */
      public Builder setColorR(int value) {

        colorR_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *红色阈值
       * </pre>
       *
       * <code>uint32 color_r = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        colorR_ = 0;
        onChanged();
        return this;
      }

      private int colorG_ ;
      /**
       * <pre>
       *绿色阈值
       * </pre>
       *
       * <code>uint32 color_g = 4;</code>
       * @return The colorG.
       */
      @java.lang.Override
      public int getColorG() {
        return colorG_;
      }
      /**
       * <pre>
       *绿色阈值
       * </pre>
       *
       * <code>uint32 color_g = 4;</code>
       * @param value The colorG to set.
       * @return This builder for chaining.
       */
      public Builder setColorG(int value) {

        colorG_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *绿色阈值
       * </pre>
       *
       * <code>uint32 color_g = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorG() {
        bitField0_ = (bitField0_ & ~0x00000008);
        colorG_ = 0;
        onChanged();
        return this;
      }

      private int colorB_ ;
      /**
       * <pre>
       *蓝色阈值
       * </pre>
       *
       * <code>uint32 color_b = 5;</code>
       * @return The colorB.
       */
      @java.lang.Override
      public int getColorB() {
        return colorB_;
      }
      /**
       * <pre>
       *蓝色阈值
       * </pre>
       *
       * <code>uint32 color_b = 5;</code>
       * @param value The colorB to set.
       * @return This builder for chaining.
       */
      public Builder setColorB(int value) {

        colorB_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *蓝色阈值
       * </pre>
       *
       * <code>uint32 color_b = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorB() {
        bitField0_ = (bitField0_ & ~0x00000010);
        colorB_ = 0;
        onChanged();
        return this;
      }

      private int colorW_ ;
      /**
       * <pre>
       *白色阈值
       * </pre>
       *
       * <code>uint32 color_w = 6;</code>
       * @return The colorW.
       */
      @java.lang.Override
      public int getColorW() {
        return colorW_;
      }
      /**
       * <pre>
       *白色阈值
       * </pre>
       *
       * <code>uint32 color_w = 6;</code>
       * @param value The colorW to set.
       * @return This builder for chaining.
       */
      public Builder setColorW(int value) {

        colorW_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *白色阈值
       * </pre>
       *
       * <code>uint32 color_w = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorW() {
        bitField0_ = (bitField0_ & ~0x00000020);
        colorW_ = 0;
        onChanged();
        return this;
      }

      private int turnLeftOrRight_ ;
      /**
       * <code>uint32 turn_left_or_right = 7;</code>
       * @return The turnLeftOrRight.
       */
      @java.lang.Override
      public int getTurnLeftOrRight() {
        return turnLeftOrRight_;
      }
      /**
       * <code>uint32 turn_left_or_right = 7;</code>
       * @param value The turnLeftOrRight to set.
       * @return This builder for chaining.
       */
      public Builder setTurnLeftOrRight(int value) {

        turnLeftOrRight_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 turn_left_or_right = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTurnLeftOrRight() {
        bitField0_ = (bitField0_ & ~0x00000040);
        turnLeftOrRight_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Dmx512)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Dmx512)
    private static final rbk.protocol.MessageDmx512.Message_Dmx512 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageDmx512.Message_Dmx512();
    }

    public static rbk.protocol.MessageDmx512.Message_Dmx512 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Dmx512>
        PARSER = new com.google.protobuf.AbstractParser<Message_Dmx512>() {
      @java.lang.Override
      public Message_Dmx512 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Dmx512> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Dmx512> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageDmx512.Message_Dmx512 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Dmx512_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Dmx512_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024message_dmx512.proto\022\014rbk.protocol\"\217\001\n" +
      "\016Message_Dmx512\022\014\n\004type\030\001 \001(\r\022\017\n\007battery" +
      "\030\002 \001(\r\022\017\n\007color_r\030\003 \001(\r\022\017\n\007color_g\030\004 \001(\r" +
      "\022\017\n\007color_b\030\005 \001(\r\022\017\n\007color_w\030\006 \001(\r\022\032\n\022tu" +
      "rn_left_or_right\030\007 \001(\rb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_rbk_protocol_Message_Dmx512_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_Dmx512_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Dmx512_descriptor,
        new java.lang.String[] { "Type", "Battery", "ColorR", "ColorG", "ColorB", "ColorW", "TurnLeftOrRight", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
