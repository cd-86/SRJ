// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_optical_flow_status.proto

package rbk.protocol;

public final class MessageOpticalFlowStatus {
  private MessageOpticalFlowStatus() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_OpticalFlowStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_OpticalFlowStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return The header.
     */
    rbk.protocol.MessageHeader.Message_Header getHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     */
    rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * Is Optical flow data valid
     * </pre>
     *
     * <code>bool isvalid = 2;</code>
     * @return The isvalid.
     */
    boolean getIsvalid();

    /**
     * <pre>
     * Average speed in x-direction
     * </pre>
     *
     * <code>double v_x = 3;</code>
     * @return The vX.
     */
    double getVX();

    /**
     * <pre>
     * Average speed in y-direction
     * </pre>
     *
     * <code>double v_y = 4;</code>
     * @return The vY.
     */
    double getVY();

    /**
     * <pre>
     * Average angle speed in yaw-direction (not use)
     * </pre>
     *
     * <code>double v_yaw = 5;</code>
     * @return The vYaw.
     */
    double getVYaw();

    /**
     * <pre>
     * Time interval between speeds
     * </pre>
     *
     * <code>double time_interval = 6;</code>
     * @return The timeInterval.
     */
    double getTimeInterval();

    /**
     * <pre>
     * only use in external calibration
     * </pre>
     *
     * <code>double dx = 7;</code>
     * @return The dx.
     */
    double getDx();

    /**
     * <pre>
     * 光流插件合成的数据结构： (传感器原始数据)/10000. * distance_to_floor_ * 1000.* k_y(k_y = 1);
     * </pre>
     *
     * <code>double dy = 8;</code>
     * @return The dy.
     */
    double getDy();
  }
  /**
   * <pre>
   * Optical flow module data for anti slip
   * </pre>
   *
   * Protobuf type {@code rbk.protocol.Message_OpticalFlowStatus}
   */
  public static final class Message_OpticalFlowStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_OpticalFlowStatus)
      Message_OpticalFlowStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_OpticalFlowStatus.newBuilder() to construct.
    private Message_OpticalFlowStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_OpticalFlowStatus() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_OpticalFlowStatus();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageOpticalFlowStatus.internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageOpticalFlowStatus.internal_static_rbk_protocol_Message_OpticalFlowStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.class, rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private rbk.protocol.MessageHeader.Message_Header header_;
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_Header getHeader() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }

    public static final int ISVALID_FIELD_NUMBER = 2;
    private boolean isvalid_ = false;
    /**
     * <pre>
     * Is Optical flow data valid
     * </pre>
     *
     * <code>bool isvalid = 2;</code>
     * @return The isvalid.
     */
    @java.lang.Override
    public boolean getIsvalid() {
      return isvalid_;
    }

    public static final int V_X_FIELD_NUMBER = 3;
    private double vX_ = 0D;
    /**
     * <pre>
     * Average speed in x-direction
     * </pre>
     *
     * <code>double v_x = 3;</code>
     * @return The vX.
     */
    @java.lang.Override
    public double getVX() {
      return vX_;
    }

    public static final int V_Y_FIELD_NUMBER = 4;
    private double vY_ = 0D;
    /**
     * <pre>
     * Average speed in y-direction
     * </pre>
     *
     * <code>double v_y = 4;</code>
     * @return The vY.
     */
    @java.lang.Override
    public double getVY() {
      return vY_;
    }

    public static final int V_YAW_FIELD_NUMBER = 5;
    private double vYaw_ = 0D;
    /**
     * <pre>
     * Average angle speed in yaw-direction (not use)
     * </pre>
     *
     * <code>double v_yaw = 5;</code>
     * @return The vYaw.
     */
    @java.lang.Override
    public double getVYaw() {
      return vYaw_;
    }

    public static final int TIME_INTERVAL_FIELD_NUMBER = 6;
    private double timeInterval_ = 0D;
    /**
     * <pre>
     * Time interval between speeds
     * </pre>
     *
     * <code>double time_interval = 6;</code>
     * @return The timeInterval.
     */
    @java.lang.Override
    public double getTimeInterval() {
      return timeInterval_;
    }

    public static final int DX_FIELD_NUMBER = 7;
    private double dx_ = 0D;
    /**
     * <pre>
     * only use in external calibration
     * </pre>
     *
     * <code>double dx = 7;</code>
     * @return The dx.
     */
    @java.lang.Override
    public double getDx() {
      return dx_;
    }

    public static final int DY_FIELD_NUMBER = 8;
    private double dy_ = 0D;
    /**
     * <pre>
     * 光流插件合成的数据结构： (传感器原始数据)/10000. * distance_to_floor_ * 1000.* k_y(k_y = 1);
     * </pre>
     *
     * <code>double dy = 8;</code>
     * @return The dy.
     */
    @java.lang.Override
    public double getDy() {
      return dy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (isvalid_ != false) {
        output.writeBool(2, isvalid_);
      }
      if (java.lang.Double.doubleToRawLongBits(vX_) != 0) {
        output.writeDouble(3, vX_);
      }
      if (java.lang.Double.doubleToRawLongBits(vY_) != 0) {
        output.writeDouble(4, vY_);
      }
      if (java.lang.Double.doubleToRawLongBits(vYaw_) != 0) {
        output.writeDouble(5, vYaw_);
      }
      if (java.lang.Double.doubleToRawLongBits(timeInterval_) != 0) {
        output.writeDouble(6, timeInterval_);
      }
      if (java.lang.Double.doubleToRawLongBits(dx_) != 0) {
        output.writeDouble(7, dx_);
      }
      if (java.lang.Double.doubleToRawLongBits(dy_) != 0) {
        output.writeDouble(8, dy_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (isvalid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isvalid_);
      }
      if (java.lang.Double.doubleToRawLongBits(vX_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, vX_);
      }
      if (java.lang.Double.doubleToRawLongBits(vY_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, vY_);
      }
      if (java.lang.Double.doubleToRawLongBits(vYaw_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, vYaw_);
      }
      if (java.lang.Double.doubleToRawLongBits(timeInterval_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, timeInterval_);
      }
      if (java.lang.Double.doubleToRawLongBits(dx_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, dx_);
      }
      if (java.lang.Double.doubleToRawLongBits(dy_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, dy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus other = (rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (getIsvalid()
          != other.getIsvalid()) return false;
      if (java.lang.Double.doubleToLongBits(getVX())
          != java.lang.Double.doubleToLongBits(
              other.getVX())) return false;
      if (java.lang.Double.doubleToLongBits(getVY())
          != java.lang.Double.doubleToLongBits(
              other.getVY())) return false;
      if (java.lang.Double.doubleToLongBits(getVYaw())
          != java.lang.Double.doubleToLongBits(
              other.getVYaw())) return false;
      if (java.lang.Double.doubleToLongBits(getTimeInterval())
          != java.lang.Double.doubleToLongBits(
              other.getTimeInterval())) return false;
      if (java.lang.Double.doubleToLongBits(getDx())
          != java.lang.Double.doubleToLongBits(
              other.getDx())) return false;
      if (java.lang.Double.doubleToLongBits(getDy())
          != java.lang.Double.doubleToLongBits(
              other.getDy())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + ISVALID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsvalid());
      hash = (37 * hash) + V_X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVX()));
      hash = (37 * hash) + V_Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVY()));
      hash = (37 * hash) + V_YAW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVYaw()));
      hash = (37 * hash) + TIME_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTimeInterval()));
      hash = (37 * hash) + DX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDx()));
      hash = (37 * hash) + DY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDy()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Optical flow module data for anti slip
     * </pre>
     *
     * Protobuf type {@code rbk.protocol.Message_OpticalFlowStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_OpticalFlowStatus)
        rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageOpticalFlowStatus.internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageOpticalFlowStatus.internal_static_rbk_protocol_Message_OpticalFlowStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.class, rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.Builder.class);
      }

      // Construct using rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        isvalid_ = false;
        vX_ = 0D;
        vY_ = 0D;
        vYaw_ = 0D;
        timeInterval_ = 0D;
        dx_ = 0D;
        dy_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageOpticalFlowStatus.internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus getDefaultInstanceForType() {
        return rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus build() {
        rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus buildPartial() {
        rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus result = new rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.header_ = headerBuilder_ == null
              ? header_
              : headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isvalid_ = isvalid_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.vX_ = vX_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.vY_ = vY_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.vYaw_ = vYaw_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.timeInterval_ = timeInterval_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.dx_ = dx_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.dy_ = dy_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus) {
          return mergeFrom((rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus other) {
        if (other == rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getIsvalid() != false) {
          setIsvalid(other.getIsvalid());
        }
        if (other.getVX() != 0D) {
          setVX(other.getVX());
        }
        if (other.getVY() != 0D) {
          setVY(other.getVY());
        }
        if (other.getVYaw() != 0D) {
          setVYaw(other.getVYaw());
        }
        if (other.getTimeInterval() != 0D) {
          setTimeInterval(other.getTimeInterval());
        }
        if (other.getDx() != 0D) {
          setDx(other.getDx());
        }
        if (other.getDy() != 0D) {
          setDy(other.getDy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                isvalid_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 25: {
                vX_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                vY_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                vYaw_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                timeInterval_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                dx_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                dy_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private rbk.protocol.MessageHeader.Message_Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       * @return The header.
       */
      public rbk.protocol.MessageHeader.Message_Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder setHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder setHeader(
          rbk.protocol.MessageHeader.Message_Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder mergeHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            header_ != null &&
            header_ != rbk.protocol.MessageHeader.Message_Header.getDefaultInstance()) {
            getHeaderBuilder().mergeFrom(value);
          } else {
            header_ = value;
          }
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder clearHeader() {
        bitField0_ = (bitField0_ & ~0x00000001);
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public rbk.protocol.MessageHeader.Message_Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private boolean isvalid_ ;
      /**
       * <pre>
       * Is Optical flow data valid
       * </pre>
       *
       * <code>bool isvalid = 2;</code>
       * @return The isvalid.
       */
      @java.lang.Override
      public boolean getIsvalid() {
        return isvalid_;
      }
      /**
       * <pre>
       * Is Optical flow data valid
       * </pre>
       *
       * <code>bool isvalid = 2;</code>
       * @param value The isvalid to set.
       * @return This builder for chaining.
       */
      public Builder setIsvalid(boolean value) {

        isvalid_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Is Optical flow data valid
       * </pre>
       *
       * <code>bool isvalid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsvalid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isvalid_ = false;
        onChanged();
        return this;
      }

      private double vX_ ;
      /**
       * <pre>
       * Average speed in x-direction
       * </pre>
       *
       * <code>double v_x = 3;</code>
       * @return The vX.
       */
      @java.lang.Override
      public double getVX() {
        return vX_;
      }
      /**
       * <pre>
       * Average speed in x-direction
       * </pre>
       *
       * <code>double v_x = 3;</code>
       * @param value The vX to set.
       * @return This builder for chaining.
       */
      public Builder setVX(double value) {

        vX_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average speed in x-direction
       * </pre>
       *
       * <code>double v_x = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vX_ = 0D;
        onChanged();
        return this;
      }

      private double vY_ ;
      /**
       * <pre>
       * Average speed in y-direction
       * </pre>
       *
       * <code>double v_y = 4;</code>
       * @return The vY.
       */
      @java.lang.Override
      public double getVY() {
        return vY_;
      }
      /**
       * <pre>
       * Average speed in y-direction
       * </pre>
       *
       * <code>double v_y = 4;</code>
       * @param value The vY to set.
       * @return This builder for chaining.
       */
      public Builder setVY(double value) {

        vY_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average speed in y-direction
       * </pre>
       *
       * <code>double v_y = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vY_ = 0D;
        onChanged();
        return this;
      }

      private double vYaw_ ;
      /**
       * <pre>
       * Average angle speed in yaw-direction (not use)
       * </pre>
       *
       * <code>double v_yaw = 5;</code>
       * @return The vYaw.
       */
      @java.lang.Override
      public double getVYaw() {
        return vYaw_;
      }
      /**
       * <pre>
       * Average angle speed in yaw-direction (not use)
       * </pre>
       *
       * <code>double v_yaw = 5;</code>
       * @param value The vYaw to set.
       * @return This builder for chaining.
       */
      public Builder setVYaw(double value) {

        vYaw_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Average angle speed in yaw-direction (not use)
       * </pre>
       *
       * <code>double v_yaw = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVYaw() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vYaw_ = 0D;
        onChanged();
        return this;
      }

      private double timeInterval_ ;
      /**
       * <pre>
       * Time interval between speeds
       * </pre>
       *
       * <code>double time_interval = 6;</code>
       * @return The timeInterval.
       */
      @java.lang.Override
      public double getTimeInterval() {
        return timeInterval_;
      }
      /**
       * <pre>
       * Time interval between speeds
       * </pre>
       *
       * <code>double time_interval = 6;</code>
       * @param value The timeInterval to set.
       * @return This builder for chaining.
       */
      public Builder setTimeInterval(double value) {

        timeInterval_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between speeds
       * </pre>
       *
       * <code>double time_interval = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timeInterval_ = 0D;
        onChanged();
        return this;
      }

      private double dx_ ;
      /**
       * <pre>
       * only use in external calibration
       * </pre>
       *
       * <code>double dx = 7;</code>
       * @return The dx.
       */
      @java.lang.Override
      public double getDx() {
        return dx_;
      }
      /**
       * <pre>
       * only use in external calibration
       * </pre>
       *
       * <code>double dx = 7;</code>
       * @param value The dx to set.
       * @return This builder for chaining.
       */
      public Builder setDx(double value) {

        dx_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only use in external calibration
       * </pre>
       *
       * <code>double dx = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDx() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dx_ = 0D;
        onChanged();
        return this;
      }

      private double dy_ ;
      /**
       * <pre>
       * 光流插件合成的数据结构： (传感器原始数据)/10000. * distance_to_floor_ * 1000.* k_y(k_y = 1);
       * </pre>
       *
       * <code>double dy = 8;</code>
       * @return The dy.
       */
      @java.lang.Override
      public double getDy() {
        return dy_;
      }
      /**
       * <pre>
       * 光流插件合成的数据结构： (传感器原始数据)/10000. * distance_to_floor_ * 1000.* k_y(k_y = 1);
       * </pre>
       *
       * <code>double dy = 8;</code>
       * @param value The dy to set.
       * @return This builder for chaining.
       */
      public Builder setDy(double value) {

        dy_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 光流插件合成的数据结构： (传感器原始数据)/10000. * distance_to_floor_ * 1000.* k_y(k_y = 1);
       * </pre>
       *
       * <code>double dy = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDy() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dy_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_OpticalFlowStatus)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_OpticalFlowStatus)
    private static final rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus();
    }

    public static rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_OpticalFlowStatus>
        PARSER = new com.google.protobuf.AbstractParser<Message_OpticalFlowStatus>() {
      @java.lang.Override
      public Message_OpticalFlowStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_OpticalFlowStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_OpticalFlowStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageOpticalFlowStatus.Message_OpticalFlowStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_OpticalFlowStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!message_optical_flow_status.proto\022\014rbk" +
      ".protocol\032\024message_header.proto\"\262\001\n\031Mess" +
      "age_OpticalFlowStatus\022,\n\006header\030\001 \001(\0132\034." +
      "rbk.protocol.Message_Header\022\017\n\007isvalid\030\002" +
      " \001(\010\022\013\n\003v_x\030\003 \001(\001\022\013\n\003v_y\030\004 \001(\001\022\r\n\005v_yaw\030" +
      "\005 \001(\001\022\025\n\rtime_interval\030\006 \001(\001\022\n\n\002dx\030\007 \001(\001" +
      "\022\n\n\002dy\030\010 \001(\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rbk.protocol.MessageHeader.getDescriptor(),
        });
    internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_OpticalFlowStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_OpticalFlowStatus_descriptor,
        new java.lang.String[] { "Header", "Isvalid", "VX", "VY", "VYaw", "TimeInterval", "Dx", "Dy", });
    rbk.protocol.MessageHeader.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
