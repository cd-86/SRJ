// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_controller.proto

package rbk.protocol;

public final class MessageController {
  private MessageController() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_ControllerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Controller)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double temp = 1;</code>
     * @return The temp.
     */
    double getTemp();

    /**
     * <code>double humi = 2;</code>
     * @return The humi.
     */
    double getHumi();

    /**
     * <code>double voltage = 3;</code>
     * @return The voltage.
     */
    double getVoltage();

    /**
     * <code>bool emc = 4;</code>
     * @return The emc.
     */
    boolean getEmc();

    /**
     * <code>bool brake = 5;</code>
     * @return The brake.
     */
    boolean getBrake();

    /**
     * <code>bool driverEmc = 6;</code>
     * @return The driverEmc.
     */
    boolean getDriverEmc();

    /**
     * <code>bool manualCharge = 7;</code>
     * @return The manualCharge.
     */
    boolean getManualCharge();

    /**
     * <code>bool autoCharge = 8;</code>
     * @return The autoCharge.
     */
    boolean getAutoCharge();

    /**
     * <code>bool electric = 9;</code>
     * @return The electric.
     */
    boolean getElectric();

    /**
     * <code>bool softEMC = 10;</code>
     * @return The softEMC.
     */
    boolean getSoftEMC();

    /**
     * <code>bool isExternalControl = 11;</code>
     * @return The isExternalControl.
     */
    boolean getIsExternalControl();

    /**
     * <code>bool isIMUCalibrating = 12;</code>
     * @return The isIMUCalibrating.
     */
    boolean getIsIMUCalibrating();

    /**
     * <pre>
     *检测外部电压
     * </pre>
     *
     * <code>double voltagebyAdc = 13;</code>
     * @return The voltagebyAdc.
     */
    double getVoltagebyAdc();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Controller}
   */
  public static final class Message_Controller extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Controller)
      Message_ControllerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Controller.newBuilder() to construct.
    private Message_Controller(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Controller() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Controller();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageController.internal_static_rbk_protocol_Message_Controller_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageController.internal_static_rbk_protocol_Message_Controller_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageController.Message_Controller.class, rbk.protocol.MessageController.Message_Controller.Builder.class);
    }

    public static final int TEMP_FIELD_NUMBER = 1;
    private double temp_ = 0D;
    /**
     * <code>double temp = 1;</code>
     * @return The temp.
     */
    @java.lang.Override
    public double getTemp() {
      return temp_;
    }

    public static final int HUMI_FIELD_NUMBER = 2;
    private double humi_ = 0D;
    /**
     * <code>double humi = 2;</code>
     * @return The humi.
     */
    @java.lang.Override
    public double getHumi() {
      return humi_;
    }

    public static final int VOLTAGE_FIELD_NUMBER = 3;
    private double voltage_ = 0D;
    /**
     * <code>double voltage = 3;</code>
     * @return The voltage.
     */
    @java.lang.Override
    public double getVoltage() {
      return voltage_;
    }

    public static final int EMC_FIELD_NUMBER = 4;
    private boolean emc_ = false;
    /**
     * <code>bool emc = 4;</code>
     * @return The emc.
     */
    @java.lang.Override
    public boolean getEmc() {
      return emc_;
    }

    public static final int BRAKE_FIELD_NUMBER = 5;
    private boolean brake_ = false;
    /**
     * <code>bool brake = 5;</code>
     * @return The brake.
     */
    @java.lang.Override
    public boolean getBrake() {
      return brake_;
    }

    public static final int DRIVEREMC_FIELD_NUMBER = 6;
    private boolean driverEmc_ = false;
    /**
     * <code>bool driverEmc = 6;</code>
     * @return The driverEmc.
     */
    @java.lang.Override
    public boolean getDriverEmc() {
      return driverEmc_;
    }

    public static final int MANUALCHARGE_FIELD_NUMBER = 7;
    private boolean manualCharge_ = false;
    /**
     * <code>bool manualCharge = 7;</code>
     * @return The manualCharge.
     */
    @java.lang.Override
    public boolean getManualCharge() {
      return manualCharge_;
    }

    public static final int AUTOCHARGE_FIELD_NUMBER = 8;
    private boolean autoCharge_ = false;
    /**
     * <code>bool autoCharge = 8;</code>
     * @return The autoCharge.
     */
    @java.lang.Override
    public boolean getAutoCharge() {
      return autoCharge_;
    }

    public static final int ELECTRIC_FIELD_NUMBER = 9;
    private boolean electric_ = false;
    /**
     * <code>bool electric = 9;</code>
     * @return The electric.
     */
    @java.lang.Override
    public boolean getElectric() {
      return electric_;
    }

    public static final int SOFTEMC_FIELD_NUMBER = 10;
    private boolean softEMC_ = false;
    /**
     * <code>bool softEMC = 10;</code>
     * @return The softEMC.
     */
    @java.lang.Override
    public boolean getSoftEMC() {
      return softEMC_;
    }

    public static final int ISEXTERNALCONTROL_FIELD_NUMBER = 11;
    private boolean isExternalControl_ = false;
    /**
     * <code>bool isExternalControl = 11;</code>
     * @return The isExternalControl.
     */
    @java.lang.Override
    public boolean getIsExternalControl() {
      return isExternalControl_;
    }

    public static final int ISIMUCALIBRATING_FIELD_NUMBER = 12;
    private boolean isIMUCalibrating_ = false;
    /**
     * <code>bool isIMUCalibrating = 12;</code>
     * @return The isIMUCalibrating.
     */
    @java.lang.Override
    public boolean getIsIMUCalibrating() {
      return isIMUCalibrating_;
    }

    public static final int VOLTAGEBYADC_FIELD_NUMBER = 13;
    private double voltagebyAdc_ = 0D;
    /**
     * <pre>
     *检测外部电压
     * </pre>
     *
     * <code>double voltagebyAdc = 13;</code>
     * @return The voltagebyAdc.
     */
    @java.lang.Override
    public double getVoltagebyAdc() {
      return voltagebyAdc_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(temp_) != 0) {
        output.writeDouble(1, temp_);
      }
      if (java.lang.Double.doubleToRawLongBits(humi_) != 0) {
        output.writeDouble(2, humi_);
      }
      if (java.lang.Double.doubleToRawLongBits(voltage_) != 0) {
        output.writeDouble(3, voltage_);
      }
      if (emc_ != false) {
        output.writeBool(4, emc_);
      }
      if (brake_ != false) {
        output.writeBool(5, brake_);
      }
      if (driverEmc_ != false) {
        output.writeBool(6, driverEmc_);
      }
      if (manualCharge_ != false) {
        output.writeBool(7, manualCharge_);
      }
      if (autoCharge_ != false) {
        output.writeBool(8, autoCharge_);
      }
      if (electric_ != false) {
        output.writeBool(9, electric_);
      }
      if (softEMC_ != false) {
        output.writeBool(10, softEMC_);
      }
      if (isExternalControl_ != false) {
        output.writeBool(11, isExternalControl_);
      }
      if (isIMUCalibrating_ != false) {
        output.writeBool(12, isIMUCalibrating_);
      }
      if (java.lang.Double.doubleToRawLongBits(voltagebyAdc_) != 0) {
        output.writeDouble(13, voltagebyAdc_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(temp_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, temp_);
      }
      if (java.lang.Double.doubleToRawLongBits(humi_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, humi_);
      }
      if (java.lang.Double.doubleToRawLongBits(voltage_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, voltage_);
      }
      if (emc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, emc_);
      }
      if (brake_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, brake_);
      }
      if (driverEmc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, driverEmc_);
      }
      if (manualCharge_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, manualCharge_);
      }
      if (autoCharge_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, autoCharge_);
      }
      if (electric_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, electric_);
      }
      if (softEMC_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, softEMC_);
      }
      if (isExternalControl_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isExternalControl_);
      }
      if (isIMUCalibrating_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isIMUCalibrating_);
      }
      if (java.lang.Double.doubleToRawLongBits(voltagebyAdc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, voltagebyAdc_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageController.Message_Controller)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageController.Message_Controller other = (rbk.protocol.MessageController.Message_Controller) obj;

      if (java.lang.Double.doubleToLongBits(getTemp())
          != java.lang.Double.doubleToLongBits(
              other.getTemp())) return false;
      if (java.lang.Double.doubleToLongBits(getHumi())
          != java.lang.Double.doubleToLongBits(
              other.getHumi())) return false;
      if (java.lang.Double.doubleToLongBits(getVoltage())
          != java.lang.Double.doubleToLongBits(
              other.getVoltage())) return false;
      if (getEmc()
          != other.getEmc()) return false;
      if (getBrake()
          != other.getBrake()) return false;
      if (getDriverEmc()
          != other.getDriverEmc()) return false;
      if (getManualCharge()
          != other.getManualCharge()) return false;
      if (getAutoCharge()
          != other.getAutoCharge()) return false;
      if (getElectric()
          != other.getElectric()) return false;
      if (getSoftEMC()
          != other.getSoftEMC()) return false;
      if (getIsExternalControl()
          != other.getIsExternalControl()) return false;
      if (getIsIMUCalibrating()
          != other.getIsIMUCalibrating()) return false;
      if (java.lang.Double.doubleToLongBits(getVoltagebyAdc())
          != java.lang.Double.doubleToLongBits(
              other.getVoltagebyAdc())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTemp()));
      hash = (37 * hash) + HUMI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHumi()));
      hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVoltage()));
      hash = (37 * hash) + EMC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEmc());
      hash = (37 * hash) + BRAKE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBrake());
      hash = (37 * hash) + DRIVEREMC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDriverEmc());
      hash = (37 * hash) + MANUALCHARGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getManualCharge());
      hash = (37 * hash) + AUTOCHARGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoCharge());
      hash = (37 * hash) + ELECTRIC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getElectric());
      hash = (37 * hash) + SOFTEMC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSoftEMC());
      hash = (37 * hash) + ISEXTERNALCONTROL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsExternalControl());
      hash = (37 * hash) + ISIMUCALIBRATING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsIMUCalibrating());
      hash = (37 * hash) + VOLTAGEBYADC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVoltagebyAdc()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageController.Message_Controller parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageController.Message_Controller parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageController.Message_Controller parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageController.Message_Controller prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Controller}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Controller)
        rbk.protocol.MessageController.Message_ControllerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageController.internal_static_rbk_protocol_Message_Controller_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageController.internal_static_rbk_protocol_Message_Controller_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageController.Message_Controller.class, rbk.protocol.MessageController.Message_Controller.Builder.class);
      }

      // Construct using rbk.protocol.MessageController.Message_Controller.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        temp_ = 0D;
        humi_ = 0D;
        voltage_ = 0D;
        emc_ = false;
        brake_ = false;
        driverEmc_ = false;
        manualCharge_ = false;
        autoCharge_ = false;
        electric_ = false;
        softEMC_ = false;
        isExternalControl_ = false;
        isIMUCalibrating_ = false;
        voltagebyAdc_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageController.internal_static_rbk_protocol_Message_Controller_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageController.Message_Controller getDefaultInstanceForType() {
        return rbk.protocol.MessageController.Message_Controller.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageController.Message_Controller build() {
        rbk.protocol.MessageController.Message_Controller result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageController.Message_Controller buildPartial() {
        rbk.protocol.MessageController.Message_Controller result = new rbk.protocol.MessageController.Message_Controller(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageController.Message_Controller result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.temp_ = temp_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.humi_ = humi_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.voltage_ = voltage_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.emc_ = emc_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.brake_ = brake_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.driverEmc_ = driverEmc_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.manualCharge_ = manualCharge_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.autoCharge_ = autoCharge_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.electric_ = electric_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.softEMC_ = softEMC_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.isExternalControl_ = isExternalControl_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.isIMUCalibrating_ = isIMUCalibrating_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.voltagebyAdc_ = voltagebyAdc_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageController.Message_Controller) {
          return mergeFrom((rbk.protocol.MessageController.Message_Controller)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageController.Message_Controller other) {
        if (other == rbk.protocol.MessageController.Message_Controller.getDefaultInstance()) return this;
        if (other.getTemp() != 0D) {
          setTemp(other.getTemp());
        }
        if (other.getHumi() != 0D) {
          setHumi(other.getHumi());
        }
        if (other.getVoltage() != 0D) {
          setVoltage(other.getVoltage());
        }
        if (other.getEmc() != false) {
          setEmc(other.getEmc());
        }
        if (other.getBrake() != false) {
          setBrake(other.getBrake());
        }
        if (other.getDriverEmc() != false) {
          setDriverEmc(other.getDriverEmc());
        }
        if (other.getManualCharge() != false) {
          setManualCharge(other.getManualCharge());
        }
        if (other.getAutoCharge() != false) {
          setAutoCharge(other.getAutoCharge());
        }
        if (other.getElectric() != false) {
          setElectric(other.getElectric());
        }
        if (other.getSoftEMC() != false) {
          setSoftEMC(other.getSoftEMC());
        }
        if (other.getIsExternalControl() != false) {
          setIsExternalControl(other.getIsExternalControl());
        }
        if (other.getIsIMUCalibrating() != false) {
          setIsIMUCalibrating(other.getIsIMUCalibrating());
        }
        if (other.getVoltagebyAdc() != 0D) {
          setVoltagebyAdc(other.getVoltagebyAdc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                temp_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                humi_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                voltage_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                emc_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                brake_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                driverEmc_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                manualCharge_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                autoCharge_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                electric_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                softEMC_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                isExternalControl_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                isIMUCalibrating_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 105: {
                voltagebyAdc_ = input.readDouble();
                bitField0_ |= 0x00001000;
                break;
              } // case 105
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double temp_ ;
      /**
       * <code>double temp = 1;</code>
       * @return The temp.
       */
      @java.lang.Override
      public double getTemp() {
        return temp_;
      }
      /**
       * <code>double temp = 1;</code>
       * @param value The temp to set.
       * @return This builder for chaining.
       */
      public Builder setTemp(double value) {

        temp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double temp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temp_ = 0D;
        onChanged();
        return this;
      }

      private double humi_ ;
      /**
       * <code>double humi = 2;</code>
       * @return The humi.
       */
      @java.lang.Override
      public double getHumi() {
        return humi_;
      }
      /**
       * <code>double humi = 2;</code>
       * @param value The humi to set.
       * @return This builder for chaining.
       */
      public Builder setHumi(double value) {

        humi_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double humi = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHumi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        humi_ = 0D;
        onChanged();
        return this;
      }

      private double voltage_ ;
      /**
       * <code>double voltage = 3;</code>
       * @return The voltage.
       */
      @java.lang.Override
      public double getVoltage() {
        return voltage_;
      }
      /**
       * <code>double voltage = 3;</code>
       * @param value The voltage to set.
       * @return This builder for chaining.
       */
      public Builder setVoltage(double value) {

        voltage_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double voltage = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        voltage_ = 0D;
        onChanged();
        return this;
      }

      private boolean emc_ ;
      /**
       * <code>bool emc = 4;</code>
       * @return The emc.
       */
      @java.lang.Override
      public boolean getEmc() {
        return emc_;
      }
      /**
       * <code>bool emc = 4;</code>
       * @param value The emc to set.
       * @return This builder for chaining.
       */
      public Builder setEmc(boolean value) {

        emc_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool emc = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        emc_ = false;
        onChanged();
        return this;
      }

      private boolean brake_ ;
      /**
       * <code>bool brake = 5;</code>
       * @return The brake.
       */
      @java.lang.Override
      public boolean getBrake() {
        return brake_;
      }
      /**
       * <code>bool brake = 5;</code>
       * @param value The brake to set.
       * @return This builder for chaining.
       */
      public Builder setBrake(boolean value) {

        brake_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool brake = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrake() {
        bitField0_ = (bitField0_ & ~0x00000010);
        brake_ = false;
        onChanged();
        return this;
      }

      private boolean driverEmc_ ;
      /**
       * <code>bool driverEmc = 6;</code>
       * @return The driverEmc.
       */
      @java.lang.Override
      public boolean getDriverEmc() {
        return driverEmc_;
      }
      /**
       * <code>bool driverEmc = 6;</code>
       * @param value The driverEmc to set.
       * @return This builder for chaining.
       */
      public Builder setDriverEmc(boolean value) {

        driverEmc_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool driverEmc = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriverEmc() {
        bitField0_ = (bitField0_ & ~0x00000020);
        driverEmc_ = false;
        onChanged();
        return this;
      }

      private boolean manualCharge_ ;
      /**
       * <code>bool manualCharge = 7;</code>
       * @return The manualCharge.
       */
      @java.lang.Override
      public boolean getManualCharge() {
        return manualCharge_;
      }
      /**
       * <code>bool manualCharge = 7;</code>
       * @param value The manualCharge to set.
       * @return This builder for chaining.
       */
      public Builder setManualCharge(boolean value) {

        manualCharge_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool manualCharge = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearManualCharge() {
        bitField0_ = (bitField0_ & ~0x00000040);
        manualCharge_ = false;
        onChanged();
        return this;
      }

      private boolean autoCharge_ ;
      /**
       * <code>bool autoCharge = 8;</code>
       * @return The autoCharge.
       */
      @java.lang.Override
      public boolean getAutoCharge() {
        return autoCharge_;
      }
      /**
       * <code>bool autoCharge = 8;</code>
       * @param value The autoCharge to set.
       * @return This builder for chaining.
       */
      public Builder setAutoCharge(boolean value) {

        autoCharge_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bool autoCharge = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoCharge() {
        bitField0_ = (bitField0_ & ~0x00000080);
        autoCharge_ = false;
        onChanged();
        return this;
      }

      private boolean electric_ ;
      /**
       * <code>bool electric = 9;</code>
       * @return The electric.
       */
      @java.lang.Override
      public boolean getElectric() {
        return electric_;
      }
      /**
       * <code>bool electric = 9;</code>
       * @param value The electric to set.
       * @return This builder for chaining.
       */
      public Builder setElectric(boolean value) {

        electric_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>bool electric = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearElectric() {
        bitField0_ = (bitField0_ & ~0x00000100);
        electric_ = false;
        onChanged();
        return this;
      }

      private boolean softEMC_ ;
      /**
       * <code>bool softEMC = 10;</code>
       * @return The softEMC.
       */
      @java.lang.Override
      public boolean getSoftEMC() {
        return softEMC_;
      }
      /**
       * <code>bool softEMC = 10;</code>
       * @param value The softEMC to set.
       * @return This builder for chaining.
       */
      public Builder setSoftEMC(boolean value) {

        softEMC_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>bool softEMC = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSoftEMC() {
        bitField0_ = (bitField0_ & ~0x00000200);
        softEMC_ = false;
        onChanged();
        return this;
      }

      private boolean isExternalControl_ ;
      /**
       * <code>bool isExternalControl = 11;</code>
       * @return The isExternalControl.
       */
      @java.lang.Override
      public boolean getIsExternalControl() {
        return isExternalControl_;
      }
      /**
       * <code>bool isExternalControl = 11;</code>
       * @param value The isExternalControl to set.
       * @return This builder for chaining.
       */
      public Builder setIsExternalControl(boolean value) {

        isExternalControl_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>bool isExternalControl = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsExternalControl() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isExternalControl_ = false;
        onChanged();
        return this;
      }

      private boolean isIMUCalibrating_ ;
      /**
       * <code>bool isIMUCalibrating = 12;</code>
       * @return The isIMUCalibrating.
       */
      @java.lang.Override
      public boolean getIsIMUCalibrating() {
        return isIMUCalibrating_;
      }
      /**
       * <code>bool isIMUCalibrating = 12;</code>
       * @param value The isIMUCalibrating to set.
       * @return This builder for chaining.
       */
      public Builder setIsIMUCalibrating(boolean value) {

        isIMUCalibrating_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>bool isIMUCalibrating = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsIMUCalibrating() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isIMUCalibrating_ = false;
        onChanged();
        return this;
      }

      private double voltagebyAdc_ ;
      /**
       * <pre>
       *检测外部电压
       * </pre>
       *
       * <code>double voltagebyAdc = 13;</code>
       * @return The voltagebyAdc.
       */
      @java.lang.Override
      public double getVoltagebyAdc() {
        return voltagebyAdc_;
      }
      /**
       * <pre>
       *检测外部电压
       * </pre>
       *
       * <code>double voltagebyAdc = 13;</code>
       * @param value The voltagebyAdc to set.
       * @return This builder for chaining.
       */
      public Builder setVoltagebyAdc(double value) {

        voltagebyAdc_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测外部电压
       * </pre>
       *
       * <code>double voltagebyAdc = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoltagebyAdc() {
        bitField0_ = (bitField0_ & ~0x00001000);
        voltagebyAdc_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Controller)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Controller)
    private static final rbk.protocol.MessageController.Message_Controller DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageController.Message_Controller();
    }

    public static rbk.protocol.MessageController.Message_Controller getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Controller>
        PARSER = new com.google.protobuf.AbstractParser<Message_Controller>() {
      @java.lang.Override
      public Message_Controller parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Controller> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Controller> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageController.Message_Controller getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Controller_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Controller_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030message_controller.proto\022\014rbk.protocol" +
      "\"\210\002\n\022Message_Controller\022\014\n\004temp\030\001 \001(\001\022\014\n" +
      "\004humi\030\002 \001(\001\022\017\n\007voltage\030\003 \001(\001\022\013\n\003emc\030\004 \001(" +
      "\010\022\r\n\005brake\030\005 \001(\010\022\021\n\tdriverEmc\030\006 \001(\010\022\024\n\014m" +
      "anualCharge\030\007 \001(\010\022\022\n\nautoCharge\030\010 \001(\010\022\020\n" +
      "\010electric\030\t \001(\010\022\017\n\007softEMC\030\n \001(\010\022\031\n\021isEx" +
      "ternalControl\030\013 \001(\010\022\030\n\020isIMUCalibrating\030" +
      "\014 \001(\010\022\024\n\014voltagebyAdc\030\r \001(\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_rbk_protocol_Message_Controller_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_Controller_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Controller_descriptor,
        new java.lang.String[] { "Temp", "Humi", "Voltage", "Emc", "Brake", "DriverEmc", "ManualCharge", "AutoCharge", "Electric", "SoftEMC", "IsExternalControl", "IsIMUCalibrating", "VoltagebyAdc", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
