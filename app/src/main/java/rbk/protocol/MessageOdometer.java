// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_odometer.proto

package rbk.protocol;

public final class MessageOdometer {
  private MessageOdometer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_SlipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Slip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * slip dist m
     * </pre>
     *
     * <code>float slip = 1;</code>
     * @return The slip.
     */
    float getSlip();

    /**
     * <pre>
     * slip time s
     * </pre>
     *
     * <code>float slip_time = 2;</code>
     * @return The slipTime.
     */
    float getSlipTime();

    /**
     * <pre>
     * slip object name
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * slip object name
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Slip}
   */
  public static final class Message_Slip extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Slip)
      Message_SlipOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Slip.newBuilder() to construct.
    private Message_Slip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Slip() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Slip();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Slip_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Slip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageOdometer.Message_Slip.class, rbk.protocol.MessageOdometer.Message_Slip.Builder.class);
    }

    public static final int SLIP_FIELD_NUMBER = 1;
    private float slip_ = 0F;
    /**
     * <pre>
     * slip dist m
     * </pre>
     *
     * <code>float slip = 1;</code>
     * @return The slip.
     */
    @java.lang.Override
    public float getSlip() {
      return slip_;
    }

    public static final int SLIP_TIME_FIELD_NUMBER = 2;
    private float slipTime_ = 0F;
    /**
     * <pre>
     * slip time s
     * </pre>
     *
     * <code>float slip_time = 2;</code>
     * @return The slipTime.
     */
    @java.lang.Override
    public float getSlipTime() {
      return slipTime_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * slip object name
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * slip object name
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(slip_) != 0) {
        output.writeFloat(1, slip_);
      }
      if (java.lang.Float.floatToRawIntBits(slipTime_) != 0) {
        output.writeFloat(2, slipTime_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(slip_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, slip_);
      }
      if (java.lang.Float.floatToRawIntBits(slipTime_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, slipTime_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageOdometer.Message_Slip)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageOdometer.Message_Slip other = (rbk.protocol.MessageOdometer.Message_Slip) obj;

      if (java.lang.Float.floatToIntBits(getSlip())
          != java.lang.Float.floatToIntBits(
              other.getSlip())) return false;
      if (java.lang.Float.floatToIntBits(getSlipTime())
          != java.lang.Float.floatToIntBits(
              other.getSlipTime())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SLIP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSlip());
      hash = (37 * hash) + SLIP_TIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSlipTime());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageOdometer.Message_Slip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageOdometer.Message_Slip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_Slip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageOdometer.Message_Slip prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Slip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Slip)
        rbk.protocol.MessageOdometer.Message_SlipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Slip_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Slip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageOdometer.Message_Slip.class, rbk.protocol.MessageOdometer.Message_Slip.Builder.class);
      }

      // Construct using rbk.protocol.MessageOdometer.Message_Slip.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        slip_ = 0F;
        slipTime_ = 0F;
        name_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Slip_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Slip getDefaultInstanceForType() {
        return rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Slip build() {
        rbk.protocol.MessageOdometer.Message_Slip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Slip buildPartial() {
        rbk.protocol.MessageOdometer.Message_Slip result = new rbk.protocol.MessageOdometer.Message_Slip(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageOdometer.Message_Slip result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.slip_ = slip_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.slipTime_ = slipTime_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageOdometer.Message_Slip) {
          return mergeFrom((rbk.protocol.MessageOdometer.Message_Slip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageOdometer.Message_Slip other) {
        if (other == rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance()) return this;
        if (other.getSlip() != 0F) {
          setSlip(other.getSlip());
        }
        if (other.getSlipTime() != 0F) {
          setSlipTime(other.getSlipTime());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                slip_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                slipTime_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 26: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float slip_ ;
      /**
       * <pre>
       * slip dist m
       * </pre>
       *
       * <code>float slip = 1;</code>
       * @return The slip.
       */
      @java.lang.Override
      public float getSlip() {
        return slip_;
      }
      /**
       * <pre>
       * slip dist m
       * </pre>
       *
       * <code>float slip = 1;</code>
       * @param value The slip to set.
       * @return This builder for chaining.
       */
      public Builder setSlip(float value) {

        slip_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slip dist m
       * </pre>
       *
       * <code>float slip = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlip() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slip_ = 0F;
        onChanged();
        return this;
      }

      private float slipTime_ ;
      /**
       * <pre>
       * slip time s
       * </pre>
       *
       * <code>float slip_time = 2;</code>
       * @return The slipTime.
       */
      @java.lang.Override
      public float getSlipTime() {
        return slipTime_;
      }
      /**
       * <pre>
       * slip time s
       * </pre>
       *
       * <code>float slip_time = 2;</code>
       * @param value The slipTime to set.
       * @return This builder for chaining.
       */
      public Builder setSlipTime(float value) {

        slipTime_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slip time s
       * </pre>
       *
       * <code>float slip_time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlipTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        slipTime_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * slip object name
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * slip object name
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * slip object name
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slip object name
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * slip object name
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Slip)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Slip)
    private static final rbk.protocol.MessageOdometer.Message_Slip DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageOdometer.Message_Slip();
    }

    public static rbk.protocol.MessageOdometer.Message_Slip getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Slip>
        PARSER = new com.google.protobuf.AbstractParser<Message_Slip>() {
      @java.lang.Override
      public Message_Slip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Slip> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Slip> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Slip getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_SlipSensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_SlipSensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
     * @return The type.
     */
    rbk.protocol.MessageOdometer.Message_SlipSensor.Type getType();

    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     * @return Whether the vx field is set.
     */
    boolean hasVx();
    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     * @return The vx.
     */
    rbk.protocol.MessageOdometer.Message_Slip getVx();
    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVxOrBuilder();

    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     * @return Whether the vy field is set.
     */
    boolean hasVy();
    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     * @return The vy.
     */
    rbk.protocol.MessageOdometer.Message_Slip getVy();
    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVyOrBuilder();

    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     * @return Whether the vw field is set.
     */
    boolean hasVw();
    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     * @return The vw.
     */
    rbk.protocol.MessageOdometer.Message_Slip getVw();
    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVwOrBuilder();

    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    java.util.List<rbk.protocol.MessageOdometer.Message_Slip> 
        getMotorList();
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    rbk.protocol.MessageOdometer.Message_Slip getMotor(int index);
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    int getMotorCount();
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
        getMotorOrBuilderList();
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipOrBuilder getMotorOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_SlipSensor}
   */
  public static final class Message_SlipSensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_SlipSensor)
      Message_SlipSensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_SlipSensor.newBuilder() to construct.
    private Message_SlipSensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_SlipSensor() {
      type_ = 0;
      motor_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_SlipSensor();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageOdometer.Message_SlipSensor.class, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder.class);
    }

    /**
     * Protobuf enum {@code rbk.protocol.Message_SlipSensor.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IMU = 0;</code>
       */
      IMU(0),
      /**
       * <code>LOC = 1;</code>
       */
      LOC(1),
      /**
       * <code>OPT = 2;</code>
       */
      OPT(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>IMU = 0;</code>
       */
      public static final int IMU_VALUE = 0;
      /**
       * <code>LOC = 1;</code>
       */
      public static final int LOC_VALUE = 1;
      /**
       * <code>OPT = 2;</code>
       */
      public static final int OPT_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return IMU;
          case 1: return LOC;
          case 2: return OPT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return rbk.protocol.MessageOdometer.Message_SlipSensor.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:rbk.protocol.Message_SlipSensor.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public rbk.protocol.MessageOdometer.Message_SlipSensor.Type getType() {
      rbk.protocol.MessageOdometer.Message_SlipSensor.Type result = rbk.protocol.MessageOdometer.Message_SlipSensor.Type.forNumber(type_);
      return result == null ? rbk.protocol.MessageOdometer.Message_SlipSensor.Type.UNRECOGNIZED : result;
    }

    public static final int VX_FIELD_NUMBER = 2;
    private rbk.protocol.MessageOdometer.Message_Slip vx_;
    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     * @return Whether the vx field is set.
     */
    @java.lang.Override
    public boolean hasVx() {
      return vx_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     * @return The vx.
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Slip getVx() {
      return vx_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vx_;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vx = 2;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVxOrBuilder() {
      return vx_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vx_;
    }

    public static final int VY_FIELD_NUMBER = 3;
    private rbk.protocol.MessageOdometer.Message_Slip vy_;
    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     * @return Whether the vy field is set.
     */
    @java.lang.Override
    public boolean hasVy() {
      return vy_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     * @return The vy.
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Slip getVy() {
      return vy_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vy_;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vy = 3;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVyOrBuilder() {
      return vy_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vy_;
    }

    public static final int VW_FIELD_NUMBER = 4;
    private rbk.protocol.MessageOdometer.Message_Slip vw_;
    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     * @return Whether the vw field is set.
     */
    @java.lang.Override
    public boolean hasVw() {
      return vw_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     * @return The vw.
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Slip getVw() {
      return vw_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vw_;
    }
    /**
     * <code>.rbk.protocol.Message_Slip vw = 4;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVwOrBuilder() {
      return vw_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vw_;
    }

    public static final int MOTOR_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<rbk.protocol.MessageOdometer.Message_Slip> motor_;
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    @java.lang.Override
    public java.util.List<rbk.protocol.MessageOdometer.Message_Slip> getMotorList() {
      return motor_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
        getMotorOrBuilderList() {
      return motor_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    @java.lang.Override
    public int getMotorCount() {
      return motor_.size();
    }
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Slip getMotor(int index) {
      return motor_.get(index);
    }
    /**
     * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getMotorOrBuilder(
        int index) {
      return motor_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != rbk.protocol.MessageOdometer.Message_SlipSensor.Type.IMU.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (vx_ != null) {
        output.writeMessage(2, getVx());
      }
      if (vy_ != null) {
        output.writeMessage(3, getVy());
      }
      if (vw_ != null) {
        output.writeMessage(4, getVw());
      }
      for (int i = 0; i < motor_.size(); i++) {
        output.writeMessage(5, motor_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != rbk.protocol.MessageOdometer.Message_SlipSensor.Type.IMU.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (vx_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVx());
      }
      if (vy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVy());
      }
      if (vw_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVw());
      }
      for (int i = 0; i < motor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, motor_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageOdometer.Message_SlipSensor)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageOdometer.Message_SlipSensor other = (rbk.protocol.MessageOdometer.Message_SlipSensor) obj;

      if (type_ != other.type_) return false;
      if (hasVx() != other.hasVx()) return false;
      if (hasVx()) {
        if (!getVx()
            .equals(other.getVx())) return false;
      }
      if (hasVy() != other.hasVy()) return false;
      if (hasVy()) {
        if (!getVy()
            .equals(other.getVy())) return false;
      }
      if (hasVw() != other.hasVw()) return false;
      if (hasVw()) {
        if (!getVw()
            .equals(other.getVw())) return false;
      }
      if (!getMotorList()
          .equals(other.getMotorList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasVx()) {
        hash = (37 * hash) + VX_FIELD_NUMBER;
        hash = (53 * hash) + getVx().hashCode();
      }
      if (hasVy()) {
        hash = (37 * hash) + VY_FIELD_NUMBER;
        hash = (53 * hash) + getVy().hashCode();
      }
      if (hasVw()) {
        hash = (37 * hash) + VW_FIELD_NUMBER;
        hash = (53 * hash) + getVw().hashCode();
      }
      if (getMotorCount() > 0) {
        hash = (37 * hash) + MOTOR_FIELD_NUMBER;
        hash = (53 * hash) + getMotorList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageOdometer.Message_SlipSensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_SlipSensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_SlipSensor)
        rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageOdometer.Message_SlipSensor.class, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder.class);
      }

      // Construct using rbk.protocol.MessageOdometer.Message_SlipSensor.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        vx_ = null;
        if (vxBuilder_ != null) {
          vxBuilder_.dispose();
          vxBuilder_ = null;
        }
        vy_ = null;
        if (vyBuilder_ != null) {
          vyBuilder_.dispose();
          vyBuilder_ = null;
        }
        vw_ = null;
        if (vwBuilder_ != null) {
          vwBuilder_.dispose();
          vwBuilder_ = null;
        }
        if (motorBuilder_ == null) {
          motor_ = java.util.Collections.emptyList();
        } else {
          motor_ = null;
          motorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensor_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensor getDefaultInstanceForType() {
        return rbk.protocol.MessageOdometer.Message_SlipSensor.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensor build() {
        rbk.protocol.MessageOdometer.Message_SlipSensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensor buildPartial() {
        rbk.protocol.MessageOdometer.Message_SlipSensor result = new rbk.protocol.MessageOdometer.Message_SlipSensor(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(rbk.protocol.MessageOdometer.Message_SlipSensor result) {
        if (motorBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            motor_ = java.util.Collections.unmodifiableList(motor_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.motor_ = motor_;
        } else {
          result.motor_ = motorBuilder_.build();
        }
      }

      private void buildPartial0(rbk.protocol.MessageOdometer.Message_SlipSensor result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.vx_ = vxBuilder_ == null
              ? vx_
              : vxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.vy_ = vyBuilder_ == null
              ? vy_
              : vyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.vw_ = vwBuilder_ == null
              ? vw_
              : vwBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageOdometer.Message_SlipSensor) {
          return mergeFrom((rbk.protocol.MessageOdometer.Message_SlipSensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageOdometer.Message_SlipSensor other) {
        if (other == rbk.protocol.MessageOdometer.Message_SlipSensor.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasVx()) {
          mergeVx(other.getVx());
        }
        if (other.hasVy()) {
          mergeVy(other.getVy());
        }
        if (other.hasVw()) {
          mergeVw(other.getVw());
        }
        if (motorBuilder_ == null) {
          if (!other.motor_.isEmpty()) {
            if (motor_.isEmpty()) {
              motor_ = other.motor_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMotorIsMutable();
              motor_.addAll(other.motor_);
            }
            onChanged();
          }
        } else {
          if (!other.motor_.isEmpty()) {
            if (motorBuilder_.isEmpty()) {
              motorBuilder_.dispose();
              motorBuilder_ = null;
              motor_ = other.motor_;
              bitField0_ = (bitField0_ & ~0x00000010);
              motorBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMotorFieldBuilder() : null;
            } else {
              motorBuilder_.addAllMessages(other.motor_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getVxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getVyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getVwFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                rbk.protocol.MessageOdometer.Message_Slip m =
                    input.readMessage(
                        rbk.protocol.MessageOdometer.Message_Slip.parser(),
                        extensionRegistry);
                if (motorBuilder_ == null) {
                  ensureMotorIsMutable();
                  motor_.add(m);
                } else {
                  motorBuilder_.addMessage(m);
                }
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensor.Type getType() {
        rbk.protocol.MessageOdometer.Message_SlipSensor.Type result = rbk.protocol.MessageOdometer.Message_SlipSensor.Type.forNumber(type_);
        return result == null ? rbk.protocol.MessageOdometer.Message_SlipSensor.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(rbk.protocol.MessageOdometer.Message_SlipSensor.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_SlipSensor.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private rbk.protocol.MessageOdometer.Message_Slip vx_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> vxBuilder_;
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       * @return Whether the vx field is set.
       */
      public boolean hasVx() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       * @return The vx.
       */
      public rbk.protocol.MessageOdometer.Message_Slip getVx() {
        if (vxBuilder_ == null) {
          return vx_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vx_;
        } else {
          return vxBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public Builder setVx(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vx_ = value;
        } else {
          vxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public Builder setVx(
          rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (vxBuilder_ == null) {
          vx_ = builderForValue.build();
        } else {
          vxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public Builder mergeVx(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            vx_ != null &&
            vx_ != rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance()) {
            getVxBuilder().mergeFrom(value);
          } else {
            vx_ = value;
          }
        } else {
          vxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public Builder clearVx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vx_ = null;
        if (vxBuilder_ != null) {
          vxBuilder_.dispose();
          vxBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder getVxBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVxFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVxOrBuilder() {
        if (vxBuilder_ != null) {
          return vxBuilder_.getMessageOrBuilder();
        } else {
          return vx_ == null ?
              rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vx_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vx = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
          getVxFieldBuilder() {
        if (vxBuilder_ == null) {
          vxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder>(
                  getVx(),
                  getParentForChildren(),
                  isClean());
          vx_ = null;
        }
        return vxBuilder_;
      }

      private rbk.protocol.MessageOdometer.Message_Slip vy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> vyBuilder_;
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       * @return Whether the vy field is set.
       */
      public boolean hasVy() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       * @return The vy.
       */
      public rbk.protocol.MessageOdometer.Message_Slip getVy() {
        if (vyBuilder_ == null) {
          return vy_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vy_;
        } else {
          return vyBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public Builder setVy(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vy_ = value;
        } else {
          vyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public Builder setVy(
          rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (vyBuilder_ == null) {
          vy_ = builderForValue.build();
        } else {
          vyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public Builder mergeVy(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            vy_ != null &&
            vy_ != rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance()) {
            getVyBuilder().mergeFrom(value);
          } else {
            vy_ = value;
          }
        } else {
          vyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public Builder clearVy() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vy_ = null;
        if (vyBuilder_ != null) {
          vyBuilder_.dispose();
          vyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder getVyBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVyFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVyOrBuilder() {
        if (vyBuilder_ != null) {
          return vyBuilder_.getMessageOrBuilder();
        } else {
          return vy_ == null ?
              rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vy_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vy = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
          getVyFieldBuilder() {
        if (vyBuilder_ == null) {
          vyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder>(
                  getVy(),
                  getParentForChildren(),
                  isClean());
          vy_ = null;
        }
        return vyBuilder_;
      }

      private rbk.protocol.MessageOdometer.Message_Slip vw_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> vwBuilder_;
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       * @return Whether the vw field is set.
       */
      public boolean hasVw() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       * @return The vw.
       */
      public rbk.protocol.MessageOdometer.Message_Slip getVw() {
        if (vwBuilder_ == null) {
          return vw_ == null ? rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vw_;
        } else {
          return vwBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public Builder setVw(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vwBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vw_ = value;
        } else {
          vwBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public Builder setVw(
          rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (vwBuilder_ == null) {
          vw_ = builderForValue.build();
        } else {
          vwBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public Builder mergeVw(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (vwBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            vw_ != null &&
            vw_ != rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance()) {
            getVwBuilder().mergeFrom(value);
          } else {
            vw_ = value;
          }
        } else {
          vwBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public Builder clearVw() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vw_ = null;
        if (vwBuilder_ != null) {
          vwBuilder_.dispose();
          vwBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder getVwBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getVwFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getVwOrBuilder() {
        if (vwBuilder_ != null) {
          return vwBuilder_.getMessageOrBuilder();
        } else {
          return vw_ == null ?
              rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance() : vw_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Slip vw = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
          getVwFieldBuilder() {
        if (vwBuilder_ == null) {
          vwBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder>(
                  getVw(),
                  getParentForChildren(),
                  isClean());
          vw_ = null;
        }
        return vwBuilder_;
      }

      private java.util.List<rbk.protocol.MessageOdometer.Message_Slip> motor_ =
        java.util.Collections.emptyList();
      private void ensureMotorIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          motor_ = new java.util.ArrayList<rbk.protocol.MessageOdometer.Message_Slip>(motor_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> motorBuilder_;

      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public java.util.List<rbk.protocol.MessageOdometer.Message_Slip> getMotorList() {
        if (motorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(motor_);
        } else {
          return motorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public int getMotorCount() {
        if (motorBuilder_ == null) {
          return motor_.size();
        } else {
          return motorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip getMotor(int index) {
        if (motorBuilder_ == null) {
          return motor_.get(index);
        } else {
          return motorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder setMotor(
          int index, rbk.protocol.MessageOdometer.Message_Slip value) {
        if (motorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorIsMutable();
          motor_.set(index, value);
          onChanged();
        } else {
          motorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder setMotor(
          int index, rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (motorBuilder_ == null) {
          ensureMotorIsMutable();
          motor_.set(index, builderForValue.build());
          onChanged();
        } else {
          motorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder addMotor(rbk.protocol.MessageOdometer.Message_Slip value) {
        if (motorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorIsMutable();
          motor_.add(value);
          onChanged();
        } else {
          motorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder addMotor(
          int index, rbk.protocol.MessageOdometer.Message_Slip value) {
        if (motorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorIsMutable();
          motor_.add(index, value);
          onChanged();
        } else {
          motorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder addMotor(
          rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (motorBuilder_ == null) {
          ensureMotorIsMutable();
          motor_.add(builderForValue.build());
          onChanged();
        } else {
          motorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder addMotor(
          int index, rbk.protocol.MessageOdometer.Message_Slip.Builder builderForValue) {
        if (motorBuilder_ == null) {
          ensureMotorIsMutable();
          motor_.add(index, builderForValue.build());
          onChanged();
        } else {
          motorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder addAllMotor(
          java.lang.Iterable<? extends rbk.protocol.MessageOdometer.Message_Slip> values) {
        if (motorBuilder_ == null) {
          ensureMotorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, motor_);
          onChanged();
        } else {
          motorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder clearMotor() {
        if (motorBuilder_ == null) {
          motor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          motorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public Builder removeMotor(int index) {
        if (motorBuilder_ == null) {
          ensureMotorIsMutable();
          motor_.remove(index);
          onChanged();
        } else {
          motorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder getMotorBuilder(
          int index) {
        return getMotorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipOrBuilder getMotorOrBuilder(
          int index) {
        if (motorBuilder_ == null) {
          return motor_.get(index);  } else {
          return motorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
           getMotorOrBuilderList() {
        if (motorBuilder_ != null) {
          return motorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(motor_);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder addMotorBuilder() {
        return getMotorFieldBuilder().addBuilder(
            rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public rbk.protocol.MessageOdometer.Message_Slip.Builder addMotorBuilder(
          int index) {
        return getMotorFieldBuilder().addBuilder(
            index, rbk.protocol.MessageOdometer.Message_Slip.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_Slip motor = 5;</code>
       */
      public java.util.List<rbk.protocol.MessageOdometer.Message_Slip.Builder> 
           getMotorBuilderList() {
        return getMotorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder> 
          getMotorFieldBuilder() {
        if (motorBuilder_ == null) {
          motorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rbk.protocol.MessageOdometer.Message_Slip, rbk.protocol.MessageOdometer.Message_Slip.Builder, rbk.protocol.MessageOdometer.Message_SlipOrBuilder>(
                  motor_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          motor_ = null;
        }
        return motorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_SlipSensor)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_SlipSensor)
    private static final rbk.protocol.MessageOdometer.Message_SlipSensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageOdometer.Message_SlipSensor();
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_SlipSensor>
        PARSER = new com.google.protobuf.AbstractParser<Message_SlipSensor>() {
      @java.lang.Override
      public Message_SlipSensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_SlipSensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_SlipSensor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipSensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_SlipSensorsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_SlipSensors)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor> 
        getSlipSensorsList();
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipSensor getSlipSensors(int index);
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    int getSlipSensorsCount();
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder> 
        getSlipSensorsOrBuilderList();
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder getSlipSensorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_SlipSensors}
   */
  public static final class Message_SlipSensors extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_SlipSensors)
      Message_SlipSensorsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_SlipSensors.newBuilder() to construct.
    private Message_SlipSensors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_SlipSensors() {
      slipSensors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_SlipSensors();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensors_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensors_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageOdometer.Message_SlipSensors.class, rbk.protocol.MessageOdometer.Message_SlipSensors.Builder.class);
    }

    public static final int SLIP_SENSORS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor> slipSensors_;
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    @java.lang.Override
    public java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor> getSlipSensorsList() {
      return slipSensors_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder> 
        getSlipSensorsOrBuilderList() {
      return slipSensors_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    @java.lang.Override
    public int getSlipSensorsCount() {
      return slipSensors_.size();
    }
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipSensor getSlipSensors(int index) {
      return slipSensors_.get(index);
    }
    /**
     * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder getSlipSensorsOrBuilder(
        int index) {
      return slipSensors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < slipSensors_.size(); i++) {
        output.writeMessage(1, slipSensors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < slipSensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, slipSensors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageOdometer.Message_SlipSensors)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageOdometer.Message_SlipSensors other = (rbk.protocol.MessageOdometer.Message_SlipSensors) obj;

      if (!getSlipSensorsList()
          .equals(other.getSlipSensorsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSlipSensorsCount() > 0) {
        hash = (37 * hash) + SLIP_SENSORS_FIELD_NUMBER;
        hash = (53 * hash) + getSlipSensorsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_SlipSensors parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageOdometer.Message_SlipSensors prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_SlipSensors}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_SlipSensors)
        rbk.protocol.MessageOdometer.Message_SlipSensorsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensors_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageOdometer.Message_SlipSensors.class, rbk.protocol.MessageOdometer.Message_SlipSensors.Builder.class);
      }

      // Construct using rbk.protocol.MessageOdometer.Message_SlipSensors.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (slipSensorsBuilder_ == null) {
          slipSensors_ = java.util.Collections.emptyList();
        } else {
          slipSensors_ = null;
          slipSensorsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_SlipSensors_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensors getDefaultInstanceForType() {
        return rbk.protocol.MessageOdometer.Message_SlipSensors.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensors build() {
        rbk.protocol.MessageOdometer.Message_SlipSensors result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_SlipSensors buildPartial() {
        rbk.protocol.MessageOdometer.Message_SlipSensors result = new rbk.protocol.MessageOdometer.Message_SlipSensors(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(rbk.protocol.MessageOdometer.Message_SlipSensors result) {
        if (slipSensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            slipSensors_ = java.util.Collections.unmodifiableList(slipSensors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.slipSensors_ = slipSensors_;
        } else {
          result.slipSensors_ = slipSensorsBuilder_.build();
        }
      }

      private void buildPartial0(rbk.protocol.MessageOdometer.Message_SlipSensors result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageOdometer.Message_SlipSensors) {
          return mergeFrom((rbk.protocol.MessageOdometer.Message_SlipSensors)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageOdometer.Message_SlipSensors other) {
        if (other == rbk.protocol.MessageOdometer.Message_SlipSensors.getDefaultInstance()) return this;
        if (slipSensorsBuilder_ == null) {
          if (!other.slipSensors_.isEmpty()) {
            if (slipSensors_.isEmpty()) {
              slipSensors_ = other.slipSensors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSlipSensorsIsMutable();
              slipSensors_.addAll(other.slipSensors_);
            }
            onChanged();
          }
        } else {
          if (!other.slipSensors_.isEmpty()) {
            if (slipSensorsBuilder_.isEmpty()) {
              slipSensorsBuilder_.dispose();
              slipSensorsBuilder_ = null;
              slipSensors_ = other.slipSensors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              slipSensorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSlipSensorsFieldBuilder() : null;
            } else {
              slipSensorsBuilder_.addAllMessages(other.slipSensors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                rbk.protocol.MessageOdometer.Message_SlipSensor m =
                    input.readMessage(
                        rbk.protocol.MessageOdometer.Message_SlipSensor.parser(),
                        extensionRegistry);
                if (slipSensorsBuilder_ == null) {
                  ensureSlipSensorsIsMutable();
                  slipSensors_.add(m);
                } else {
                  slipSensorsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor> slipSensors_ =
        java.util.Collections.emptyList();
      private void ensureSlipSensorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          slipSensors_ = new java.util.ArrayList<rbk.protocol.MessageOdometer.Message_SlipSensor>(slipSensors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_SlipSensor, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder, rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder> slipSensorsBuilder_;

      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor> getSlipSensorsList() {
        if (slipSensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(slipSensors_);
        } else {
          return slipSensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public int getSlipSensorsCount() {
        if (slipSensorsBuilder_ == null) {
          return slipSensors_.size();
        } else {
          return slipSensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipSensor getSlipSensors(int index) {
        if (slipSensorsBuilder_ == null) {
          return slipSensors_.get(index);
        } else {
          return slipSensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder setSlipSensors(
          int index, rbk.protocol.MessageOdometer.Message_SlipSensor value) {
        if (slipSensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlipSensorsIsMutable();
          slipSensors_.set(index, value);
          onChanged();
        } else {
          slipSensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder setSlipSensors(
          int index, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder builderForValue) {
        if (slipSensorsBuilder_ == null) {
          ensureSlipSensorsIsMutable();
          slipSensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          slipSensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder addSlipSensors(rbk.protocol.MessageOdometer.Message_SlipSensor value) {
        if (slipSensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlipSensorsIsMutable();
          slipSensors_.add(value);
          onChanged();
        } else {
          slipSensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder addSlipSensors(
          int index, rbk.protocol.MessageOdometer.Message_SlipSensor value) {
        if (slipSensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlipSensorsIsMutable();
          slipSensors_.add(index, value);
          onChanged();
        } else {
          slipSensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder addSlipSensors(
          rbk.protocol.MessageOdometer.Message_SlipSensor.Builder builderForValue) {
        if (slipSensorsBuilder_ == null) {
          ensureSlipSensorsIsMutable();
          slipSensors_.add(builderForValue.build());
          onChanged();
        } else {
          slipSensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder addSlipSensors(
          int index, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder builderForValue) {
        if (slipSensorsBuilder_ == null) {
          ensureSlipSensorsIsMutable();
          slipSensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          slipSensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder addAllSlipSensors(
          java.lang.Iterable<? extends rbk.protocol.MessageOdometer.Message_SlipSensor> values) {
        if (slipSensorsBuilder_ == null) {
          ensureSlipSensorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, slipSensors_);
          onChanged();
        } else {
          slipSensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder clearSlipSensors() {
        if (slipSensorsBuilder_ == null) {
          slipSensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          slipSensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public Builder removeSlipSensors(int index) {
        if (slipSensorsBuilder_ == null) {
          ensureSlipSensorsIsMutable();
          slipSensors_.remove(index);
          onChanged();
        } else {
          slipSensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipSensor.Builder getSlipSensorsBuilder(
          int index) {
        return getSlipSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder getSlipSensorsOrBuilder(
          int index) {
        if (slipSensorsBuilder_ == null) {
          return slipSensors_.get(index);  } else {
          return slipSensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public java.util.List<? extends rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder> 
           getSlipSensorsOrBuilderList() {
        if (slipSensorsBuilder_ != null) {
          return slipSensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(slipSensors_);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipSensor.Builder addSlipSensorsBuilder() {
        return getSlipSensorsFieldBuilder().addBuilder(
            rbk.protocol.MessageOdometer.Message_SlipSensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public rbk.protocol.MessageOdometer.Message_SlipSensor.Builder addSlipSensorsBuilder(
          int index) {
        return getSlipSensorsFieldBuilder().addBuilder(
            index, rbk.protocol.MessageOdometer.Message_SlipSensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_SlipSensor slip_sensors = 1;</code>
       */
      public java.util.List<rbk.protocol.MessageOdometer.Message_SlipSensor.Builder> 
           getSlipSensorsBuilderList() {
        return getSlipSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageOdometer.Message_SlipSensor, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder, rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder> 
          getSlipSensorsFieldBuilder() {
        if (slipSensorsBuilder_ == null) {
          slipSensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rbk.protocol.MessageOdometer.Message_SlipSensor, rbk.protocol.MessageOdometer.Message_SlipSensor.Builder, rbk.protocol.MessageOdometer.Message_SlipSensorOrBuilder>(
                  slipSensors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          slipSensors_ = null;
        }
        return slipSensorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_SlipSensors)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_SlipSensors)
    private static final rbk.protocol.MessageOdometer.Message_SlipSensors DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageOdometer.Message_SlipSensors();
    }

    public static rbk.protocol.MessageOdometer.Message_SlipSensors getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_SlipSensors>
        PARSER = new com.google.protobuf.AbstractParser<Message_SlipSensors>() {
      @java.lang.Override
      public Message_SlipSensors parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_SlipSensors> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_SlipSensors> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_SlipSensors getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_OdometerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Odometer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return The header.
     */
    rbk.protocol.MessageHeader.Message_Header getHeader();
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     */
    rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * cnt
     * </pre>
     *
     * <code>uint32 cycle = 2;</code>
     * @return The cycle.
     */
    int getCycle();

    /**
     * <pre>
     * m
     * </pre>
     *
     * <code>double x = 3;</code>
     * @return The x.
     */
    double getX();

    /**
     * <pre>
     * m
     * </pre>
     *
     * <code>double y = 4;</code>
     * @return The y.
     */
    double getY();

    /**
     * <pre>
     * rad
     * </pre>
     *
     * <code>float angle = 5;</code>
     * @return The angle.
     */
    float getAngle();

    /**
     * <code>bool is_stop = 6;</code>
     * @return The isStop.
     */
    boolean getIsStop();

    /**
     * <pre>
     * m/s
     * </pre>
     *
     * <code>float vel_x = 7;</code>
     * @return The velX.
     */
    float getVelX();

    /**
     * <pre>
     * m/s
     * </pre>
     *
     * <code>float vel_y = 8;</code>
     * @return The velY.
     */
    float getVelY();

    /**
     * <pre>
     * rad/s
     * </pre>
     *
     * <code>float vel_rotate = 9;</code>
     * @return The velRotate.
     */
    float getVelRotate();

    /**
     * <code>bool detect_skid = 10;</code>
     * @return The detectSkid.
     */
    boolean getDetectSkid();

    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo> 
        getMotorInfoList();
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    rbk.protocol.MessageMotorinfos.Message_MotorInfo getMotorInfo(int index);
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    int getMotorInfoCount();
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    java.util.List<? extends rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder> 
        getMotorInfoOrBuilderList();
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder getMotorInfoOrBuilder(
        int index);

    /**
     * <pre>
     *has motor following error(s)
     * </pre>
     *
     * <code>bool follow_err = 12;</code>
     * @return The followErr.
     */
    boolean getFollowErr();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Odometer}
   */
  public static final class Message_Odometer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Odometer)
      Message_OdometerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Odometer.newBuilder() to construct.
    private Message_Odometer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Odometer() {
      motorInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Odometer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Odometer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Odometer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageOdometer.Message_Odometer.class, rbk.protocol.MessageOdometer.Message_Odometer.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private rbk.protocol.MessageHeader.Message_Header header_;
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_Header getHeader() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.rbk.protocol.Message_Header header = 1;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
      return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
    }

    public static final int CYCLE_FIELD_NUMBER = 2;
    private int cycle_ = 0;
    /**
     * <pre>
     * cnt
     * </pre>
     *
     * <code>uint32 cycle = 2;</code>
     * @return The cycle.
     */
    @java.lang.Override
    public int getCycle() {
      return cycle_;
    }

    public static final int X_FIELD_NUMBER = 3;
    private double x_ = 0D;
    /**
     * <pre>
     * m
     * </pre>
     *
     * <code>double x = 3;</code>
     * @return The x.
     */
    @java.lang.Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 4;
    private double y_ = 0D;
    /**
     * <pre>
     * m
     * </pre>
     *
     * <code>double y = 4;</code>
     * @return The y.
     */
    @java.lang.Override
    public double getY() {
      return y_;
    }

    public static final int ANGLE_FIELD_NUMBER = 5;
    private float angle_ = 0F;
    /**
     * <pre>
     * rad
     * </pre>
     *
     * <code>float angle = 5;</code>
     * @return The angle.
     */
    @java.lang.Override
    public float getAngle() {
      return angle_;
    }

    public static final int IS_STOP_FIELD_NUMBER = 6;
    private boolean isStop_ = false;
    /**
     * <code>bool is_stop = 6;</code>
     * @return The isStop.
     */
    @java.lang.Override
    public boolean getIsStop() {
      return isStop_;
    }

    public static final int VEL_X_FIELD_NUMBER = 7;
    private float velX_ = 0F;
    /**
     * <pre>
     * m/s
     * </pre>
     *
     * <code>float vel_x = 7;</code>
     * @return The velX.
     */
    @java.lang.Override
    public float getVelX() {
      return velX_;
    }

    public static final int VEL_Y_FIELD_NUMBER = 8;
    private float velY_ = 0F;
    /**
     * <pre>
     * m/s
     * </pre>
     *
     * <code>float vel_y = 8;</code>
     * @return The velY.
     */
    @java.lang.Override
    public float getVelY() {
      return velY_;
    }

    public static final int VEL_ROTATE_FIELD_NUMBER = 9;
    private float velRotate_ = 0F;
    /**
     * <pre>
     * rad/s
     * </pre>
     *
     * <code>float vel_rotate = 9;</code>
     * @return The velRotate.
     */
    @java.lang.Override
    public float getVelRotate() {
      return velRotate_;
    }

    public static final int DETECT_SKID_FIELD_NUMBER = 10;
    private boolean detectSkid_ = false;
    /**
     * <code>bool detect_skid = 10;</code>
     * @return The detectSkid.
     */
    @java.lang.Override
    public boolean getDetectSkid() {
      return detectSkid_;
    }

    public static final int MOTOR_INFO_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo> motorInfo_;
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    @java.lang.Override
    public java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo> getMotorInfoList() {
      return motorInfo_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder> 
        getMotorInfoOrBuilderList() {
      return motorInfo_;
    }
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    @java.lang.Override
    public int getMotorInfoCount() {
      return motorInfo_.size();
    }
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageMotorinfos.Message_MotorInfo getMotorInfo(int index) {
      return motorInfo_.get(index);
    }
    /**
     * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
     */
    @java.lang.Override
    public rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder getMotorInfoOrBuilder(
        int index) {
      return motorInfo_.get(index);
    }

    public static final int FOLLOW_ERR_FIELD_NUMBER = 12;
    private boolean followErr_ = false;
    /**
     * <pre>
     *has motor following error(s)
     * </pre>
     *
     * <code>bool follow_err = 12;</code>
     * @return The followErr.
     */
    @java.lang.Override
    public boolean getFollowErr() {
      return followErr_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (cycle_ != 0) {
        output.writeUInt32(2, cycle_);
      }
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        output.writeDouble(3, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        output.writeDouble(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(angle_) != 0) {
        output.writeFloat(5, angle_);
      }
      if (isStop_ != false) {
        output.writeBool(6, isStop_);
      }
      if (java.lang.Float.floatToRawIntBits(velX_) != 0) {
        output.writeFloat(7, velX_);
      }
      if (java.lang.Float.floatToRawIntBits(velY_) != 0) {
        output.writeFloat(8, velY_);
      }
      if (java.lang.Float.floatToRawIntBits(velRotate_) != 0) {
        output.writeFloat(9, velRotate_);
      }
      if (detectSkid_ != false) {
        output.writeBool(10, detectSkid_);
      }
      for (int i = 0; i < motorInfo_.size(); i++) {
        output.writeMessage(11, motorInfo_.get(i));
      }
      if (followErr_ != false) {
        output.writeBool(12, followErr_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (cycle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, cycle_);
      }
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(angle_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, angle_);
      }
      if (isStop_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isStop_);
      }
      if (java.lang.Float.floatToRawIntBits(velX_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, velX_);
      }
      if (java.lang.Float.floatToRawIntBits(velY_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, velY_);
      }
      if (java.lang.Float.floatToRawIntBits(velRotate_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, velRotate_);
      }
      if (detectSkid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, detectSkid_);
      }
      for (int i = 0; i < motorInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, motorInfo_.get(i));
      }
      if (followErr_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, followErr_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageOdometer.Message_Odometer)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageOdometer.Message_Odometer other = (rbk.protocol.MessageOdometer.Message_Odometer) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (getCycle()
          != other.getCycle()) return false;
      if (java.lang.Double.doubleToLongBits(getX())
          != java.lang.Double.doubleToLongBits(
              other.getX())) return false;
      if (java.lang.Double.doubleToLongBits(getY())
          != java.lang.Double.doubleToLongBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getAngle())
          != java.lang.Float.floatToIntBits(
              other.getAngle())) return false;
      if (getIsStop()
          != other.getIsStop()) return false;
      if (java.lang.Float.floatToIntBits(getVelX())
          != java.lang.Float.floatToIntBits(
              other.getVelX())) return false;
      if (java.lang.Float.floatToIntBits(getVelY())
          != java.lang.Float.floatToIntBits(
              other.getVelY())) return false;
      if (java.lang.Float.floatToIntBits(getVelRotate())
          != java.lang.Float.floatToIntBits(
              other.getVelRotate())) return false;
      if (getDetectSkid()
          != other.getDetectSkid()) return false;
      if (!getMotorInfoList()
          .equals(other.getMotorInfoList())) return false;
      if (getFollowErr()
          != other.getFollowErr()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + CYCLE_FIELD_NUMBER;
      hash = (53 * hash) + getCycle();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      hash = (37 * hash) + ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAngle());
      hash = (37 * hash) + IS_STOP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsStop());
      hash = (37 * hash) + VEL_X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVelX());
      hash = (37 * hash) + VEL_Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVelY());
      hash = (37 * hash) + VEL_ROTATE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVelRotate());
      hash = (37 * hash) + DETECT_SKID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDetectSkid());
      if (getMotorInfoCount() > 0) {
        hash = (37 * hash) + MOTOR_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getMotorInfoList().hashCode();
      }
      hash = (37 * hash) + FOLLOW_ERR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFollowErr());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageOdometer.Message_Odometer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageOdometer.Message_Odometer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageOdometer.Message_Odometer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageOdometer.Message_Odometer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Odometer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Odometer)
        rbk.protocol.MessageOdometer.Message_OdometerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Odometer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Odometer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageOdometer.Message_Odometer.class, rbk.protocol.MessageOdometer.Message_Odometer.Builder.class);
      }

      // Construct using rbk.protocol.MessageOdometer.Message_Odometer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        cycle_ = 0;
        x_ = 0D;
        y_ = 0D;
        angle_ = 0F;
        isStop_ = false;
        velX_ = 0F;
        velY_ = 0F;
        velRotate_ = 0F;
        detectSkid_ = false;
        if (motorInfoBuilder_ == null) {
          motorInfo_ = java.util.Collections.emptyList();
        } else {
          motorInfo_ = null;
          motorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        followErr_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageOdometer.internal_static_rbk_protocol_Message_Odometer_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Odometer getDefaultInstanceForType() {
        return rbk.protocol.MessageOdometer.Message_Odometer.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Odometer build() {
        rbk.protocol.MessageOdometer.Message_Odometer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageOdometer.Message_Odometer buildPartial() {
        rbk.protocol.MessageOdometer.Message_Odometer result = new rbk.protocol.MessageOdometer.Message_Odometer(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(rbk.protocol.MessageOdometer.Message_Odometer result) {
        if (motorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            motorInfo_ = java.util.Collections.unmodifiableList(motorInfo_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.motorInfo_ = motorInfo_;
        } else {
          result.motorInfo_ = motorInfoBuilder_.build();
        }
      }

      private void buildPartial0(rbk.protocol.MessageOdometer.Message_Odometer result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.header_ = headerBuilder_ == null
              ? header_
              : headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.cycle_ = cycle_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.x_ = x_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.y_ = y_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.angle_ = angle_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isStop_ = isStop_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.velX_ = velX_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.velY_ = velY_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.velRotate_ = velRotate_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.detectSkid_ = detectSkid_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.followErr_ = followErr_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageOdometer.Message_Odometer) {
          return mergeFrom((rbk.protocol.MessageOdometer.Message_Odometer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageOdometer.Message_Odometer other) {
        if (other == rbk.protocol.MessageOdometer.Message_Odometer.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getCycle() != 0) {
          setCycle(other.getCycle());
        }
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        if (other.getAngle() != 0F) {
          setAngle(other.getAngle());
        }
        if (other.getIsStop() != false) {
          setIsStop(other.getIsStop());
        }
        if (other.getVelX() != 0F) {
          setVelX(other.getVelX());
        }
        if (other.getVelY() != 0F) {
          setVelY(other.getVelY());
        }
        if (other.getVelRotate() != 0F) {
          setVelRotate(other.getVelRotate());
        }
        if (other.getDetectSkid() != false) {
          setDetectSkid(other.getDetectSkid());
        }
        if (motorInfoBuilder_ == null) {
          if (!other.motorInfo_.isEmpty()) {
            if (motorInfo_.isEmpty()) {
              motorInfo_ = other.motorInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureMotorInfoIsMutable();
              motorInfo_.addAll(other.motorInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.motorInfo_.isEmpty()) {
            if (motorInfoBuilder_.isEmpty()) {
              motorInfoBuilder_.dispose();
              motorInfoBuilder_ = null;
              motorInfo_ = other.motorInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
              motorInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMotorInfoFieldBuilder() : null;
            } else {
              motorInfoBuilder_.addAllMessages(other.motorInfo_);
            }
          }
        }
        if (other.getFollowErr() != false) {
          setFollowErr(other.getFollowErr());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                cycle_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 25: {
                x_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                y_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 45: {
                angle_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 48: {
                isStop_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 61: {
                velX_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                velY_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 77: {
                velRotate_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 80: {
                detectSkid_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                rbk.protocol.MessageMotorinfos.Message_MotorInfo m =
                    input.readMessage(
                        rbk.protocol.MessageMotorinfos.Message_MotorInfo.parser(),
                        extensionRegistry);
                if (motorInfoBuilder_ == null) {
                  ensureMotorInfoIsMutable();
                  motorInfo_.add(m);
                } else {
                  motorInfoBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 96: {
                followErr_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private rbk.protocol.MessageHeader.Message_Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       * @return The header.
       */
      public rbk.protocol.MessageHeader.Message_Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder setHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder setHeader(
          rbk.protocol.MessageHeader.Message_Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder mergeHeader(rbk.protocol.MessageHeader.Message_Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            header_ != null &&
            header_ != rbk.protocol.MessageHeader.Message_Header.getDefaultInstance()) {
            getHeaderBuilder().mergeFrom(value);
          } else {
            header_ = value;
          }
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public Builder clearHeader() {
        bitField0_ = (bitField0_ & ~0x00000001);
        header_ = null;
        if (headerBuilder_ != null) {
          headerBuilder_.dispose();
          headerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public rbk.protocol.MessageHeader.Message_Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      public rbk.protocol.MessageHeader.Message_HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              rbk.protocol.MessageHeader.Message_Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.rbk.protocol.Message_Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rbk.protocol.MessageHeader.Message_Header, rbk.protocol.MessageHeader.Message_Header.Builder, rbk.protocol.MessageHeader.Message_HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private int cycle_ ;
      /**
       * <pre>
       * cnt
       * </pre>
       *
       * <code>uint32 cycle = 2;</code>
       * @return The cycle.
       */
      @java.lang.Override
      public int getCycle() {
        return cycle_;
      }
      /**
       * <pre>
       * cnt
       * </pre>
       *
       * <code>uint32 cycle = 2;</code>
       * @param value The cycle to set.
       * @return This builder for chaining.
       */
      public Builder setCycle(int value) {

        cycle_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cnt
       * </pre>
       *
       * <code>uint32 cycle = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCycle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cycle_ = 0;
        onChanged();
        return this;
      }

      private double x_ ;
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double x = 3;</code>
       * @return The x.
       */
      @java.lang.Override
      public double getX() {
        return x_;
      }
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double x = 3;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {

        x_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double x = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double y = 4;</code>
       * @return The y.
       */
      @java.lang.Override
      public double getY() {
        return y_;
      }
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double y = 4;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {

        y_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * m
       * </pre>
       *
       * <code>double y = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0D;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <pre>
       * rad
       * </pre>
       *
       * <code>float angle = 5;</code>
       * @return The angle.
       */
      @java.lang.Override
      public float getAngle() {
        return angle_;
      }
      /**
       * <pre>
       * rad
       * </pre>
       *
       * <code>float angle = 5;</code>
       * @param value The angle to set.
       * @return This builder for chaining.
       */
      public Builder setAngle(float value) {

        angle_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rad
       * </pre>
       *
       * <code>float angle = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        angle_ = 0F;
        onChanged();
        return this;
      }

      private boolean isStop_ ;
      /**
       * <code>bool is_stop = 6;</code>
       * @return The isStop.
       */
      @java.lang.Override
      public boolean getIsStop() {
        return isStop_;
      }
      /**
       * <code>bool is_stop = 6;</code>
       * @param value The isStop to set.
       * @return This builder for chaining.
       */
      public Builder setIsStop(boolean value) {

        isStop_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_stop = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsStop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isStop_ = false;
        onChanged();
        return this;
      }

      private float velX_ ;
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_x = 7;</code>
       * @return The velX.
       */
      @java.lang.Override
      public float getVelX() {
        return velX_;
      }
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_x = 7;</code>
       * @param value The velX to set.
       * @return This builder for chaining.
       */
      public Builder setVelX(float value) {

        velX_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_x = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelX() {
        bitField0_ = (bitField0_ & ~0x00000040);
        velX_ = 0F;
        onChanged();
        return this;
      }

      private float velY_ ;
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_y = 8;</code>
       * @return The velY.
       */
      @java.lang.Override
      public float getVelY() {
        return velY_;
      }
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_y = 8;</code>
       * @param value The velY to set.
       * @return This builder for chaining.
       */
      public Builder setVelY(float value) {

        velY_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * m/s
       * </pre>
       *
       * <code>float vel_y = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        velY_ = 0F;
        onChanged();
        return this;
      }

      private float velRotate_ ;
      /**
       * <pre>
       * rad/s
       * </pre>
       *
       * <code>float vel_rotate = 9;</code>
       * @return The velRotate.
       */
      @java.lang.Override
      public float getVelRotate() {
        return velRotate_;
      }
      /**
       * <pre>
       * rad/s
       * </pre>
       *
       * <code>float vel_rotate = 9;</code>
       * @param value The velRotate to set.
       * @return This builder for chaining.
       */
      public Builder setVelRotate(float value) {

        velRotate_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rad/s
       * </pre>
       *
       * <code>float vel_rotate = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelRotate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        velRotate_ = 0F;
        onChanged();
        return this;
      }

      private boolean detectSkid_ ;
      /**
       * <code>bool detect_skid = 10;</code>
       * @return The detectSkid.
       */
      @java.lang.Override
      public boolean getDetectSkid() {
        return detectSkid_;
      }
      /**
       * <code>bool detect_skid = 10;</code>
       * @param value The detectSkid to set.
       * @return This builder for chaining.
       */
      public Builder setDetectSkid(boolean value) {

        detectSkid_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>bool detect_skid = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDetectSkid() {
        bitField0_ = (bitField0_ & ~0x00000200);
        detectSkid_ = false;
        onChanged();
        return this;
      }

      private java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo> motorInfo_ =
        java.util.Collections.emptyList();
      private void ensureMotorInfoIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          motorInfo_ = new java.util.ArrayList<rbk.protocol.MessageMotorinfos.Message_MotorInfo>(motorInfo_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageMotorinfos.Message_MotorInfo, rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder, rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder> motorInfoBuilder_;

      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo> getMotorInfoList() {
        if (motorInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(motorInfo_);
        } else {
          return motorInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public int getMotorInfoCount() {
        if (motorInfoBuilder_ == null) {
          return motorInfo_.size();
        } else {
          return motorInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public rbk.protocol.MessageMotorinfos.Message_MotorInfo getMotorInfo(int index) {
        if (motorInfoBuilder_ == null) {
          return motorInfo_.get(index);
        } else {
          return motorInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder setMotorInfo(
          int index, rbk.protocol.MessageMotorinfos.Message_MotorInfo value) {
        if (motorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorInfoIsMutable();
          motorInfo_.set(index, value);
          onChanged();
        } else {
          motorInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder setMotorInfo(
          int index, rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder builderForValue) {
        if (motorInfoBuilder_ == null) {
          ensureMotorInfoIsMutable();
          motorInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          motorInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder addMotorInfo(rbk.protocol.MessageMotorinfos.Message_MotorInfo value) {
        if (motorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorInfoIsMutable();
          motorInfo_.add(value);
          onChanged();
        } else {
          motorInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder addMotorInfo(
          int index, rbk.protocol.MessageMotorinfos.Message_MotorInfo value) {
        if (motorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMotorInfoIsMutable();
          motorInfo_.add(index, value);
          onChanged();
        } else {
          motorInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder addMotorInfo(
          rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder builderForValue) {
        if (motorInfoBuilder_ == null) {
          ensureMotorInfoIsMutable();
          motorInfo_.add(builderForValue.build());
          onChanged();
        } else {
          motorInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder addMotorInfo(
          int index, rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder builderForValue) {
        if (motorInfoBuilder_ == null) {
          ensureMotorInfoIsMutable();
          motorInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          motorInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder addAllMotorInfo(
          java.lang.Iterable<? extends rbk.protocol.MessageMotorinfos.Message_MotorInfo> values) {
        if (motorInfoBuilder_ == null) {
          ensureMotorInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, motorInfo_);
          onChanged();
        } else {
          motorInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder clearMotorInfo() {
        if (motorInfoBuilder_ == null) {
          motorInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          motorInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public Builder removeMotorInfo(int index) {
        if (motorInfoBuilder_ == null) {
          ensureMotorInfoIsMutable();
          motorInfo_.remove(index);
          onChanged();
        } else {
          motorInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder getMotorInfoBuilder(
          int index) {
        return getMotorInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder getMotorInfoOrBuilder(
          int index) {
        if (motorInfoBuilder_ == null) {
          return motorInfo_.get(index);  } else {
          return motorInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public java.util.List<? extends rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder> 
           getMotorInfoOrBuilderList() {
        if (motorInfoBuilder_ != null) {
          return motorInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(motorInfo_);
        }
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder addMotorInfoBuilder() {
        return getMotorInfoFieldBuilder().addBuilder(
            rbk.protocol.MessageMotorinfos.Message_MotorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder addMotorInfoBuilder(
          int index) {
        return getMotorInfoFieldBuilder().addBuilder(
            index, rbk.protocol.MessageMotorinfos.Message_MotorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .rbk.protocol.Message_MotorInfo motor_info = 11;</code>
       */
      public java.util.List<rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder> 
           getMotorInfoBuilderList() {
        return getMotorInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rbk.protocol.MessageMotorinfos.Message_MotorInfo, rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder, rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder> 
          getMotorInfoFieldBuilder() {
        if (motorInfoBuilder_ == null) {
          motorInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rbk.protocol.MessageMotorinfos.Message_MotorInfo, rbk.protocol.MessageMotorinfos.Message_MotorInfo.Builder, rbk.protocol.MessageMotorinfos.Message_MotorInfoOrBuilder>(
                  motorInfo_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          motorInfo_ = null;
        }
        return motorInfoBuilder_;
      }

      private boolean followErr_ ;
      /**
       * <pre>
       *has motor following error(s)
       * </pre>
       *
       * <code>bool follow_err = 12;</code>
       * @return The followErr.
       */
      @java.lang.Override
      public boolean getFollowErr() {
        return followErr_;
      }
      /**
       * <pre>
       *has motor following error(s)
       * </pre>
       *
       * <code>bool follow_err = 12;</code>
       * @param value The followErr to set.
       * @return This builder for chaining.
       */
      public Builder setFollowErr(boolean value) {

        followErr_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *has motor following error(s)
       * </pre>
       *
       * <code>bool follow_err = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearFollowErr() {
        bitField0_ = (bitField0_ & ~0x00000800);
        followErr_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Odometer)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Odometer)
    private static final rbk.protocol.MessageOdometer.Message_Odometer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageOdometer.Message_Odometer();
    }

    public static rbk.protocol.MessageOdometer.Message_Odometer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Odometer>
        PARSER = new com.google.protobuf.AbstractParser<Message_Odometer>() {
      @java.lang.Override
      public Message_Odometer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Odometer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Odometer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageOdometer.Message_Odometer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Slip_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Slip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_SlipSensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_SlipSensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_SlipSensors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_SlipSensors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Odometer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Odometer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026message_odometer.proto\022\014rbk.protocol\032\024" +
      "message_header.proto\032\030message_motorinfos" +
      ".proto\"=\n\014Message_Slip\022\014\n\004slip\030\001 \001(\002\022\021\n\t" +
      "slip_time\030\002 \001(\002\022\014\n\004name\030\003 \001(\t\"\217\002\n\022Messag" +
      "e_SlipSensor\0223\n\004type\030\001 \001(\0162%.rbk.protoco" +
      "l.Message_SlipSensor.Type\022&\n\002vx\030\002 \001(\0132\032." +
      "rbk.protocol.Message_Slip\022&\n\002vy\030\003 \001(\0132\032." +
      "rbk.protocol.Message_Slip\022&\n\002vw\030\004 \001(\0132\032." +
      "rbk.protocol.Message_Slip\022)\n\005motor\030\005 \003(\013" +
      "2\032.rbk.protocol.Message_Slip\"!\n\004Type\022\007\n\003" +
      "IMU\020\000\022\007\n\003LOC\020\001\022\007\n\003OPT\020\002\"M\n\023Message_SlipS" +
      "ensors\0226\n\014slip_sensors\030\001 \003(\0132 .rbk.proto" +
      "col.Message_SlipSensor\"\225\002\n\020Message_Odome" +
      "ter\022,\n\006header\030\001 \001(\0132\034.rbk.protocol.Messa" +
      "ge_Header\022\r\n\005cycle\030\002 \001(\r\022\t\n\001x\030\003 \001(\001\022\t\n\001y" +
      "\030\004 \001(\001\022\r\n\005angle\030\005 \001(\002\022\017\n\007is_stop\030\006 \001(\010\022\r" +
      "\n\005vel_x\030\007 \001(\002\022\r\n\005vel_y\030\010 \001(\002\022\022\n\nvel_rota" +
      "te\030\t \001(\002\022\023\n\013detect_skid\030\n \001(\010\0223\n\nmotor_i" +
      "nfo\030\013 \003(\0132\037.rbk.protocol.Message_MotorIn" +
      "fo\022\022\n\nfollow_err\030\014 \001(\010b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rbk.protocol.MessageHeader.getDescriptor(),
          rbk.protocol.MessageMotorinfos.getDescriptor(),
        });
    internal_static_rbk_protocol_Message_Slip_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_Slip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Slip_descriptor,
        new java.lang.String[] { "Slip", "SlipTime", "Name", });
    internal_static_rbk_protocol_Message_SlipSensor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rbk_protocol_Message_SlipSensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_SlipSensor_descriptor,
        new java.lang.String[] { "Type", "Vx", "Vy", "Vw", "Motor", });
    internal_static_rbk_protocol_Message_SlipSensors_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_rbk_protocol_Message_SlipSensors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_SlipSensors_descriptor,
        new java.lang.String[] { "SlipSensors", });
    internal_static_rbk_protocol_Message_Odometer_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_rbk_protocol_Message_Odometer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Odometer_descriptor,
        new java.lang.String[] { "Header", "Cycle", "X", "Y", "Angle", "IsStop", "VelX", "VelY", "VelRotate", "DetectSkid", "MotorInfo", "FollowErr", });
    rbk.protocol.MessageHeader.getDescriptor();
    rbk.protocol.MessageMotorinfos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
