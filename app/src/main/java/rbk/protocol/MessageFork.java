// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_fork.proto

package rbk.protocol;

public final class MessageFork {
  private MessageFork() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_ForkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Fork)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double height = 1;</code>
     * @return The height.
     */
    double getHeight();

    /**
     * <code>double incline = 2;</code>
     * @return The incline.
     */
    double getIncline();

    /**
     * <code>double fork_val = 3;</code>
     * @return The forkVal.
     */
    double getForkVal();

    /**
     * <code>double incline_val = 4;</code>
     * @return The inclineVal.
     */
    double getInclineVal();

    /**
     * <code>int32 fork_error = 5;</code>
     * @return The forkError.
     */
    int getForkError();

    /**
     * <code>bool height_in_place = 6;</code>
     * @return The heightInPlace.
     */
    boolean getHeightInPlace();

    /**
     * <code>bool incline_in_place = 7;</code>
     * @return The inclineInPlace.
     */
    boolean getInclineInPlace();

    /**
     * <code>bool get_goods = 8;</code>
     * @return The getGoods.
     */
    boolean getGetGoods();

    /**
     * <code>bool forward_in_place = 9;</code>
     * @return The forwardInPlace.
     */
    boolean getForwardInPlace();

    /**
     * <code>double forward_val = 10;</code>
     * @return The forwardVal.
     */
    double getForwardVal();

    /**
     * <pre>
     *压力传感器原始ADC值
     * </pre>
     *
     * <code>int32 pressure_adc = 11;</code>
     * @return The pressureAdc.
     */
    int getPressureAdc();

    /**
     * <pre>
     *压力传感器转换后重量值(kg)
     * </pre>
     *
     * <code>double pressure_actual = 12;</code>
     * @return The pressureActual.
     */
    double getPressureActual();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Fork}
   */
  public static final class Message_Fork extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Fork)
      Message_ForkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Fork.newBuilder() to construct.
    private Message_Fork(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Fork() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Fork();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageFork.Message_Fork.class, rbk.protocol.MessageFork.Message_Fork.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private double height_ = 0D;
    /**
     * <code>double height = 1;</code>
     * @return The height.
     */
    @java.lang.Override
    public double getHeight() {
      return height_;
    }

    public static final int INCLINE_FIELD_NUMBER = 2;
    private double incline_ = 0D;
    /**
     * <code>double incline = 2;</code>
     * @return The incline.
     */
    @java.lang.Override
    public double getIncline() {
      return incline_;
    }

    public static final int FORK_VAL_FIELD_NUMBER = 3;
    private double forkVal_ = 0D;
    /**
     * <code>double fork_val = 3;</code>
     * @return The forkVal.
     */
    @java.lang.Override
    public double getForkVal() {
      return forkVal_;
    }

    public static final int INCLINE_VAL_FIELD_NUMBER = 4;
    private double inclineVal_ = 0D;
    /**
     * <code>double incline_val = 4;</code>
     * @return The inclineVal.
     */
    @java.lang.Override
    public double getInclineVal() {
      return inclineVal_;
    }

    public static final int FORK_ERROR_FIELD_NUMBER = 5;
    private int forkError_ = 0;
    /**
     * <code>int32 fork_error = 5;</code>
     * @return The forkError.
     */
    @java.lang.Override
    public int getForkError() {
      return forkError_;
    }

    public static final int HEIGHT_IN_PLACE_FIELD_NUMBER = 6;
    private boolean heightInPlace_ = false;
    /**
     * <code>bool height_in_place = 6;</code>
     * @return The heightInPlace.
     */
    @java.lang.Override
    public boolean getHeightInPlace() {
      return heightInPlace_;
    }

    public static final int INCLINE_IN_PLACE_FIELD_NUMBER = 7;
    private boolean inclineInPlace_ = false;
    /**
     * <code>bool incline_in_place = 7;</code>
     * @return The inclineInPlace.
     */
    @java.lang.Override
    public boolean getInclineInPlace() {
      return inclineInPlace_;
    }

    public static final int GET_GOODS_FIELD_NUMBER = 8;
    private boolean getGoods_ = false;
    /**
     * <code>bool get_goods = 8;</code>
     * @return The getGoods.
     */
    @java.lang.Override
    public boolean getGetGoods() {
      return getGoods_;
    }

    public static final int FORWARD_IN_PLACE_FIELD_NUMBER = 9;
    private boolean forwardInPlace_ = false;
    /**
     * <code>bool forward_in_place = 9;</code>
     * @return The forwardInPlace.
     */
    @java.lang.Override
    public boolean getForwardInPlace() {
      return forwardInPlace_;
    }

    public static final int FORWARD_VAL_FIELD_NUMBER = 10;
    private double forwardVal_ = 0D;
    /**
     * <code>double forward_val = 10;</code>
     * @return The forwardVal.
     */
    @java.lang.Override
    public double getForwardVal() {
      return forwardVal_;
    }

    public static final int PRESSURE_ADC_FIELD_NUMBER = 11;
    private int pressureAdc_ = 0;
    /**
     * <pre>
     *压力传感器原始ADC值
     * </pre>
     *
     * <code>int32 pressure_adc = 11;</code>
     * @return The pressureAdc.
     */
    @java.lang.Override
    public int getPressureAdc() {
      return pressureAdc_;
    }

    public static final int PRESSURE_ACTUAL_FIELD_NUMBER = 12;
    private double pressureActual_ = 0D;
    /**
     * <pre>
     *压力传感器转换后重量值(kg)
     * </pre>
     *
     * <code>double pressure_actual = 12;</code>
     * @return The pressureActual.
     */
    @java.lang.Override
    public double getPressureActual() {
      return pressureActual_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(height_) != 0) {
        output.writeDouble(1, height_);
      }
      if (java.lang.Double.doubleToRawLongBits(incline_) != 0) {
        output.writeDouble(2, incline_);
      }
      if (java.lang.Double.doubleToRawLongBits(forkVal_) != 0) {
        output.writeDouble(3, forkVal_);
      }
      if (java.lang.Double.doubleToRawLongBits(inclineVal_) != 0) {
        output.writeDouble(4, inclineVal_);
      }
      if (forkError_ != 0) {
        output.writeInt32(5, forkError_);
      }
      if (heightInPlace_ != false) {
        output.writeBool(6, heightInPlace_);
      }
      if (inclineInPlace_ != false) {
        output.writeBool(7, inclineInPlace_);
      }
      if (getGoods_ != false) {
        output.writeBool(8, getGoods_);
      }
      if (forwardInPlace_ != false) {
        output.writeBool(9, forwardInPlace_);
      }
      if (java.lang.Double.doubleToRawLongBits(forwardVal_) != 0) {
        output.writeDouble(10, forwardVal_);
      }
      if (pressureAdc_ != 0) {
        output.writeInt32(11, pressureAdc_);
      }
      if (java.lang.Double.doubleToRawLongBits(pressureActual_) != 0) {
        output.writeDouble(12, pressureActual_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(height_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, height_);
      }
      if (java.lang.Double.doubleToRawLongBits(incline_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, incline_);
      }
      if (java.lang.Double.doubleToRawLongBits(forkVal_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, forkVal_);
      }
      if (java.lang.Double.doubleToRawLongBits(inclineVal_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, inclineVal_);
      }
      if (forkError_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, forkError_);
      }
      if (heightInPlace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, heightInPlace_);
      }
      if (inclineInPlace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, inclineInPlace_);
      }
      if (getGoods_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getGoods_);
      }
      if (forwardInPlace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, forwardInPlace_);
      }
      if (java.lang.Double.doubleToRawLongBits(forwardVal_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, forwardVal_);
      }
      if (pressureAdc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, pressureAdc_);
      }
      if (java.lang.Double.doubleToRawLongBits(pressureActual_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, pressureActual_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageFork.Message_Fork)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageFork.Message_Fork other = (rbk.protocol.MessageFork.Message_Fork) obj;

      if (java.lang.Double.doubleToLongBits(getHeight())
          != java.lang.Double.doubleToLongBits(
              other.getHeight())) return false;
      if (java.lang.Double.doubleToLongBits(getIncline())
          != java.lang.Double.doubleToLongBits(
              other.getIncline())) return false;
      if (java.lang.Double.doubleToLongBits(getForkVal())
          != java.lang.Double.doubleToLongBits(
              other.getForkVal())) return false;
      if (java.lang.Double.doubleToLongBits(getInclineVal())
          != java.lang.Double.doubleToLongBits(
              other.getInclineVal())) return false;
      if (getForkError()
          != other.getForkError()) return false;
      if (getHeightInPlace()
          != other.getHeightInPlace()) return false;
      if (getInclineInPlace()
          != other.getInclineInPlace()) return false;
      if (getGetGoods()
          != other.getGetGoods()) return false;
      if (getForwardInPlace()
          != other.getForwardInPlace()) return false;
      if (java.lang.Double.doubleToLongBits(getForwardVal())
          != java.lang.Double.doubleToLongBits(
              other.getForwardVal())) return false;
      if (getPressureAdc()
          != other.getPressureAdc()) return false;
      if (java.lang.Double.doubleToLongBits(getPressureActual())
          != java.lang.Double.doubleToLongBits(
              other.getPressureActual())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeight()));
      hash = (37 * hash) + INCLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getIncline()));
      hash = (37 * hash) + FORK_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getForkVal()));
      hash = (37 * hash) + INCLINE_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getInclineVal()));
      hash = (37 * hash) + FORK_ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getForkError();
      hash = (37 * hash) + HEIGHT_IN_PLACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHeightInPlace());
      hash = (37 * hash) + INCLINE_IN_PLACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInclineInPlace());
      hash = (37 * hash) + GET_GOODS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGetGoods());
      hash = (37 * hash) + FORWARD_IN_PLACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getForwardInPlace());
      hash = (37 * hash) + FORWARD_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getForwardVal()));
      hash = (37 * hash) + PRESSURE_ADC_FIELD_NUMBER;
      hash = (53 * hash) + getPressureAdc();
      hash = (37 * hash) + PRESSURE_ACTUAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPressureActual()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageFork.Message_Fork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageFork.Message_Fork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageFork.Message_Fork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Fork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Fork)
        rbk.protocol.MessageFork.Message_ForkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageFork.Message_Fork.class, rbk.protocol.MessageFork.Message_Fork.Builder.class);
      }

      // Construct using rbk.protocol.MessageFork.Message_Fork.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        height_ = 0D;
        incline_ = 0D;
        forkVal_ = 0D;
        inclineVal_ = 0D;
        forkError_ = 0;
        heightInPlace_ = false;
        inclineInPlace_ = false;
        getGoods_ = false;
        forwardInPlace_ = false;
        forwardVal_ = 0D;
        pressureAdc_ = 0;
        pressureActual_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork getDefaultInstanceForType() {
        return rbk.protocol.MessageFork.Message_Fork.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork build() {
        rbk.protocol.MessageFork.Message_Fork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork buildPartial() {
        rbk.protocol.MessageFork.Message_Fork result = new rbk.protocol.MessageFork.Message_Fork(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageFork.Message_Fork result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.height_ = height_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.incline_ = incline_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.forkVal_ = forkVal_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.inclineVal_ = inclineVal_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.forkError_ = forkError_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.heightInPlace_ = heightInPlace_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.inclineInPlace_ = inclineInPlace_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.getGoods_ = getGoods_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.forwardInPlace_ = forwardInPlace_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.forwardVal_ = forwardVal_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.pressureAdc_ = pressureAdc_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.pressureActual_ = pressureActual_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageFork.Message_Fork) {
          return mergeFrom((rbk.protocol.MessageFork.Message_Fork)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageFork.Message_Fork other) {
        if (other == rbk.protocol.MessageFork.Message_Fork.getDefaultInstance()) return this;
        if (other.getHeight() != 0D) {
          setHeight(other.getHeight());
        }
        if (other.getIncline() != 0D) {
          setIncline(other.getIncline());
        }
        if (other.getForkVal() != 0D) {
          setForkVal(other.getForkVal());
        }
        if (other.getInclineVal() != 0D) {
          setInclineVal(other.getInclineVal());
        }
        if (other.getForkError() != 0) {
          setForkError(other.getForkError());
        }
        if (other.getHeightInPlace() != false) {
          setHeightInPlace(other.getHeightInPlace());
        }
        if (other.getInclineInPlace() != false) {
          setInclineInPlace(other.getInclineInPlace());
        }
        if (other.getGetGoods() != false) {
          setGetGoods(other.getGetGoods());
        }
        if (other.getForwardInPlace() != false) {
          setForwardInPlace(other.getForwardInPlace());
        }
        if (other.getForwardVal() != 0D) {
          setForwardVal(other.getForwardVal());
        }
        if (other.getPressureAdc() != 0) {
          setPressureAdc(other.getPressureAdc());
        }
        if (other.getPressureActual() != 0D) {
          setPressureActual(other.getPressureActual());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                height_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                incline_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                forkVal_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                inclineVal_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 40: {
                forkError_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                heightInPlace_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                inclineInPlace_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                getGoods_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                forwardInPlace_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 81: {
                forwardVal_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              case 88: {
                pressureAdc_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 97: {
                pressureActual_ = input.readDouble();
                bitField0_ |= 0x00000800;
                break;
              } // case 97
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double height_ ;
      /**
       * <code>double height = 1;</code>
       * @return The height.
       */
      @java.lang.Override
      public double getHeight() {
        return height_;
      }
      /**
       * <code>double height = 1;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(double value) {

        height_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0D;
        onChanged();
        return this;
      }

      private double incline_ ;
      /**
       * <code>double incline = 2;</code>
       * @return The incline.
       */
      @java.lang.Override
      public double getIncline() {
        return incline_;
      }
      /**
       * <code>double incline = 2;</code>
       * @param value The incline to set.
       * @return This builder for chaining.
       */
      public Builder setIncline(double value) {

        incline_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double incline = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncline() {
        bitField0_ = (bitField0_ & ~0x00000002);
        incline_ = 0D;
        onChanged();
        return this;
      }

      private double forkVal_ ;
      /**
       * <code>double fork_val = 3;</code>
       * @return The forkVal.
       */
      @java.lang.Override
      public double getForkVal() {
        return forkVal_;
      }
      /**
       * <code>double fork_val = 3;</code>
       * @param value The forkVal to set.
       * @return This builder for chaining.
       */
      public Builder setForkVal(double value) {

        forkVal_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double fork_val = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearForkVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forkVal_ = 0D;
        onChanged();
        return this;
      }

      private double inclineVal_ ;
      /**
       * <code>double incline_val = 4;</code>
       * @return The inclineVal.
       */
      @java.lang.Override
      public double getInclineVal() {
        return inclineVal_;
      }
      /**
       * <code>double incline_val = 4;</code>
       * @param value The inclineVal to set.
       * @return This builder for chaining.
       */
      public Builder setInclineVal(double value) {

        inclineVal_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double incline_val = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInclineVal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        inclineVal_ = 0D;
        onChanged();
        return this;
      }

      private int forkError_ ;
      /**
       * <code>int32 fork_error = 5;</code>
       * @return The forkError.
       */
      @java.lang.Override
      public int getForkError() {
        return forkError_;
      }
      /**
       * <code>int32 fork_error = 5;</code>
       * @param value The forkError to set.
       * @return This builder for chaining.
       */
      public Builder setForkError(int value) {

        forkError_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fork_error = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearForkError() {
        bitField0_ = (bitField0_ & ~0x00000010);
        forkError_ = 0;
        onChanged();
        return this;
      }

      private boolean heightInPlace_ ;
      /**
       * <code>bool height_in_place = 6;</code>
       * @return The heightInPlace.
       */
      @java.lang.Override
      public boolean getHeightInPlace() {
        return heightInPlace_;
      }
      /**
       * <code>bool height_in_place = 6;</code>
       * @param value The heightInPlace to set.
       * @return This builder for chaining.
       */
      public Builder setHeightInPlace(boolean value) {

        heightInPlace_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool height_in_place = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeightInPlace() {
        bitField0_ = (bitField0_ & ~0x00000020);
        heightInPlace_ = false;
        onChanged();
        return this;
      }

      private boolean inclineInPlace_ ;
      /**
       * <code>bool incline_in_place = 7;</code>
       * @return The inclineInPlace.
       */
      @java.lang.Override
      public boolean getInclineInPlace() {
        return inclineInPlace_;
      }
      /**
       * <code>bool incline_in_place = 7;</code>
       * @param value The inclineInPlace to set.
       * @return This builder for chaining.
       */
      public Builder setInclineInPlace(boolean value) {

        inclineInPlace_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool incline_in_place = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearInclineInPlace() {
        bitField0_ = (bitField0_ & ~0x00000040);
        inclineInPlace_ = false;
        onChanged();
        return this;
      }

      private boolean getGoods_ ;
      /**
       * <code>bool get_goods = 8;</code>
       * @return The getGoods.
       */
      @java.lang.Override
      public boolean getGetGoods() {
        return getGoods_;
      }
      /**
       * <code>bool get_goods = 8;</code>
       * @param value The getGoods to set.
       * @return This builder for chaining.
       */
      public Builder setGetGoods(boolean value) {

        getGoods_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bool get_goods = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearGetGoods() {
        bitField0_ = (bitField0_ & ~0x00000080);
        getGoods_ = false;
        onChanged();
        return this;
      }

      private boolean forwardInPlace_ ;
      /**
       * <code>bool forward_in_place = 9;</code>
       * @return The forwardInPlace.
       */
      @java.lang.Override
      public boolean getForwardInPlace() {
        return forwardInPlace_;
      }
      /**
       * <code>bool forward_in_place = 9;</code>
       * @param value The forwardInPlace to set.
       * @return This builder for chaining.
       */
      public Builder setForwardInPlace(boolean value) {

        forwardInPlace_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>bool forward_in_place = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearForwardInPlace() {
        bitField0_ = (bitField0_ & ~0x00000100);
        forwardInPlace_ = false;
        onChanged();
        return this;
      }

      private double forwardVal_ ;
      /**
       * <code>double forward_val = 10;</code>
       * @return The forwardVal.
       */
      @java.lang.Override
      public double getForwardVal() {
        return forwardVal_;
      }
      /**
       * <code>double forward_val = 10;</code>
       * @param value The forwardVal to set.
       * @return This builder for chaining.
       */
      public Builder setForwardVal(double value) {

        forwardVal_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>double forward_val = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearForwardVal() {
        bitField0_ = (bitField0_ & ~0x00000200);
        forwardVal_ = 0D;
        onChanged();
        return this;
      }

      private int pressureAdc_ ;
      /**
       * <pre>
       *压力传感器原始ADC值
       * </pre>
       *
       * <code>int32 pressure_adc = 11;</code>
       * @return The pressureAdc.
       */
      @java.lang.Override
      public int getPressureAdc() {
        return pressureAdc_;
      }
      /**
       * <pre>
       *压力传感器原始ADC值
       * </pre>
       *
       * <code>int32 pressure_adc = 11;</code>
       * @param value The pressureAdc to set.
       * @return This builder for chaining.
       */
      public Builder setPressureAdc(int value) {

        pressureAdc_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *压力传感器原始ADC值
       * </pre>
       *
       * <code>int32 pressure_adc = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressureAdc() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pressureAdc_ = 0;
        onChanged();
        return this;
      }

      private double pressureActual_ ;
      /**
       * <pre>
       *压力传感器转换后重量值(kg)
       * </pre>
       *
       * <code>double pressure_actual = 12;</code>
       * @return The pressureActual.
       */
      @java.lang.Override
      public double getPressureActual() {
        return pressureActual_;
      }
      /**
       * <pre>
       *压力传感器转换后重量值(kg)
       * </pre>
       *
       * <code>double pressure_actual = 12;</code>
       * @param value The pressureActual to set.
       * @return This builder for chaining.
       */
      public Builder setPressureActual(double value) {

        pressureActual_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *压力传感器转换后重量值(kg)
       * </pre>
       *
       * <code>double pressure_actual = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressureActual() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pressureActual_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Fork)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Fork)
    private static final rbk.protocol.MessageFork.Message_Fork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageFork.Message_Fork();
    }

    public static rbk.protocol.MessageFork.Message_Fork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Fork>
        PARSER = new com.google.protobuf.AbstractParser<Message_Fork>() {
      @java.lang.Override
      public Message_Fork parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Fork> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Fork> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageFork.Message_Fork getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_Fork_DownwardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Fork_Downward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>int32 pump = 2;</code>
     * @return The pump.
     */
    int getPump();

    /**
     * <code>int32 encodeline = 3;</code>
     * @return The encodeline.
     */
    int getEncodeline();

    /**
     * <code>int32 pressureSensor = 4;</code>
     * @return The pressureSensor.
     */
    int getPressureSensor();

    /**
     * <code>float minHeight = 5;</code>
     * @return The minHeight.
     */
    float getMinHeight();

    /**
     * <code>float maxHeight = 6;</code>
     * @return The maxHeight.
     */
    float getMaxHeight();

    /**
     * <code>int32 CAN_ID = 7;</code>
     * @return The cANID.
     */
    int getCANID();

    /**
     * <code>float max_angle = 8;</code>
     * @return The maxAngle.
     */
    float getMaxAngle();

    /**
     * <code>float min_angle = 9;</code>
     * @return The minAngle.
     */
    float getMinAngle();

    /**
     * <code>float driverPeriod = 10;</code>
     * @return The driverPeriod.
     */
    float getDriverPeriod();

    /**
     * <code>float upBuffer = 11;</code>
     * @return The upBuffer.
     */
    float getUpBuffer();

    /**
     * <code>float downBuffer = 12;</code>
     * @return The downBuffer.
     */
    float getDownBuffer();

    /**
     * <code>float leftSteerRange = 13;</code>
     * @return The leftSteerRange.
     */
    float getLeftSteerRange();

    /**
     * <code>float rightSteerRange = 14;</code>
     * @return The rightSteerRange.
     */
    float getRightSteerRange();

    /**
     * <code>float steeroffset = 15;</code>
     * @return The steeroffset.
     */
    float getSteeroffset();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Fork_Downward}
   */
  public static final class Message_Fork_Downward extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Fork_Downward)
      Message_Fork_DownwardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Fork_Downward.newBuilder() to construct.
    private Message_Fork_Downward(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Fork_Downward() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Fork_Downward();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Downward_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Downward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageFork.Message_Fork_Downward.class, rbk.protocol.MessageFork.Message_Fork_Downward.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int PUMP_FIELD_NUMBER = 2;
    private int pump_ = 0;
    /**
     * <code>int32 pump = 2;</code>
     * @return The pump.
     */
    @java.lang.Override
    public int getPump() {
      return pump_;
    }

    public static final int ENCODELINE_FIELD_NUMBER = 3;
    private int encodeline_ = 0;
    /**
     * <code>int32 encodeline = 3;</code>
     * @return The encodeline.
     */
    @java.lang.Override
    public int getEncodeline() {
      return encodeline_;
    }

    public static final int PRESSURESENSOR_FIELD_NUMBER = 4;
    private int pressureSensor_ = 0;
    /**
     * <code>int32 pressureSensor = 4;</code>
     * @return The pressureSensor.
     */
    @java.lang.Override
    public int getPressureSensor() {
      return pressureSensor_;
    }

    public static final int MINHEIGHT_FIELD_NUMBER = 5;
    private float minHeight_ = 0F;
    /**
     * <code>float minHeight = 5;</code>
     * @return The minHeight.
     */
    @java.lang.Override
    public float getMinHeight() {
      return minHeight_;
    }

    public static final int MAXHEIGHT_FIELD_NUMBER = 6;
    private float maxHeight_ = 0F;
    /**
     * <code>float maxHeight = 6;</code>
     * @return The maxHeight.
     */
    @java.lang.Override
    public float getMaxHeight() {
      return maxHeight_;
    }

    public static final int CAN_ID_FIELD_NUMBER = 7;
    private int cANID_ = 0;
    /**
     * <code>int32 CAN_ID = 7;</code>
     * @return The cANID.
     */
    @java.lang.Override
    public int getCANID() {
      return cANID_;
    }

    public static final int MAX_ANGLE_FIELD_NUMBER = 8;
    private float maxAngle_ = 0F;
    /**
     * <code>float max_angle = 8;</code>
     * @return The maxAngle.
     */
    @java.lang.Override
    public float getMaxAngle() {
      return maxAngle_;
    }

    public static final int MIN_ANGLE_FIELD_NUMBER = 9;
    private float minAngle_ = 0F;
    /**
     * <code>float min_angle = 9;</code>
     * @return The minAngle.
     */
    @java.lang.Override
    public float getMinAngle() {
      return minAngle_;
    }

    public static final int DRIVERPERIOD_FIELD_NUMBER = 10;
    private float driverPeriod_ = 0F;
    /**
     * <code>float driverPeriod = 10;</code>
     * @return The driverPeriod.
     */
    @java.lang.Override
    public float getDriverPeriod() {
      return driverPeriod_;
    }

    public static final int UPBUFFER_FIELD_NUMBER = 11;
    private float upBuffer_ = 0F;
    /**
     * <code>float upBuffer = 11;</code>
     * @return The upBuffer.
     */
    @java.lang.Override
    public float getUpBuffer() {
      return upBuffer_;
    }

    public static final int DOWNBUFFER_FIELD_NUMBER = 12;
    private float downBuffer_ = 0F;
    /**
     * <code>float downBuffer = 12;</code>
     * @return The downBuffer.
     */
    @java.lang.Override
    public float getDownBuffer() {
      return downBuffer_;
    }

    public static final int LEFTSTEERRANGE_FIELD_NUMBER = 13;
    private float leftSteerRange_ = 0F;
    /**
     * <code>float leftSteerRange = 13;</code>
     * @return The leftSteerRange.
     */
    @java.lang.Override
    public float getLeftSteerRange() {
      return leftSteerRange_;
    }

    public static final int RIGHTSTEERRANGE_FIELD_NUMBER = 14;
    private float rightSteerRange_ = 0F;
    /**
     * <code>float rightSteerRange = 14;</code>
     * @return The rightSteerRange.
     */
    @java.lang.Override
    public float getRightSteerRange() {
      return rightSteerRange_;
    }

    public static final int STEEROFFSET_FIELD_NUMBER = 15;
    private float steeroffset_ = 0F;
    /**
     * <code>float steeroffset = 15;</code>
     * @return The steeroffset.
     */
    @java.lang.Override
    public float getSteeroffset() {
      return steeroffset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (pump_ != 0) {
        output.writeInt32(2, pump_);
      }
      if (encodeline_ != 0) {
        output.writeInt32(3, encodeline_);
      }
      if (pressureSensor_ != 0) {
        output.writeInt32(4, pressureSensor_);
      }
      if (java.lang.Float.floatToRawIntBits(minHeight_) != 0) {
        output.writeFloat(5, minHeight_);
      }
      if (java.lang.Float.floatToRawIntBits(maxHeight_) != 0) {
        output.writeFloat(6, maxHeight_);
      }
      if (cANID_ != 0) {
        output.writeInt32(7, cANID_);
      }
      if (java.lang.Float.floatToRawIntBits(maxAngle_) != 0) {
        output.writeFloat(8, maxAngle_);
      }
      if (java.lang.Float.floatToRawIntBits(minAngle_) != 0) {
        output.writeFloat(9, minAngle_);
      }
      if (java.lang.Float.floatToRawIntBits(driverPeriod_) != 0) {
        output.writeFloat(10, driverPeriod_);
      }
      if (java.lang.Float.floatToRawIntBits(upBuffer_) != 0) {
        output.writeFloat(11, upBuffer_);
      }
      if (java.lang.Float.floatToRawIntBits(downBuffer_) != 0) {
        output.writeFloat(12, downBuffer_);
      }
      if (java.lang.Float.floatToRawIntBits(leftSteerRange_) != 0) {
        output.writeFloat(13, leftSteerRange_);
      }
      if (java.lang.Float.floatToRawIntBits(rightSteerRange_) != 0) {
        output.writeFloat(14, rightSteerRange_);
      }
      if (java.lang.Float.floatToRawIntBits(steeroffset_) != 0) {
        output.writeFloat(15, steeroffset_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (pump_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pump_);
      }
      if (encodeline_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, encodeline_);
      }
      if (pressureSensor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pressureSensor_);
      }
      if (java.lang.Float.floatToRawIntBits(minHeight_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, minHeight_);
      }
      if (java.lang.Float.floatToRawIntBits(maxHeight_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, maxHeight_);
      }
      if (cANID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cANID_);
      }
      if (java.lang.Float.floatToRawIntBits(maxAngle_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxAngle_);
      }
      if (java.lang.Float.floatToRawIntBits(minAngle_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, minAngle_);
      }
      if (java.lang.Float.floatToRawIntBits(driverPeriod_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, driverPeriod_);
      }
      if (java.lang.Float.floatToRawIntBits(upBuffer_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, upBuffer_);
      }
      if (java.lang.Float.floatToRawIntBits(downBuffer_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, downBuffer_);
      }
      if (java.lang.Float.floatToRawIntBits(leftSteerRange_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, leftSteerRange_);
      }
      if (java.lang.Float.floatToRawIntBits(rightSteerRange_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, rightSteerRange_);
      }
      if (java.lang.Float.floatToRawIntBits(steeroffset_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, steeroffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageFork.Message_Fork_Downward)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageFork.Message_Fork_Downward other = (rbk.protocol.MessageFork.Message_Fork_Downward) obj;

      if (getType()
          != other.getType()) return false;
      if (getPump()
          != other.getPump()) return false;
      if (getEncodeline()
          != other.getEncodeline()) return false;
      if (getPressureSensor()
          != other.getPressureSensor()) return false;
      if (java.lang.Float.floatToIntBits(getMinHeight())
          != java.lang.Float.floatToIntBits(
              other.getMinHeight())) return false;
      if (java.lang.Float.floatToIntBits(getMaxHeight())
          != java.lang.Float.floatToIntBits(
              other.getMaxHeight())) return false;
      if (getCANID()
          != other.getCANID()) return false;
      if (java.lang.Float.floatToIntBits(getMaxAngle())
          != java.lang.Float.floatToIntBits(
              other.getMaxAngle())) return false;
      if (java.lang.Float.floatToIntBits(getMinAngle())
          != java.lang.Float.floatToIntBits(
              other.getMinAngle())) return false;
      if (java.lang.Float.floatToIntBits(getDriverPeriod())
          != java.lang.Float.floatToIntBits(
              other.getDriverPeriod())) return false;
      if (java.lang.Float.floatToIntBits(getUpBuffer())
          != java.lang.Float.floatToIntBits(
              other.getUpBuffer())) return false;
      if (java.lang.Float.floatToIntBits(getDownBuffer())
          != java.lang.Float.floatToIntBits(
              other.getDownBuffer())) return false;
      if (java.lang.Float.floatToIntBits(getLeftSteerRange())
          != java.lang.Float.floatToIntBits(
              other.getLeftSteerRange())) return false;
      if (java.lang.Float.floatToIntBits(getRightSteerRange())
          != java.lang.Float.floatToIntBits(
              other.getRightSteerRange())) return false;
      if (java.lang.Float.floatToIntBits(getSteeroffset())
          != java.lang.Float.floatToIntBits(
              other.getSteeroffset())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + PUMP_FIELD_NUMBER;
      hash = (53 * hash) + getPump();
      hash = (37 * hash) + ENCODELINE_FIELD_NUMBER;
      hash = (53 * hash) + getEncodeline();
      hash = (37 * hash) + PRESSURESENSOR_FIELD_NUMBER;
      hash = (53 * hash) + getPressureSensor();
      hash = (37 * hash) + MINHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinHeight());
      hash = (37 * hash) + MAXHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxHeight());
      hash = (37 * hash) + CAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCANID();
      hash = (37 * hash) + MAX_ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxAngle());
      hash = (37 * hash) + MIN_ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinAngle());
      hash = (37 * hash) + DRIVERPERIOD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDriverPeriod());
      hash = (37 * hash) + UPBUFFER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getUpBuffer());
      hash = (37 * hash) + DOWNBUFFER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDownBuffer());
      hash = (37 * hash) + LEFTSTEERRANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLeftSteerRange());
      hash = (37 * hash) + RIGHTSTEERRANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRightSteerRange());
      hash = (37 * hash) + STEEROFFSET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSteeroffset());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageFork.Message_Fork_Downward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageFork.Message_Fork_Downward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Downward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageFork.Message_Fork_Downward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Fork_Downward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Fork_Downward)
        rbk.protocol.MessageFork.Message_Fork_DownwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Downward_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Downward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageFork.Message_Fork_Downward.class, rbk.protocol.MessageFork.Message_Fork_Downward.Builder.class);
      }

      // Construct using rbk.protocol.MessageFork.Message_Fork_Downward.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        pump_ = 0;
        encodeline_ = 0;
        pressureSensor_ = 0;
        minHeight_ = 0F;
        maxHeight_ = 0F;
        cANID_ = 0;
        maxAngle_ = 0F;
        minAngle_ = 0F;
        driverPeriod_ = 0F;
        upBuffer_ = 0F;
        downBuffer_ = 0F;
        leftSteerRange_ = 0F;
        rightSteerRange_ = 0F;
        steeroffset_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Downward_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Downward getDefaultInstanceForType() {
        return rbk.protocol.MessageFork.Message_Fork_Downward.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Downward build() {
        rbk.protocol.MessageFork.Message_Fork_Downward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Downward buildPartial() {
        rbk.protocol.MessageFork.Message_Fork_Downward result = new rbk.protocol.MessageFork.Message_Fork_Downward(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageFork.Message_Fork_Downward result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pump_ = pump_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.encodeline_ = encodeline_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.pressureSensor_ = pressureSensor_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.minHeight_ = minHeight_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.maxHeight_ = maxHeight_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cANID_ = cANID_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.maxAngle_ = maxAngle_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.minAngle_ = minAngle_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.driverPeriod_ = driverPeriod_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.upBuffer_ = upBuffer_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.downBuffer_ = downBuffer_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.leftSteerRange_ = leftSteerRange_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.rightSteerRange_ = rightSteerRange_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.steeroffset_ = steeroffset_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageFork.Message_Fork_Downward) {
          return mergeFrom((rbk.protocol.MessageFork.Message_Fork_Downward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageFork.Message_Fork_Downward other) {
        if (other == rbk.protocol.MessageFork.Message_Fork_Downward.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getPump() != 0) {
          setPump(other.getPump());
        }
        if (other.getEncodeline() != 0) {
          setEncodeline(other.getEncodeline());
        }
        if (other.getPressureSensor() != 0) {
          setPressureSensor(other.getPressureSensor());
        }
        if (other.getMinHeight() != 0F) {
          setMinHeight(other.getMinHeight());
        }
        if (other.getMaxHeight() != 0F) {
          setMaxHeight(other.getMaxHeight());
        }
        if (other.getCANID() != 0) {
          setCANID(other.getCANID());
        }
        if (other.getMaxAngle() != 0F) {
          setMaxAngle(other.getMaxAngle());
        }
        if (other.getMinAngle() != 0F) {
          setMinAngle(other.getMinAngle());
        }
        if (other.getDriverPeriod() != 0F) {
          setDriverPeriod(other.getDriverPeriod());
        }
        if (other.getUpBuffer() != 0F) {
          setUpBuffer(other.getUpBuffer());
        }
        if (other.getDownBuffer() != 0F) {
          setDownBuffer(other.getDownBuffer());
        }
        if (other.getLeftSteerRange() != 0F) {
          setLeftSteerRange(other.getLeftSteerRange());
        }
        if (other.getRightSteerRange() != 0F) {
          setRightSteerRange(other.getRightSteerRange());
        }
        if (other.getSteeroffset() != 0F) {
          setSteeroffset(other.getSteeroffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                pump_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                encodeline_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                pressureSensor_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 45: {
                minHeight_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                maxHeight_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 56: {
                cANID_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 69: {
                maxAngle_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 77: {
                minAngle_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 85: {
                driverPeriod_ = input.readFloat();
                bitField0_ |= 0x00000200;
                break;
              } // case 85
              case 93: {
                upBuffer_ = input.readFloat();
                bitField0_ |= 0x00000400;
                break;
              } // case 93
              case 101: {
                downBuffer_ = input.readFloat();
                bitField0_ |= 0x00000800;
                break;
              } // case 101
              case 109: {
                leftSteerRange_ = input.readFloat();
                bitField0_ |= 0x00001000;
                break;
              } // case 109
              case 117: {
                rightSteerRange_ = input.readFloat();
                bitField0_ |= 0x00002000;
                break;
              } // case 117
              case 125: {
                steeroffset_ = input.readFloat();
                bitField0_ |= 0x00004000;
                break;
              } // case 125
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>int32 type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int pump_ ;
      /**
       * <code>int32 pump = 2;</code>
       * @return The pump.
       */
      @java.lang.Override
      public int getPump() {
        return pump_;
      }
      /**
       * <code>int32 pump = 2;</code>
       * @param value The pump to set.
       * @return This builder for chaining.
       */
      public Builder setPump(int value) {

        pump_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pump = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPump() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pump_ = 0;
        onChanged();
        return this;
      }

      private int encodeline_ ;
      /**
       * <code>int32 encodeline = 3;</code>
       * @return The encodeline.
       */
      @java.lang.Override
      public int getEncodeline() {
        return encodeline_;
      }
      /**
       * <code>int32 encodeline = 3;</code>
       * @param value The encodeline to set.
       * @return This builder for chaining.
       */
      public Builder setEncodeline(int value) {

        encodeline_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 encodeline = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncodeline() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encodeline_ = 0;
        onChanged();
        return this;
      }

      private int pressureSensor_ ;
      /**
       * <code>int32 pressureSensor = 4;</code>
       * @return The pressureSensor.
       */
      @java.lang.Override
      public int getPressureSensor() {
        return pressureSensor_;
      }
      /**
       * <code>int32 pressureSensor = 4;</code>
       * @param value The pressureSensor to set.
       * @return This builder for chaining.
       */
      public Builder setPressureSensor(int value) {

        pressureSensor_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pressureSensor = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressureSensor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pressureSensor_ = 0;
        onChanged();
        return this;
      }

      private float minHeight_ ;
      /**
       * <code>float minHeight = 5;</code>
       * @return The minHeight.
       */
      @java.lang.Override
      public float getMinHeight() {
        return minHeight_;
      }
      /**
       * <code>float minHeight = 5;</code>
       * @param value The minHeight to set.
       * @return This builder for chaining.
       */
      public Builder setMinHeight(float value) {

        minHeight_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float minHeight = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minHeight_ = 0F;
        onChanged();
        return this;
      }

      private float maxHeight_ ;
      /**
       * <code>float maxHeight = 6;</code>
       * @return The maxHeight.
       */
      @java.lang.Override
      public float getMaxHeight() {
        return maxHeight_;
      }
      /**
       * <code>float maxHeight = 6;</code>
       * @param value The maxHeight to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHeight(float value) {

        maxHeight_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float maxHeight = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHeight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxHeight_ = 0F;
        onChanged();
        return this;
      }

      private int cANID_ ;
      /**
       * <code>int32 CAN_ID = 7;</code>
       * @return The cANID.
       */
      @java.lang.Override
      public int getCANID() {
        return cANID_;
      }
      /**
       * <code>int32 CAN_ID = 7;</code>
       * @param value The cANID to set.
       * @return This builder for chaining.
       */
      public Builder setCANID(int value) {

        cANID_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 CAN_ID = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCANID() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cANID_ = 0;
        onChanged();
        return this;
      }

      private float maxAngle_ ;
      /**
       * <code>float max_angle = 8;</code>
       * @return The maxAngle.
       */
      @java.lang.Override
      public float getMaxAngle() {
        return maxAngle_;
      }
      /**
       * <code>float max_angle = 8;</code>
       * @param value The maxAngle to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAngle(float value) {

        maxAngle_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>float max_angle = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAngle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxAngle_ = 0F;
        onChanged();
        return this;
      }

      private float minAngle_ ;
      /**
       * <code>float min_angle = 9;</code>
       * @return The minAngle.
       */
      @java.lang.Override
      public float getMinAngle() {
        return minAngle_;
      }
      /**
       * <code>float min_angle = 9;</code>
       * @param value The minAngle to set.
       * @return This builder for chaining.
       */
      public Builder setMinAngle(float value) {

        minAngle_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>float min_angle = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAngle() {
        bitField0_ = (bitField0_ & ~0x00000100);
        minAngle_ = 0F;
        onChanged();
        return this;
      }

      private float driverPeriod_ ;
      /**
       * <code>float driverPeriod = 10;</code>
       * @return The driverPeriod.
       */
      @java.lang.Override
      public float getDriverPeriod() {
        return driverPeriod_;
      }
      /**
       * <code>float driverPeriod = 10;</code>
       * @param value The driverPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setDriverPeriod(float value) {

        driverPeriod_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>float driverPeriod = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriverPeriod() {
        bitField0_ = (bitField0_ & ~0x00000200);
        driverPeriod_ = 0F;
        onChanged();
        return this;
      }

      private float upBuffer_ ;
      /**
       * <code>float upBuffer = 11;</code>
       * @return The upBuffer.
       */
      @java.lang.Override
      public float getUpBuffer() {
        return upBuffer_;
      }
      /**
       * <code>float upBuffer = 11;</code>
       * @param value The upBuffer to set.
       * @return This builder for chaining.
       */
      public Builder setUpBuffer(float value) {

        upBuffer_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>float upBuffer = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpBuffer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        upBuffer_ = 0F;
        onChanged();
        return this;
      }

      private float downBuffer_ ;
      /**
       * <code>float downBuffer = 12;</code>
       * @return The downBuffer.
       */
      @java.lang.Override
      public float getDownBuffer() {
        return downBuffer_;
      }
      /**
       * <code>float downBuffer = 12;</code>
       * @param value The downBuffer to set.
       * @return This builder for chaining.
       */
      public Builder setDownBuffer(float value) {

        downBuffer_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>float downBuffer = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDownBuffer() {
        bitField0_ = (bitField0_ & ~0x00000800);
        downBuffer_ = 0F;
        onChanged();
        return this;
      }

      private float leftSteerRange_ ;
      /**
       * <code>float leftSteerRange = 13;</code>
       * @return The leftSteerRange.
       */
      @java.lang.Override
      public float getLeftSteerRange() {
        return leftSteerRange_;
      }
      /**
       * <code>float leftSteerRange = 13;</code>
       * @param value The leftSteerRange to set.
       * @return This builder for chaining.
       */
      public Builder setLeftSteerRange(float value) {

        leftSteerRange_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>float leftSteerRange = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftSteerRange() {
        bitField0_ = (bitField0_ & ~0x00001000);
        leftSteerRange_ = 0F;
        onChanged();
        return this;
      }

      private float rightSteerRange_ ;
      /**
       * <code>float rightSteerRange = 14;</code>
       * @return The rightSteerRange.
       */
      @java.lang.Override
      public float getRightSteerRange() {
        return rightSteerRange_;
      }
      /**
       * <code>float rightSteerRange = 14;</code>
       * @param value The rightSteerRange to set.
       * @return This builder for chaining.
       */
      public Builder setRightSteerRange(float value) {

        rightSteerRange_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>float rightSteerRange = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightSteerRange() {
        bitField0_ = (bitField0_ & ~0x00002000);
        rightSteerRange_ = 0F;
        onChanged();
        return this;
      }

      private float steeroffset_ ;
      /**
       * <code>float steeroffset = 15;</code>
       * @return The steeroffset.
       */
      @java.lang.Override
      public float getSteeroffset() {
        return steeroffset_;
      }
      /**
       * <code>float steeroffset = 15;</code>
       * @param value The steeroffset to set.
       * @return This builder for chaining.
       */
      public Builder setSteeroffset(float value) {

        steeroffset_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>float steeroffset = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteeroffset() {
        bitField0_ = (bitField0_ & ~0x00004000);
        steeroffset_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Fork_Downward)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Fork_Downward)
    private static final rbk.protocol.MessageFork.Message_Fork_Downward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageFork.Message_Fork_Downward();
    }

    public static rbk.protocol.MessageFork.Message_Fork_Downward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Fork_Downward>
        PARSER = new com.google.protobuf.AbstractParser<Message_Fork_Downward>() {
      @java.lang.Override
      public Message_Fork_Downward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Fork_Downward> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Fork_Downward> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageFork.Message_Fork_Downward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_Fork_SpeedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Fork_Speed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 maxUpSpeed = 1;</code>
     * @return The maxUpSpeed.
     */
    int getMaxUpSpeed();

    /**
     * <code>int32 maxDownSpeed = 2;</code>
     * @return The maxDownSpeed.
     */
    int getMaxDownSpeed();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Fork_Speed}
   */
  public static final class Message_Fork_Speed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Fork_Speed)
      Message_Fork_SpeedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Fork_Speed.newBuilder() to construct.
    private Message_Fork_Speed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Fork_Speed() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Fork_Speed();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Speed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Speed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageFork.Message_Fork_Speed.class, rbk.protocol.MessageFork.Message_Fork_Speed.Builder.class);
    }

    public static final int MAXUPSPEED_FIELD_NUMBER = 1;
    private int maxUpSpeed_ = 0;
    /**
     * <code>int32 maxUpSpeed = 1;</code>
     * @return The maxUpSpeed.
     */
    @java.lang.Override
    public int getMaxUpSpeed() {
      return maxUpSpeed_;
    }

    public static final int MAXDOWNSPEED_FIELD_NUMBER = 2;
    private int maxDownSpeed_ = 0;
    /**
     * <code>int32 maxDownSpeed = 2;</code>
     * @return The maxDownSpeed.
     */
    @java.lang.Override
    public int getMaxDownSpeed() {
      return maxDownSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxUpSpeed_ != 0) {
        output.writeInt32(1, maxUpSpeed_);
      }
      if (maxDownSpeed_ != 0) {
        output.writeInt32(2, maxDownSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxUpSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxUpSpeed_);
      }
      if (maxDownSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxDownSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageFork.Message_Fork_Speed)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageFork.Message_Fork_Speed other = (rbk.protocol.MessageFork.Message_Fork_Speed) obj;

      if (getMaxUpSpeed()
          != other.getMaxUpSpeed()) return false;
      if (getMaxDownSpeed()
          != other.getMaxDownSpeed()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAXUPSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMaxUpSpeed();
      hash = (37 * hash) + MAXDOWNSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMaxDownSpeed();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageFork.Message_Fork_Speed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageFork.Message_Fork_Speed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageFork.Message_Fork_Speed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageFork.Message_Fork_Speed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Fork_Speed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Fork_Speed)
        rbk.protocol.MessageFork.Message_Fork_SpeedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Speed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Speed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageFork.Message_Fork_Speed.class, rbk.protocol.MessageFork.Message_Fork_Speed.Builder.class);
      }

      // Construct using rbk.protocol.MessageFork.Message_Fork_Speed.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        maxUpSpeed_ = 0;
        maxDownSpeed_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageFork.internal_static_rbk_protocol_Message_Fork_Speed_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Speed getDefaultInstanceForType() {
        return rbk.protocol.MessageFork.Message_Fork_Speed.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Speed build() {
        rbk.protocol.MessageFork.Message_Fork_Speed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageFork.Message_Fork_Speed buildPartial() {
        rbk.protocol.MessageFork.Message_Fork_Speed result = new rbk.protocol.MessageFork.Message_Fork_Speed(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageFork.Message_Fork_Speed result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.maxUpSpeed_ = maxUpSpeed_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.maxDownSpeed_ = maxDownSpeed_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageFork.Message_Fork_Speed) {
          return mergeFrom((rbk.protocol.MessageFork.Message_Fork_Speed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageFork.Message_Fork_Speed other) {
        if (other == rbk.protocol.MessageFork.Message_Fork_Speed.getDefaultInstance()) return this;
        if (other.getMaxUpSpeed() != 0) {
          setMaxUpSpeed(other.getMaxUpSpeed());
        }
        if (other.getMaxDownSpeed() != 0) {
          setMaxDownSpeed(other.getMaxDownSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                maxUpSpeed_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                maxDownSpeed_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int maxUpSpeed_ ;
      /**
       * <code>int32 maxUpSpeed = 1;</code>
       * @return The maxUpSpeed.
       */
      @java.lang.Override
      public int getMaxUpSpeed() {
        return maxUpSpeed_;
      }
      /**
       * <code>int32 maxUpSpeed = 1;</code>
       * @param value The maxUpSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxUpSpeed(int value) {

        maxUpSpeed_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxUpSpeed = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxUpSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxUpSpeed_ = 0;
        onChanged();
        return this;
      }

      private int maxDownSpeed_ ;
      /**
       * <code>int32 maxDownSpeed = 2;</code>
       * @return The maxDownSpeed.
       */
      @java.lang.Override
      public int getMaxDownSpeed() {
        return maxDownSpeed_;
      }
      /**
       * <code>int32 maxDownSpeed = 2;</code>
       * @param value The maxDownSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDownSpeed(int value) {

        maxDownSpeed_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxDownSpeed = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDownSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxDownSpeed_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Fork_Speed)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Fork_Speed)
    private static final rbk.protocol.MessageFork.Message_Fork_Speed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageFork.Message_Fork_Speed();
    }

    public static rbk.protocol.MessageFork.Message_Fork_Speed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Fork_Speed>
        PARSER = new com.google.protobuf.AbstractParser<Message_Fork_Speed>() {
      @java.lang.Override
      public Message_Fork_Speed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Fork_Speed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Fork_Speed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageFork.Message_Fork_Speed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Fork_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Fork_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Fork_Downward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Fork_Downward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Fork_Speed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Fork_Speed_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022message_fork.proto\022\014rbk.protocol\"\216\002\n\014M" +
      "essage_Fork\022\016\n\006height\030\001 \001(\001\022\017\n\007incline\030\002" +
      " \001(\001\022\020\n\010fork_val\030\003 \001(\001\022\023\n\013incline_val\030\004 " +
      "\001(\001\022\022\n\nfork_error\030\005 \001(\005\022\027\n\017height_in_pla" +
      "ce\030\006 \001(\010\022\030\n\020incline_in_place\030\007 \001(\010\022\021\n\tge" +
      "t_goods\030\010 \001(\010\022\030\n\020forward_in_place\030\t \001(\010\022" +
      "\023\n\013forward_val\030\n \001(\001\022\024\n\014pressure_adc\030\013 \001" +
      "(\005\022\027\n\017pressure_actual\030\014 \001(\001\"\275\002\n\025Message_" +
      "Fork_Downward\022\014\n\004type\030\001 \001(\005\022\014\n\004pump\030\002 \001(" +
      "\005\022\022\n\nencodeline\030\003 \001(\005\022\026\n\016pressureSensor\030" +
      "\004 \001(\005\022\021\n\tminHeight\030\005 \001(\002\022\021\n\tmaxHeight\030\006 " +
      "\001(\002\022\016\n\006CAN_ID\030\007 \001(\005\022\021\n\tmax_angle\030\010 \001(\002\022\021" +
      "\n\tmin_angle\030\t \001(\002\022\024\n\014driverPeriod\030\n \001(\002\022" +
      "\020\n\010upBuffer\030\013 \001(\002\022\022\n\ndownBuffer\030\014 \001(\002\022\026\n" +
      "\016leftSteerRange\030\r \001(\002\022\027\n\017rightSteerRange" +
      "\030\016 \001(\002\022\023\n\013steeroffset\030\017 \001(\002\">\n\022Message_F" +
      "ork_Speed\022\022\n\nmaxUpSpeed\030\001 \001(\005\022\024\n\014maxDown" +
      "Speed\030\002 \001(\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_rbk_protocol_Message_Fork_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_Fork_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Fork_descriptor,
        new java.lang.String[] { "Height", "Incline", "ForkVal", "InclineVal", "ForkError", "HeightInPlace", "InclineInPlace", "GetGoods", "ForwardInPlace", "ForwardVal", "PressureAdc", "PressureActual", });
    internal_static_rbk_protocol_Message_Fork_Downward_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rbk_protocol_Message_Fork_Downward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Fork_Downward_descriptor,
        new java.lang.String[] { "Type", "Pump", "Encodeline", "PressureSensor", "MinHeight", "MaxHeight", "CANID", "MaxAngle", "MinAngle", "DriverPeriod", "UpBuffer", "DownBuffer", "LeftSteerRange", "RightSteerRange", "Steeroffset", });
    internal_static_rbk_protocol_Message_Fork_Speed_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_rbk_protocol_Message_Fork_Speed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Fork_Speed_descriptor,
        new java.lang.String[] { "MaxUpSpeed", "MaxDownSpeed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
