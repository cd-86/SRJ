// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_chassisconfig.proto

package rbk.protocol;

public final class MessageChassisconfig {
  private MessageChassisconfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_ChassisConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_ChassisConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float E = 1;</code>
     * @return The e.
     */
    float getE();

    /**
     * <code>repeated float R = 2;</code>
     * @return A list containing the r.
     */
    java.util.List<java.lang.Float> getRList();
    /**
     * <code>repeated float R = 2;</code>
     * @return The count of r.
     */
    int getRCount();
    /**
     * <code>repeated float R = 2;</code>
     * @param index The index of the element to return.
     * @return The r at the given index.
     */
    float getR(int index);

    /**
     * <code>repeated int32 driveID = 3;</code>
     * @return A list containing the driveID.
     */
    java.util.List<java.lang.Integer> getDriveIDList();
    /**
     * <code>repeated int32 driveID = 3;</code>
     * @return The count of driveID.
     */
    int getDriveIDCount();
    /**
     * <code>repeated int32 driveID = 3;</code>
     * @param index The index of the element to return.
     * @return The driveID at the given index.
     */
    int getDriveID(int index);

    /**
     * <code>int32 encoderLines = 4;</code>
     * @return The encoderLines.
     */
    int getEncoderLines();

    /**
     * <code>float reductionRatio = 5;</code>
     * @return The reductionRatio.
     */
    float getReductionRatio();

    /**
     * <code>int32 motorMaxSpeedRpm = 6;</code>
     * @return The motorMaxSpeedRpm.
     */
    int getMotorMaxSpeedRpm();

    /**
     * <code>repeated bool Inverse = 7;</code>
     * @return A list containing the inverse.
     */
    java.util.List<java.lang.Boolean> getInverseList();
    /**
     * <code>repeated bool Inverse = 7;</code>
     * @return The count of inverse.
     */
    int getInverseCount();
    /**
     * <code>repeated bool Inverse = 7;</code>
     * @param index The index of the element to return.
     * @return The inverse at the given index.
     */
    boolean getInverse(int index);
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_ChassisConfig}
   */
  public static final class Message_ChassisConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_ChassisConfig)
      Message_ChassisConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_ChassisConfig.newBuilder() to construct.
    private Message_ChassisConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_ChassisConfig() {
      r_ = emptyFloatList();
      driveID_ = emptyIntList();
      inverse_ = emptyBooleanList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_ChassisConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageChassisconfig.Message_ChassisConfig.class, rbk.protocol.MessageChassisconfig.Message_ChassisConfig.Builder.class);
    }

    public static final int E_FIELD_NUMBER = 1;
    private float e_ = 0F;
    /**
     * <code>float E = 1;</code>
     * @return The e.
     */
    @java.lang.Override
    public float getE() {
      return e_;
    }

    public static final int R_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList r_;
    /**
     * <code>repeated float R = 2;</code>
     * @return A list containing the r.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getRList() {
      return r_;
    }
    /**
     * <code>repeated float R = 2;</code>
     * @return The count of r.
     */
    public int getRCount() {
      return r_.size();
    }
    /**
     * <code>repeated float R = 2;</code>
     * @param index The index of the element to return.
     * @return The r at the given index.
     */
    public float getR(int index) {
      return r_.getFloat(index);
    }
    private int rMemoizedSerializedSize = -1;

    public static final int DRIVEID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList driveID_;
    /**
     * <code>repeated int32 driveID = 3;</code>
     * @return A list containing the driveID.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDriveIDList() {
      return driveID_;
    }
    /**
     * <code>repeated int32 driveID = 3;</code>
     * @return The count of driveID.
     */
    public int getDriveIDCount() {
      return driveID_.size();
    }
    /**
     * <code>repeated int32 driveID = 3;</code>
     * @param index The index of the element to return.
     * @return The driveID at the given index.
     */
    public int getDriveID(int index) {
      return driveID_.getInt(index);
    }
    private int driveIDMemoizedSerializedSize = -1;

    public static final int ENCODERLINES_FIELD_NUMBER = 4;
    private int encoderLines_ = 0;
    /**
     * <code>int32 encoderLines = 4;</code>
     * @return The encoderLines.
     */
    @java.lang.Override
    public int getEncoderLines() {
      return encoderLines_;
    }

    public static final int REDUCTIONRATIO_FIELD_NUMBER = 5;
    private float reductionRatio_ = 0F;
    /**
     * <code>float reductionRatio = 5;</code>
     * @return The reductionRatio.
     */
    @java.lang.Override
    public float getReductionRatio() {
      return reductionRatio_;
    }

    public static final int MOTORMAXSPEEDRPM_FIELD_NUMBER = 6;
    private int motorMaxSpeedRpm_ = 0;
    /**
     * <code>int32 motorMaxSpeedRpm = 6;</code>
     * @return The motorMaxSpeedRpm.
     */
    @java.lang.Override
    public int getMotorMaxSpeedRpm() {
      return motorMaxSpeedRpm_;
    }

    public static final int INVERSE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList inverse_;
    /**
     * <code>repeated bool Inverse = 7;</code>
     * @return A list containing the inverse.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getInverseList() {
      return inverse_;
    }
    /**
     * <code>repeated bool Inverse = 7;</code>
     * @return The count of inverse.
     */
    public int getInverseCount() {
      return inverse_.size();
    }
    /**
     * <code>repeated bool Inverse = 7;</code>
     * @param index The index of the element to return.
     * @return The inverse at the given index.
     */
    public boolean getInverse(int index) {
      return inverse_.getBoolean(index);
    }
    private int inverseMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (java.lang.Float.floatToRawIntBits(e_) != 0) {
        output.writeFloat(1, e_);
      }
      if (getRList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rMemoizedSerializedSize);
      }
      for (int i = 0; i < r_.size(); i++) {
        output.writeFloatNoTag(r_.getFloat(i));
      }
      if (getDriveIDList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(driveIDMemoizedSerializedSize);
      }
      for (int i = 0; i < driveID_.size(); i++) {
        output.writeInt32NoTag(driveID_.getInt(i));
      }
      if (encoderLines_ != 0) {
        output.writeInt32(4, encoderLines_);
      }
      if (java.lang.Float.floatToRawIntBits(reductionRatio_) != 0) {
        output.writeFloat(5, reductionRatio_);
      }
      if (motorMaxSpeedRpm_ != 0) {
        output.writeInt32(6, motorMaxSpeedRpm_);
      }
      if (getInverseList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(inverseMemoizedSerializedSize);
      }
      for (int i = 0; i < inverse_.size(); i++) {
        output.writeBoolNoTag(inverse_.getBoolean(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(e_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, e_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRList().size();
        size += dataSize;
        if (!getRList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < driveID_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(driveID_.getInt(i));
        }
        size += dataSize;
        if (!getDriveIDList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        driveIDMemoizedSerializedSize = dataSize;
      }
      if (encoderLines_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, encoderLines_);
      }
      if (java.lang.Float.floatToRawIntBits(reductionRatio_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, reductionRatio_);
      }
      if (motorMaxSpeedRpm_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, motorMaxSpeedRpm_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getInverseList().size();
        size += dataSize;
        if (!getInverseList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inverseMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageChassisconfig.Message_ChassisConfig)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageChassisconfig.Message_ChassisConfig other = (rbk.protocol.MessageChassisconfig.Message_ChassisConfig) obj;

      if (java.lang.Float.floatToIntBits(getE())
          != java.lang.Float.floatToIntBits(
              other.getE())) return false;
      if (!getRList()
          .equals(other.getRList())) return false;
      if (!getDriveIDList()
          .equals(other.getDriveIDList())) return false;
      if (getEncoderLines()
          != other.getEncoderLines()) return false;
      if (java.lang.Float.floatToIntBits(getReductionRatio())
          != java.lang.Float.floatToIntBits(
              other.getReductionRatio())) return false;
      if (getMotorMaxSpeedRpm()
          != other.getMotorMaxSpeedRpm()) return false;
      if (!getInverseList()
          .equals(other.getInverseList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + E_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getE());
      if (getRCount() > 0) {
        hash = (37 * hash) + R_FIELD_NUMBER;
        hash = (53 * hash) + getRList().hashCode();
      }
      if (getDriveIDCount() > 0) {
        hash = (37 * hash) + DRIVEID_FIELD_NUMBER;
        hash = (53 * hash) + getDriveIDList().hashCode();
      }
      hash = (37 * hash) + ENCODERLINES_FIELD_NUMBER;
      hash = (53 * hash) + getEncoderLines();
      hash = (37 * hash) + REDUCTIONRATIO_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getReductionRatio());
      hash = (37 * hash) + MOTORMAXSPEEDRPM_FIELD_NUMBER;
      hash = (53 * hash) + getMotorMaxSpeedRpm();
      if (getInverseCount() > 0) {
        hash = (37 * hash) + INVERSE_FIELD_NUMBER;
        hash = (53 * hash) + getInverseList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageChassisconfig.Message_ChassisConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_ChassisConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_ChassisConfig)
        rbk.protocol.MessageChassisconfig.Message_ChassisConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageChassisconfig.Message_ChassisConfig.class, rbk.protocol.MessageChassisconfig.Message_ChassisConfig.Builder.class);
      }

      // Construct using rbk.protocol.MessageChassisconfig.Message_ChassisConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        e_ = 0F;
        r_ = emptyFloatList();
        driveID_ = emptyIntList();
        encoderLines_ = 0;
        reductionRatio_ = 0F;
        motorMaxSpeedRpm_ = 0;
        inverse_ = emptyBooleanList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisConfig_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisConfig getDefaultInstanceForType() {
        return rbk.protocol.MessageChassisconfig.Message_ChassisConfig.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisConfig build() {
        rbk.protocol.MessageChassisconfig.Message_ChassisConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisConfig buildPartial() {
        rbk.protocol.MessageChassisconfig.Message_ChassisConfig result = new rbk.protocol.MessageChassisconfig.Message_ChassisConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(rbk.protocol.MessageChassisconfig.Message_ChassisConfig result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          r_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.r_ = r_;
        if (((bitField0_ & 0x00000004) != 0)) {
          driveID_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.driveID_ = driveID_;
        if (((bitField0_ & 0x00000040) != 0)) {
          inverse_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.inverse_ = inverse_;
      }

      private void buildPartial0(rbk.protocol.MessageChassisconfig.Message_ChassisConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.e_ = e_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.encoderLines_ = encoderLines_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.reductionRatio_ = reductionRatio_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.motorMaxSpeedRpm_ = motorMaxSpeedRpm_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageChassisconfig.Message_ChassisConfig) {
          return mergeFrom((rbk.protocol.MessageChassisconfig.Message_ChassisConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageChassisconfig.Message_ChassisConfig other) {
        if (other == rbk.protocol.MessageChassisconfig.Message_ChassisConfig.getDefaultInstance()) return this;
        if (other.getE() != 0F) {
          setE(other.getE());
        }
        if (!other.r_.isEmpty()) {
          if (r_.isEmpty()) {
            r_ = other.r_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRIsMutable();
            r_.addAll(other.r_);
          }
          onChanged();
        }
        if (!other.driveID_.isEmpty()) {
          if (driveID_.isEmpty()) {
            driveID_ = other.driveID_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDriveIDIsMutable();
            driveID_.addAll(other.driveID_);
          }
          onChanged();
        }
        if (other.getEncoderLines() != 0) {
          setEncoderLines(other.getEncoderLines());
        }
        if (other.getReductionRatio() != 0F) {
          setReductionRatio(other.getReductionRatio());
        }
        if (other.getMotorMaxSpeedRpm() != 0) {
          setMotorMaxSpeedRpm(other.getMotorMaxSpeedRpm());
        }
        if (!other.inverse_.isEmpty()) {
          if (inverse_.isEmpty()) {
            inverse_ = other.inverse_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureInverseIsMutable();
            inverse_.addAll(other.inverse_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                e_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                float v = input.readFloat();
                ensureRIsMutable();
                r_.addFloat(v);
                break;
              } // case 21
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  r_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                int v = input.readInt32();
                ensureDriveIDIsMutable();
                driveID_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDriveIDIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  driveID_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                encoderLines_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 45: {
                reductionRatio_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 48: {
                motorMaxSpeedRpm_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                boolean v = input.readBool();
                ensureInverseIsMutable();
                inverse_.addBoolean(v);
                break;
              } // case 56
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInverseIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  inverse_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float e_ ;
      /**
       * <code>float E = 1;</code>
       * @return The e.
       */
      @java.lang.Override
      public float getE() {
        return e_;
      }
      /**
       * <code>float E = 1;</code>
       * @param value The e to set.
       * @return This builder for chaining.
       */
      public Builder setE(float value) {

        e_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float E = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearE() {
        bitField0_ = (bitField0_ & ~0x00000001);
        e_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList r_ = emptyFloatList();
      private void ensureRIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          r_ = mutableCopy(r_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated float R = 2;</code>
       * @return A list containing the r.
       */
      public java.util.List<java.lang.Float>
          getRList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(r_) : r_;
      }
      /**
       * <code>repeated float R = 2;</code>
       * @return The count of r.
       */
      public int getRCount() {
        return r_.size();
      }
      /**
       * <code>repeated float R = 2;</code>
       * @param index The index of the element to return.
       * @return The r at the given index.
       */
      public float getR(int index) {
        return r_.getFloat(index);
      }
      /**
       * <code>repeated float R = 2;</code>
       * @param index The index to set the value at.
       * @param value The r to set.
       * @return This builder for chaining.
       */
      public Builder setR(
          int index, float value) {

        ensureRIsMutable();
        r_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float R = 2;</code>
       * @param value The r to add.
       * @return This builder for chaining.
       */
      public Builder addR(float value) {

        ensureRIsMutable();
        r_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float R = 2;</code>
       * @param values The r to add.
       * @return This builder for chaining.
       */
      public Builder addAllR(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, r_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float R = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearR() {
        r_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList driveID_ = emptyIntList();
      private void ensureDriveIDIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          driveID_ = mutableCopy(driveID_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @return A list containing the driveID.
       */
      public java.util.List<java.lang.Integer>
          getDriveIDList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(driveID_) : driveID_;
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @return The count of driveID.
       */
      public int getDriveIDCount() {
        return driveID_.size();
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @param index The index of the element to return.
       * @return The driveID at the given index.
       */
      public int getDriveID(int index) {
        return driveID_.getInt(index);
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @param index The index to set the value at.
       * @param value The driveID to set.
       * @return This builder for chaining.
       */
      public Builder setDriveID(
          int index, int value) {

        ensureDriveIDIsMutable();
        driveID_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @param value The driveID to add.
       * @return This builder for chaining.
       */
      public Builder addDriveID(int value) {

        ensureDriveIDIsMutable();
        driveID_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @param values The driveID to add.
       * @return This builder for chaining.
       */
      public Builder addAllDriveID(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDriveIDIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, driveID_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 driveID = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriveID() {
        driveID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int encoderLines_ ;
      /**
       * <code>int32 encoderLines = 4;</code>
       * @return The encoderLines.
       */
      @java.lang.Override
      public int getEncoderLines() {
        return encoderLines_;
      }
      /**
       * <code>int32 encoderLines = 4;</code>
       * @param value The encoderLines to set.
       * @return This builder for chaining.
       */
      public Builder setEncoderLines(int value) {

        encoderLines_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 encoderLines = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoderLines() {
        bitField0_ = (bitField0_ & ~0x00000008);
        encoderLines_ = 0;
        onChanged();
        return this;
      }

      private float reductionRatio_ ;
      /**
       * <code>float reductionRatio = 5;</code>
       * @return The reductionRatio.
       */
      @java.lang.Override
      public float getReductionRatio() {
        return reductionRatio_;
      }
      /**
       * <code>float reductionRatio = 5;</code>
       * @param value The reductionRatio to set.
       * @return This builder for chaining.
       */
      public Builder setReductionRatio(float value) {

        reductionRatio_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float reductionRatio = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearReductionRatio() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reductionRatio_ = 0F;
        onChanged();
        return this;
      }

      private int motorMaxSpeedRpm_ ;
      /**
       * <code>int32 motorMaxSpeedRpm = 6;</code>
       * @return The motorMaxSpeedRpm.
       */
      @java.lang.Override
      public int getMotorMaxSpeedRpm() {
        return motorMaxSpeedRpm_;
      }
      /**
       * <code>int32 motorMaxSpeedRpm = 6;</code>
       * @param value The motorMaxSpeedRpm to set.
       * @return This builder for chaining.
       */
      public Builder setMotorMaxSpeedRpm(int value) {

        motorMaxSpeedRpm_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 motorMaxSpeedRpm = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMotorMaxSpeedRpm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        motorMaxSpeedRpm_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList inverse_ = emptyBooleanList();
      private void ensureInverseIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          inverse_ = mutableCopy(inverse_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @return A list containing the inverse.
       */
      public java.util.List<java.lang.Boolean>
          getInverseList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(inverse_) : inverse_;
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @return The count of inverse.
       */
      public int getInverseCount() {
        return inverse_.size();
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @param index The index of the element to return.
       * @return The inverse at the given index.
       */
      public boolean getInverse(int index) {
        return inverse_.getBoolean(index);
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @param index The index to set the value at.
       * @param value The inverse to set.
       * @return This builder for chaining.
       */
      public Builder setInverse(
          int index, boolean value) {

        ensureInverseIsMutable();
        inverse_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @param value The inverse to add.
       * @return This builder for chaining.
       */
      public Builder addInverse(boolean value) {

        ensureInverseIsMutable();
        inverse_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @param values The inverse to add.
       * @return This builder for chaining.
       */
      public Builder addAllInverse(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureInverseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inverse_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool Inverse = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearInverse() {
        inverse_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_ChassisConfig)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_ChassisConfig)
    private static final rbk.protocol.MessageChassisconfig.Message_ChassisConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageChassisconfig.Message_ChassisConfig();
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_ChassisConfig>
        PARSER = new com.google.protobuf.AbstractParser<Message_ChassisConfig>() {
      @java.lang.Override
      public Message_ChassisConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_ChassisConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_ChassisConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageChassisconfig.Message_ChassisConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Message_ChassisDemandConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_ChassisDemandConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 bChassisExist = 1;</code>
     * @return The bChassisExist.
     */
    int getBChassisExist();

    /**
     * <code>int32 bBatteryExist = 2;</code>
     * @return The bBatteryExist.
     */
    int getBBatteryExist();

    /**
     * <code>int32 bGyroExist = 3;</code>
     * @return The bGyroExist.
     */
    int getBGyroExist();

    /**
     * <code>int32 bSubsystemExist = 4;</code>
     * @return The bSubsystemExist.
     */
    int getBSubsystemExist();

    /**
     * <code>int32 bSonicExist = 5;</code>
     * @return The bSonicExist.
     */
    int getBSonicExist();

    /**
     * <code>int32 bRFIDExist = 6;</code>
     * @return The bRFIDExist.
     */
    int getBRFIDExist();

    /**
     * <code>int32 bMagneticSenserExist = 7;</code>
     * @return The bMagneticSenserExist.
     */
    int getBMagneticSenserExist();

    /**
     * <code>int32 bIntBrdExist = 8;</code>
     * @return The bIntBrdExist.
     */
    int getBIntBrdExist();

    /**
     * <code>int32 chassisType = 9;</code>
     * @return The chassisType.
     */
    int getChassisType();

    /**
     * <code>int32 driverBrand = 10;</code>
     * @return The driverBrand.
     */
    int getDriverBrand();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_ChassisDemandConfig}
   */
  public static final class Message_ChassisDemandConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_ChassisDemandConfig)
      Message_ChassisDemandConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_ChassisDemandConfig.newBuilder() to construct.
    private Message_ChassisDemandConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_ChassisDemandConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_ChassisDemandConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisDemandConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.class, rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.Builder.class);
    }

    public static final int BCHASSISEXIST_FIELD_NUMBER = 1;
    private int bChassisExist_ = 0;
    /**
     * <code>int32 bChassisExist = 1;</code>
     * @return The bChassisExist.
     */
    @java.lang.Override
    public int getBChassisExist() {
      return bChassisExist_;
    }

    public static final int BBATTERYEXIST_FIELD_NUMBER = 2;
    private int bBatteryExist_ = 0;
    /**
     * <code>int32 bBatteryExist = 2;</code>
     * @return The bBatteryExist.
     */
    @java.lang.Override
    public int getBBatteryExist() {
      return bBatteryExist_;
    }

    public static final int BGYROEXIST_FIELD_NUMBER = 3;
    private int bGyroExist_ = 0;
    /**
     * <code>int32 bGyroExist = 3;</code>
     * @return The bGyroExist.
     */
    @java.lang.Override
    public int getBGyroExist() {
      return bGyroExist_;
    }

    public static final int BSUBSYSTEMEXIST_FIELD_NUMBER = 4;
    private int bSubsystemExist_ = 0;
    /**
     * <code>int32 bSubsystemExist = 4;</code>
     * @return The bSubsystemExist.
     */
    @java.lang.Override
    public int getBSubsystemExist() {
      return bSubsystemExist_;
    }

    public static final int BSONICEXIST_FIELD_NUMBER = 5;
    private int bSonicExist_ = 0;
    /**
     * <code>int32 bSonicExist = 5;</code>
     * @return The bSonicExist.
     */
    @java.lang.Override
    public int getBSonicExist() {
      return bSonicExist_;
    }

    public static final int BRFIDEXIST_FIELD_NUMBER = 6;
    private int bRFIDExist_ = 0;
    /**
     * <code>int32 bRFIDExist = 6;</code>
     * @return The bRFIDExist.
     */
    @java.lang.Override
    public int getBRFIDExist() {
      return bRFIDExist_;
    }

    public static final int BMAGNETICSENSEREXIST_FIELD_NUMBER = 7;
    private int bMagneticSenserExist_ = 0;
    /**
     * <code>int32 bMagneticSenserExist = 7;</code>
     * @return The bMagneticSenserExist.
     */
    @java.lang.Override
    public int getBMagneticSenserExist() {
      return bMagneticSenserExist_;
    }

    public static final int BINTBRDEXIST_FIELD_NUMBER = 8;
    private int bIntBrdExist_ = 0;
    /**
     * <code>int32 bIntBrdExist = 8;</code>
     * @return The bIntBrdExist.
     */
    @java.lang.Override
    public int getBIntBrdExist() {
      return bIntBrdExist_;
    }

    public static final int CHASSISTYPE_FIELD_NUMBER = 9;
    private int chassisType_ = 0;
    /**
     * <code>int32 chassisType = 9;</code>
     * @return The chassisType.
     */
    @java.lang.Override
    public int getChassisType() {
      return chassisType_;
    }

    public static final int DRIVERBRAND_FIELD_NUMBER = 10;
    private int driverBrand_ = 0;
    /**
     * <code>int32 driverBrand = 10;</code>
     * @return The driverBrand.
     */
    @java.lang.Override
    public int getDriverBrand() {
      return driverBrand_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bChassisExist_ != 0) {
        output.writeInt32(1, bChassisExist_);
      }
      if (bBatteryExist_ != 0) {
        output.writeInt32(2, bBatteryExist_);
      }
      if (bGyroExist_ != 0) {
        output.writeInt32(3, bGyroExist_);
      }
      if (bSubsystemExist_ != 0) {
        output.writeInt32(4, bSubsystemExist_);
      }
      if (bSonicExist_ != 0) {
        output.writeInt32(5, bSonicExist_);
      }
      if (bRFIDExist_ != 0) {
        output.writeInt32(6, bRFIDExist_);
      }
      if (bMagneticSenserExist_ != 0) {
        output.writeInt32(7, bMagneticSenserExist_);
      }
      if (bIntBrdExist_ != 0) {
        output.writeInt32(8, bIntBrdExist_);
      }
      if (chassisType_ != 0) {
        output.writeInt32(9, chassisType_);
      }
      if (driverBrand_ != 0) {
        output.writeInt32(10, driverBrand_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bChassisExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bChassisExist_);
      }
      if (bBatteryExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bBatteryExist_);
      }
      if (bGyroExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bGyroExist_);
      }
      if (bSubsystemExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, bSubsystemExist_);
      }
      if (bSonicExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bSonicExist_);
      }
      if (bRFIDExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bRFIDExist_);
      }
      if (bMagneticSenserExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bMagneticSenserExist_);
      }
      if (bIntBrdExist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, bIntBrdExist_);
      }
      if (chassisType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, chassisType_);
      }
      if (driverBrand_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, driverBrand_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig other = (rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig) obj;

      if (getBChassisExist()
          != other.getBChassisExist()) return false;
      if (getBBatteryExist()
          != other.getBBatteryExist()) return false;
      if (getBGyroExist()
          != other.getBGyroExist()) return false;
      if (getBSubsystemExist()
          != other.getBSubsystemExist()) return false;
      if (getBSonicExist()
          != other.getBSonicExist()) return false;
      if (getBRFIDExist()
          != other.getBRFIDExist()) return false;
      if (getBMagneticSenserExist()
          != other.getBMagneticSenserExist()) return false;
      if (getBIntBrdExist()
          != other.getBIntBrdExist()) return false;
      if (getChassisType()
          != other.getChassisType()) return false;
      if (getDriverBrand()
          != other.getDriverBrand()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BCHASSISEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBChassisExist();
      hash = (37 * hash) + BBATTERYEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBBatteryExist();
      hash = (37 * hash) + BGYROEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBGyroExist();
      hash = (37 * hash) + BSUBSYSTEMEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBSubsystemExist();
      hash = (37 * hash) + BSONICEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBSonicExist();
      hash = (37 * hash) + BRFIDEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBRFIDExist();
      hash = (37 * hash) + BMAGNETICSENSEREXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBMagneticSenserExist();
      hash = (37 * hash) + BINTBRDEXIST_FIELD_NUMBER;
      hash = (53 * hash) + getBIntBrdExist();
      hash = (37 * hash) + CHASSISTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getChassisType();
      hash = (37 * hash) + DRIVERBRAND_FIELD_NUMBER;
      hash = (53 * hash) + getDriverBrand();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_ChassisDemandConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_ChassisDemandConfig)
        rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisDemandConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.class, rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.Builder.class);
      }

      // Construct using rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bChassisExist_ = 0;
        bBatteryExist_ = 0;
        bGyroExist_ = 0;
        bSubsystemExist_ = 0;
        bSonicExist_ = 0;
        bRFIDExist_ = 0;
        bMagneticSenserExist_ = 0;
        bIntBrdExist_ = 0;
        chassisType_ = 0;
        driverBrand_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageChassisconfig.internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig getDefaultInstanceForType() {
        return rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig build() {
        rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig buildPartial() {
        rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig result = new rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.bChassisExist_ = bChassisExist_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bBatteryExist_ = bBatteryExist_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.bGyroExist_ = bGyroExist_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.bSubsystemExist_ = bSubsystemExist_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.bSonicExist_ = bSonicExist_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.bRFIDExist_ = bRFIDExist_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.bMagneticSenserExist_ = bMagneticSenserExist_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.bIntBrdExist_ = bIntBrdExist_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.chassisType_ = chassisType_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.driverBrand_ = driverBrand_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig) {
          return mergeFrom((rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig other) {
        if (other == rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig.getDefaultInstance()) return this;
        if (other.getBChassisExist() != 0) {
          setBChassisExist(other.getBChassisExist());
        }
        if (other.getBBatteryExist() != 0) {
          setBBatteryExist(other.getBBatteryExist());
        }
        if (other.getBGyroExist() != 0) {
          setBGyroExist(other.getBGyroExist());
        }
        if (other.getBSubsystemExist() != 0) {
          setBSubsystemExist(other.getBSubsystemExist());
        }
        if (other.getBSonicExist() != 0) {
          setBSonicExist(other.getBSonicExist());
        }
        if (other.getBRFIDExist() != 0) {
          setBRFIDExist(other.getBRFIDExist());
        }
        if (other.getBMagneticSenserExist() != 0) {
          setBMagneticSenserExist(other.getBMagneticSenserExist());
        }
        if (other.getBIntBrdExist() != 0) {
          setBIntBrdExist(other.getBIntBrdExist());
        }
        if (other.getChassisType() != 0) {
          setChassisType(other.getChassisType());
        }
        if (other.getDriverBrand() != 0) {
          setDriverBrand(other.getDriverBrand());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bChassisExist_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                bBatteryExist_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                bGyroExist_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                bSubsystemExist_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                bSonicExist_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                bRFIDExist_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                bMagneticSenserExist_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                bIntBrdExist_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                chassisType_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                driverBrand_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int bChassisExist_ ;
      /**
       * <code>int32 bChassisExist = 1;</code>
       * @return The bChassisExist.
       */
      @java.lang.Override
      public int getBChassisExist() {
        return bChassisExist_;
      }
      /**
       * <code>int32 bChassisExist = 1;</code>
       * @param value The bChassisExist to set.
       * @return This builder for chaining.
       */
      public Builder setBChassisExist(int value) {

        bChassisExist_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bChassisExist = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBChassisExist() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bChassisExist_ = 0;
        onChanged();
        return this;
      }

      private int bBatteryExist_ ;
      /**
       * <code>int32 bBatteryExist = 2;</code>
       * @return The bBatteryExist.
       */
      @java.lang.Override
      public int getBBatteryExist() {
        return bBatteryExist_;
      }
      /**
       * <code>int32 bBatteryExist = 2;</code>
       * @param value The bBatteryExist to set.
       * @return This builder for chaining.
       */
      public Builder setBBatteryExist(int value) {

        bBatteryExist_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bBatteryExist = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBBatteryExist() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bBatteryExist_ = 0;
        onChanged();
        return this;
      }

      private int bGyroExist_ ;
      /**
       * <code>int32 bGyroExist = 3;</code>
       * @return The bGyroExist.
       */
      @java.lang.Override
      public int getBGyroExist() {
        return bGyroExist_;
      }
      /**
       * <code>int32 bGyroExist = 3;</code>
       * @param value The bGyroExist to set.
       * @return This builder for chaining.
       */
      public Builder setBGyroExist(int value) {

        bGyroExist_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bGyroExist = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBGyroExist() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bGyroExist_ = 0;
        onChanged();
        return this;
      }

      private int bSubsystemExist_ ;
      /**
       * <code>int32 bSubsystemExist = 4;</code>
       * @return The bSubsystemExist.
       */
      @java.lang.Override
      public int getBSubsystemExist() {
        return bSubsystemExist_;
      }
      /**
       * <code>int32 bSubsystemExist = 4;</code>
       * @param value The bSubsystemExist to set.
       * @return This builder for chaining.
       */
      public Builder setBSubsystemExist(int value) {

        bSubsystemExist_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bSubsystemExist = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBSubsystemExist() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bSubsystemExist_ = 0;
        onChanged();
        return this;
      }

      private int bSonicExist_ ;
      /**
       * <code>int32 bSonicExist = 5;</code>
       * @return The bSonicExist.
       */
      @java.lang.Override
      public int getBSonicExist() {
        return bSonicExist_;
      }
      /**
       * <code>int32 bSonicExist = 5;</code>
       * @param value The bSonicExist to set.
       * @return This builder for chaining.
       */
      public Builder setBSonicExist(int value) {

        bSonicExist_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bSonicExist = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBSonicExist() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bSonicExist_ = 0;
        onChanged();
        return this;
      }

      private int bRFIDExist_ ;
      /**
       * <code>int32 bRFIDExist = 6;</code>
       * @return The bRFIDExist.
       */
      @java.lang.Override
      public int getBRFIDExist() {
        return bRFIDExist_;
      }
      /**
       * <code>int32 bRFIDExist = 6;</code>
       * @param value The bRFIDExist to set.
       * @return This builder for chaining.
       */
      public Builder setBRFIDExist(int value) {

        bRFIDExist_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bRFIDExist = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBRFIDExist() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bRFIDExist_ = 0;
        onChanged();
        return this;
      }

      private int bMagneticSenserExist_ ;
      /**
       * <code>int32 bMagneticSenserExist = 7;</code>
       * @return The bMagneticSenserExist.
       */
      @java.lang.Override
      public int getBMagneticSenserExist() {
        return bMagneticSenserExist_;
      }
      /**
       * <code>int32 bMagneticSenserExist = 7;</code>
       * @param value The bMagneticSenserExist to set.
       * @return This builder for chaining.
       */
      public Builder setBMagneticSenserExist(int value) {

        bMagneticSenserExist_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bMagneticSenserExist = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBMagneticSenserExist() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bMagneticSenserExist_ = 0;
        onChanged();
        return this;
      }

      private int bIntBrdExist_ ;
      /**
       * <code>int32 bIntBrdExist = 8;</code>
       * @return The bIntBrdExist.
       */
      @java.lang.Override
      public int getBIntBrdExist() {
        return bIntBrdExist_;
      }
      /**
       * <code>int32 bIntBrdExist = 8;</code>
       * @param value The bIntBrdExist to set.
       * @return This builder for chaining.
       */
      public Builder setBIntBrdExist(int value) {

        bIntBrdExist_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 bIntBrdExist = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBIntBrdExist() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bIntBrdExist_ = 0;
        onChanged();
        return this;
      }

      private int chassisType_ ;
      /**
       * <code>int32 chassisType = 9;</code>
       * @return The chassisType.
       */
      @java.lang.Override
      public int getChassisType() {
        return chassisType_;
      }
      /**
       * <code>int32 chassisType = 9;</code>
       * @param value The chassisType to set.
       * @return This builder for chaining.
       */
      public Builder setChassisType(int value) {

        chassisType_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int32 chassisType = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearChassisType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        chassisType_ = 0;
        onChanged();
        return this;
      }

      private int driverBrand_ ;
      /**
       * <code>int32 driverBrand = 10;</code>
       * @return The driverBrand.
       */
      @java.lang.Override
      public int getDriverBrand() {
        return driverBrand_;
      }
      /**
       * <code>int32 driverBrand = 10;</code>
       * @param value The driverBrand to set.
       * @return This builder for chaining.
       */
      public Builder setDriverBrand(int value) {

        driverBrand_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>int32 driverBrand = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriverBrand() {
        bitField0_ = (bitField0_ & ~0x00000200);
        driverBrand_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_ChassisDemandConfig)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_ChassisDemandConfig)
    private static final rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig();
    }

    public static rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_ChassisDemandConfig>
        PARSER = new com.google.protobuf.AbstractParser<Message_ChassisDemandConfig>() {
      @java.lang.Override
      public Message_ChassisDemandConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_ChassisDemandConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_ChassisDemandConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageChassisconfig.Message_ChassisDemandConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_ChassisConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_ChassisConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_ChassisDemandConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033message_chassisconfig.proto\022\014rbk.proto" +
      "col\"\227\001\n\025Message_ChassisConfig\022\t\n\001E\030\001 \001(\002" +
      "\022\t\n\001R\030\002 \003(\002\022\017\n\007driveID\030\003 \003(\005\022\024\n\014encoderL" +
      "ines\030\004 \001(\005\022\026\n\016reductionRatio\030\005 \001(\002\022\030\n\020mo" +
      "torMaxSpeedRpm\030\006 \001(\005\022\017\n\007Inverse\030\007 \003(\010\"\377\001" +
      "\n\033Message_ChassisDemandConfig\022\025\n\rbChassi" +
      "sExist\030\001 \001(\005\022\025\n\rbBatteryExist\030\002 \001(\005\022\022\n\nb" +
      "GyroExist\030\003 \001(\005\022\027\n\017bSubsystemExist\030\004 \001(\005" +
      "\022\023\n\013bSonicExist\030\005 \001(\005\022\022\n\nbRFIDExist\030\006 \001(" +
      "\005\022\034\n\024bMagneticSenserExist\030\007 \001(\005\022\024\n\014bIntB" +
      "rdExist\030\010 \001(\005\022\023\n\013chassisType\030\t \001(\005\022\023\n\013dr" +
      "iverBrand\030\n \001(\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_rbk_protocol_Message_ChassisConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_ChassisConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_ChassisConfig_descriptor,
        new java.lang.String[] { "E", "R", "DriveID", "EncoderLines", "ReductionRatio", "MotorMaxSpeedRpm", "Inverse", });
    internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rbk_protocol_Message_ChassisDemandConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_ChassisDemandConfig_descriptor,
        new java.lang.String[] { "BChassisExist", "BBatteryExist", "BGyroExist", "BSubsystemExist", "BSonicExist", "BRFIDExist", "BMagneticSenserExist", "BIntBrdExist", "ChassisType", "DriverBrand", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
