// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_battery.proto

package rbk.protocol;

public final class MessageBattery {
  private MessageBattery() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Message_BatteryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rbk.protocol.Message_Battery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double percetage = 1;</code>
     * @return The percetage.
     */
    double getPercetage();

    /**
     * <code>double charge_current = 2;</code>
     * @return The chargeCurrent.
     */
    double getChargeCurrent();

    /**
     * <code>double charge_voltage = 3;</code>
     * @return The chargeVoltage.
     */
    double getChargeVoltage();

    /**
     * <code>bool is_charging = 4;</code>
     * @return The isCharging.
     */
    boolean getIsCharging();

    /**
     * <code>double temperature = 5;</code>
     * @return The temperature.
     */
    double getTemperature();

    /**
     * <code>int32 cycle = 6;</code>
     * @return The cycle.
     */
    int getCycle();

    /**
     * <code>double max_charge_current = 7;</code>
     * @return The maxChargeCurrent.
     */
    double getMaxChargeCurrent();

    /**
     * <code>double max_charge_voltage = 8;</code>
     * @return The maxChargeVoltage.
     */
    double getMaxChargeVoltage();

    /**
     * <code>string extra = 9;</code>
     * @return The extra.
     */
    java.lang.String getExtra();
    /**
     * <code>string extra = 9;</code>
     * @return The bytes for extra.
     */
    com.google.protobuf.ByteString
        getExtraBytes();

    /**
     * <code>bytes user_data = 30;</code>
     * @return The userData.
     */
    com.google.protobuf.ByteString getUserData();
  }
  /**
   * Protobuf type {@code rbk.protocol.Message_Battery}
   */
  public static final class Message_Battery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rbk.protocol.Message_Battery)
      Message_BatteryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message_Battery.newBuilder() to construct.
    private Message_Battery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message_Battery() {
      extra_ = "";
      userData_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message_Battery();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rbk.protocol.MessageBattery.internal_static_rbk_protocol_Message_Battery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rbk.protocol.MessageBattery.internal_static_rbk_protocol_Message_Battery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rbk.protocol.MessageBattery.Message_Battery.class, rbk.protocol.MessageBattery.Message_Battery.Builder.class);
    }

    public static final int PERCETAGE_FIELD_NUMBER = 1;
    private double percetage_ = 0D;
    /**
     * <code>double percetage = 1;</code>
     * @return The percetage.
     */
    @java.lang.Override
    public double getPercetage() {
      return percetage_;
    }

    public static final int CHARGE_CURRENT_FIELD_NUMBER = 2;
    private double chargeCurrent_ = 0D;
    /**
     * <code>double charge_current = 2;</code>
     * @return The chargeCurrent.
     */
    @java.lang.Override
    public double getChargeCurrent() {
      return chargeCurrent_;
    }

    public static final int CHARGE_VOLTAGE_FIELD_NUMBER = 3;
    private double chargeVoltage_ = 0D;
    /**
     * <code>double charge_voltage = 3;</code>
     * @return The chargeVoltage.
     */
    @java.lang.Override
    public double getChargeVoltage() {
      return chargeVoltage_;
    }

    public static final int IS_CHARGING_FIELD_NUMBER = 4;
    private boolean isCharging_ = false;
    /**
     * <code>bool is_charging = 4;</code>
     * @return The isCharging.
     */
    @java.lang.Override
    public boolean getIsCharging() {
      return isCharging_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 5;
    private double temperature_ = 0D;
    /**
     * <code>double temperature = 5;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public double getTemperature() {
      return temperature_;
    }

    public static final int CYCLE_FIELD_NUMBER = 6;
    private int cycle_ = 0;
    /**
     * <code>int32 cycle = 6;</code>
     * @return The cycle.
     */
    @java.lang.Override
    public int getCycle() {
      return cycle_;
    }

    public static final int MAX_CHARGE_CURRENT_FIELD_NUMBER = 7;
    private double maxChargeCurrent_ = 0D;
    /**
     * <code>double max_charge_current = 7;</code>
     * @return The maxChargeCurrent.
     */
    @java.lang.Override
    public double getMaxChargeCurrent() {
      return maxChargeCurrent_;
    }

    public static final int MAX_CHARGE_VOLTAGE_FIELD_NUMBER = 8;
    private double maxChargeVoltage_ = 0D;
    /**
     * <code>double max_charge_voltage = 8;</code>
     * @return The maxChargeVoltage.
     */
    @java.lang.Override
    public double getMaxChargeVoltage() {
      return maxChargeVoltage_;
    }

    public static final int EXTRA_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile java.lang.Object extra_ = "";
    /**
     * <code>string extra = 9;</code>
     * @return The extra.
     */
    @java.lang.Override
    public java.lang.String getExtra() {
      java.lang.Object ref = extra_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        extra_ = s;
        return s;
      }
    }
    /**
     * <code>string extra = 9;</code>
     * @return The bytes for extra.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExtraBytes() {
      java.lang.Object ref = extra_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extra_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_DATA_FIELD_NUMBER = 30;
    private com.google.protobuf.ByteString userData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes user_data = 30;</code>
     * @return The userData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getUserData() {
      return userData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(percetage_) != 0) {
        output.writeDouble(1, percetage_);
      }
      if (java.lang.Double.doubleToRawLongBits(chargeCurrent_) != 0) {
        output.writeDouble(2, chargeCurrent_);
      }
      if (java.lang.Double.doubleToRawLongBits(chargeVoltage_) != 0) {
        output.writeDouble(3, chargeVoltage_);
      }
      if (isCharging_ != false) {
        output.writeBool(4, isCharging_);
      }
      if (java.lang.Double.doubleToRawLongBits(temperature_) != 0) {
        output.writeDouble(5, temperature_);
      }
      if (cycle_ != 0) {
        output.writeInt32(6, cycle_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxChargeCurrent_) != 0) {
        output.writeDouble(7, maxChargeCurrent_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxChargeVoltage_) != 0) {
        output.writeDouble(8, maxChargeVoltage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extra_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, extra_);
      }
      if (!userData_.isEmpty()) {
        output.writeBytes(30, userData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(percetage_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, percetage_);
      }
      if (java.lang.Double.doubleToRawLongBits(chargeCurrent_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, chargeCurrent_);
      }
      if (java.lang.Double.doubleToRawLongBits(chargeVoltage_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, chargeVoltage_);
      }
      if (isCharging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isCharging_);
      }
      if (java.lang.Double.doubleToRawLongBits(temperature_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, temperature_);
      }
      if (cycle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cycle_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxChargeCurrent_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, maxChargeCurrent_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxChargeVoltage_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, maxChargeVoltage_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extra_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, extra_);
      }
      if (!userData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(30, userData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rbk.protocol.MessageBattery.Message_Battery)) {
        return super.equals(obj);
      }
      rbk.protocol.MessageBattery.Message_Battery other = (rbk.protocol.MessageBattery.Message_Battery) obj;

      if (java.lang.Double.doubleToLongBits(getPercetage())
          != java.lang.Double.doubleToLongBits(
              other.getPercetage())) return false;
      if (java.lang.Double.doubleToLongBits(getChargeCurrent())
          != java.lang.Double.doubleToLongBits(
              other.getChargeCurrent())) return false;
      if (java.lang.Double.doubleToLongBits(getChargeVoltage())
          != java.lang.Double.doubleToLongBits(
              other.getChargeVoltage())) return false;
      if (getIsCharging()
          != other.getIsCharging()) return false;
      if (java.lang.Double.doubleToLongBits(getTemperature())
          != java.lang.Double.doubleToLongBits(
              other.getTemperature())) return false;
      if (getCycle()
          != other.getCycle()) return false;
      if (java.lang.Double.doubleToLongBits(getMaxChargeCurrent())
          != java.lang.Double.doubleToLongBits(
              other.getMaxChargeCurrent())) return false;
      if (java.lang.Double.doubleToLongBits(getMaxChargeVoltage())
          != java.lang.Double.doubleToLongBits(
              other.getMaxChargeVoltage())) return false;
      if (!getExtra()
          .equals(other.getExtra())) return false;
      if (!getUserData()
          .equals(other.getUserData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PERCETAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPercetage()));
      hash = (37 * hash) + CHARGE_CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getChargeCurrent()));
      hash = (37 * hash) + CHARGE_VOLTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getChargeVoltage()));
      hash = (37 * hash) + IS_CHARGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCharging());
      hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTemperature()));
      hash = (37 * hash) + CYCLE_FIELD_NUMBER;
      hash = (53 * hash) + getCycle();
      hash = (37 * hash) + MAX_CHARGE_CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxChargeCurrent()));
      hash = (37 * hash) + MAX_CHARGE_VOLTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxChargeVoltage()));
      hash = (37 * hash) + EXTRA_FIELD_NUMBER;
      hash = (53 * hash) + getExtra().hashCode();
      hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getUserData().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static rbk.protocol.MessageBattery.Message_Battery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static rbk.protocol.MessageBattery.Message_Battery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rbk.protocol.MessageBattery.Message_Battery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rbk.protocol.MessageBattery.Message_Battery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rbk.protocol.Message_Battery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rbk.protocol.Message_Battery)
        rbk.protocol.MessageBattery.Message_BatteryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rbk.protocol.MessageBattery.internal_static_rbk_protocol_Message_Battery_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rbk.protocol.MessageBattery.internal_static_rbk_protocol_Message_Battery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rbk.protocol.MessageBattery.Message_Battery.class, rbk.protocol.MessageBattery.Message_Battery.Builder.class);
      }

      // Construct using rbk.protocol.MessageBattery.Message_Battery.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        percetage_ = 0D;
        chargeCurrent_ = 0D;
        chargeVoltage_ = 0D;
        isCharging_ = false;
        temperature_ = 0D;
        cycle_ = 0;
        maxChargeCurrent_ = 0D;
        maxChargeVoltage_ = 0D;
        extra_ = "";
        userData_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rbk.protocol.MessageBattery.internal_static_rbk_protocol_Message_Battery_descriptor;
      }

      @java.lang.Override
      public rbk.protocol.MessageBattery.Message_Battery getDefaultInstanceForType() {
        return rbk.protocol.MessageBattery.Message_Battery.getDefaultInstance();
      }

      @java.lang.Override
      public rbk.protocol.MessageBattery.Message_Battery build() {
        rbk.protocol.MessageBattery.Message_Battery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public rbk.protocol.MessageBattery.Message_Battery buildPartial() {
        rbk.protocol.MessageBattery.Message_Battery result = new rbk.protocol.MessageBattery.Message_Battery(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(rbk.protocol.MessageBattery.Message_Battery result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.percetage_ = percetage_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.chargeCurrent_ = chargeCurrent_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.chargeVoltage_ = chargeVoltage_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.isCharging_ = isCharging_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.temperature_ = temperature_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.cycle_ = cycle_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.maxChargeCurrent_ = maxChargeCurrent_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.maxChargeVoltage_ = maxChargeVoltage_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.extra_ = extra_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.userData_ = userData_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rbk.protocol.MessageBattery.Message_Battery) {
          return mergeFrom((rbk.protocol.MessageBattery.Message_Battery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rbk.protocol.MessageBattery.Message_Battery other) {
        if (other == rbk.protocol.MessageBattery.Message_Battery.getDefaultInstance()) return this;
        if (other.getPercetage() != 0D) {
          setPercetage(other.getPercetage());
        }
        if (other.getChargeCurrent() != 0D) {
          setChargeCurrent(other.getChargeCurrent());
        }
        if (other.getChargeVoltage() != 0D) {
          setChargeVoltage(other.getChargeVoltage());
        }
        if (other.getIsCharging() != false) {
          setIsCharging(other.getIsCharging());
        }
        if (other.getTemperature() != 0D) {
          setTemperature(other.getTemperature());
        }
        if (other.getCycle() != 0) {
          setCycle(other.getCycle());
        }
        if (other.getMaxChargeCurrent() != 0D) {
          setMaxChargeCurrent(other.getMaxChargeCurrent());
        }
        if (other.getMaxChargeVoltage() != 0D) {
          setMaxChargeVoltage(other.getMaxChargeVoltage());
        }
        if (!other.getExtra().isEmpty()) {
          extra_ = other.extra_;
          bitField0_ |= 0x00000100;
          onChanged();
        }
        if (other.getUserData() != com.google.protobuf.ByteString.EMPTY) {
          setUserData(other.getUserData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                percetage_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                chargeCurrent_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                chargeVoltage_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                isCharging_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                temperature_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 48: {
                cycle_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 57: {
                maxChargeCurrent_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                maxChargeVoltage_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 74: {
                extra_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 242: {
                userData_ = input.readBytes();
                bitField0_ |= 0x00000200;
                break;
              } // case 242
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double percetage_ ;
      /**
       * <code>double percetage = 1;</code>
       * @return The percetage.
       */
      @java.lang.Override
      public double getPercetage() {
        return percetage_;
      }
      /**
       * <code>double percetage = 1;</code>
       * @param value The percetage to set.
       * @return This builder for chaining.
       */
      public Builder setPercetage(double value) {

        percetage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double percetage = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPercetage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        percetage_ = 0D;
        onChanged();
        return this;
      }

      private double chargeCurrent_ ;
      /**
       * <code>double charge_current = 2;</code>
       * @return The chargeCurrent.
       */
      @java.lang.Override
      public double getChargeCurrent() {
        return chargeCurrent_;
      }
      /**
       * <code>double charge_current = 2;</code>
       * @param value The chargeCurrent to set.
       * @return This builder for chaining.
       */
      public Builder setChargeCurrent(double value) {

        chargeCurrent_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double charge_current = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChargeCurrent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chargeCurrent_ = 0D;
        onChanged();
        return this;
      }

      private double chargeVoltage_ ;
      /**
       * <code>double charge_voltage = 3;</code>
       * @return The chargeVoltage.
       */
      @java.lang.Override
      public double getChargeVoltage() {
        return chargeVoltage_;
      }
      /**
       * <code>double charge_voltage = 3;</code>
       * @param value The chargeVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setChargeVoltage(double value) {

        chargeVoltage_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double charge_voltage = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChargeVoltage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chargeVoltage_ = 0D;
        onChanged();
        return this;
      }

      private boolean isCharging_ ;
      /**
       * <code>bool is_charging = 4;</code>
       * @return The isCharging.
       */
      @java.lang.Override
      public boolean getIsCharging() {
        return isCharging_;
      }
      /**
       * <code>bool is_charging = 4;</code>
       * @param value The isCharging to set.
       * @return This builder for chaining.
       */
      public Builder setIsCharging(boolean value) {

        isCharging_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_charging = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsCharging() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isCharging_ = false;
        onChanged();
        return this;
      }

      private double temperature_ ;
      /**
       * <code>double temperature = 5;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public double getTemperature() {
        return temperature_;
      }
      /**
       * <code>double temperature = 5;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(double value) {

        temperature_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double temperature = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        temperature_ = 0D;
        onChanged();
        return this;
      }

      private int cycle_ ;
      /**
       * <code>int32 cycle = 6;</code>
       * @return The cycle.
       */
      @java.lang.Override
      public int getCycle() {
        return cycle_;
      }
      /**
       * <code>int32 cycle = 6;</code>
       * @param value The cycle to set.
       * @return This builder for chaining.
       */
      public Builder setCycle(int value) {

        cycle_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cycle = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCycle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cycle_ = 0;
        onChanged();
        return this;
      }

      private double maxChargeCurrent_ ;
      /**
       * <code>double max_charge_current = 7;</code>
       * @return The maxChargeCurrent.
       */
      @java.lang.Override
      public double getMaxChargeCurrent() {
        return maxChargeCurrent_;
      }
      /**
       * <code>double max_charge_current = 7;</code>
       * @param value The maxChargeCurrent to set.
       * @return This builder for chaining.
       */
      public Builder setMaxChargeCurrent(double value) {

        maxChargeCurrent_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double max_charge_current = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxChargeCurrent() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxChargeCurrent_ = 0D;
        onChanged();
        return this;
      }

      private double maxChargeVoltage_ ;
      /**
       * <code>double max_charge_voltage = 8;</code>
       * @return The maxChargeVoltage.
       */
      @java.lang.Override
      public double getMaxChargeVoltage() {
        return maxChargeVoltage_;
      }
      /**
       * <code>double max_charge_voltage = 8;</code>
       * @param value The maxChargeVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setMaxChargeVoltage(double value) {

        maxChargeVoltage_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double max_charge_voltage = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxChargeVoltage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxChargeVoltage_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object extra_ = "";
      /**
       * <code>string extra = 9;</code>
       * @return The extra.
       */
      public java.lang.String getExtra() {
        java.lang.Object ref = extra_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          extra_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string extra = 9;</code>
       * @return The bytes for extra.
       */
      public com.google.protobuf.ByteString
          getExtraBytes() {
        java.lang.Object ref = extra_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          extra_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string extra = 9;</code>
       * @param value The extra to set.
       * @return This builder for chaining.
       */
      public Builder setExtra(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        extra_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>string extra = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtra() {
        extra_ = getDefaultInstance().getExtra();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>string extra = 9;</code>
       * @param value The bytes for extra to set.
       * @return This builder for chaining.
       */
      public Builder setExtraBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        extra_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString userData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes user_data = 30;</code>
       * @return The userData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getUserData() {
        return userData_;
      }
      /**
       * <code>bytes user_data = 30;</code>
       * @param value The userData to set.
       * @return This builder for chaining.
       */
      public Builder setUserData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        userData_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>bytes user_data = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000200);
        userData_ = getDefaultInstance().getUserData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:rbk.protocol.Message_Battery)
    }

    // @@protoc_insertion_point(class_scope:rbk.protocol.Message_Battery)
    private static final rbk.protocol.MessageBattery.Message_Battery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rbk.protocol.MessageBattery.Message_Battery();
    }

    public static rbk.protocol.MessageBattery.Message_Battery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message_Battery>
        PARSER = new com.google.protobuf.AbstractParser<Message_Battery>() {
      @java.lang.Override
      public Message_Battery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Message_Battery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message_Battery> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public rbk.protocol.MessageBattery.Message_Battery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rbk_protocol_Message_Battery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rbk_protocol_Message_Battery_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025message_battery.proto\022\014rbk.protocol\"\347\001" +
      "\n\017Message_Battery\022\021\n\tpercetage\030\001 \001(\001\022\026\n\016" +
      "charge_current\030\002 \001(\001\022\026\n\016charge_voltage\030\003" +
      " \001(\001\022\023\n\013is_charging\030\004 \001(\010\022\023\n\013temperature" +
      "\030\005 \001(\001\022\r\n\005cycle\030\006 \001(\005\022\032\n\022max_charge_curr" +
      "ent\030\007 \001(\001\022\032\n\022max_charge_voltage\030\010 \001(\001\022\r\n" +
      "\005extra\030\t \001(\t\022\021\n\tuser_data\030\036 \001(\014b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_rbk_protocol_Message_Battery_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rbk_protocol_Message_Battery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rbk_protocol_Message_Battery_descriptor,
        new java.lang.String[] { "Percetage", "ChargeCurrent", "ChargeVoltage", "IsCharging", "Temperature", "Cycle", "MaxChargeCurrent", "MaxChargeVoltage", "Extra", "UserData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
